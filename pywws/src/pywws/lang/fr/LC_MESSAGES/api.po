# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-16, pywws contributors
# This file is distributed under the same license as the pywws package.
#
# Translators:
# Jacques Desroches <jacques.desroches@weatherbyyou.com>, 2015
# Jacques Desroches <metelsto@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version:  pywws\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-03 08:28+0000\n"
"PO-Revision-Date: 2023-02-23 11:57-0500\n"
"Last-Translator: Jacques Desroches <metelsto@gmail.com>\n"
"Language: fr\n"
"Language-Team: French (http://www.transifex.com/jim-"
"easterbrook/pywws/language/fr/)\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../src/doc/api/pywws.calib.rst:2
msgid "pywws.calib"
msgstr "pywws.calib"

#: of pywws.calib:1
msgid "Calibrate raw weather station data"
msgstr "Calibre les données brutes de la station météo"

#: of pywws.calib:3
#, fuzzy
msgid ""
"This module allows adjustment of raw data from the weather station as "
"part of the 'processing' step (see :doc:`pywws.process`). For example, if"
" you have fitted a funnel to double your rain gauge's collection area, "
"you can write a calibration routine to double the rain value."
msgstr ""
"Ce module permet d'ajuster les données brutes de la station météo dans le"
" cadre de l'étape de 'traitement' (voir :doc:`pywws.Process` ). Par "
"exemple, si vous avez installé un entonnoir pour doubler votre zone de "
"collecte du pluviomètre, vous pouvez écrire une routine de calibration "
"pour doubler la valeur de pluie."

#: of pywws.calib:8
msgid ""
"The default calibration generates the relative atmospheric pressure. Any "
"user calibration you write must also do this."
msgstr ""
"L'étalonnage par défaut génère la pression atmosphérique relative. Tout "
"étalonnage utilisateur que vous écrivez doit également le faire."

#: of pywws.calib:12
msgid "Writing your calibration module"
msgstr "Écrire votre module de calibration"

#: of pywws.calib:14
msgid ""
"Firstly, decide where you want to keep your module. Like your text and "
"graph templates, it's best to keep it separate from the pywws code, so it"
" isn't affected by pywws upgrades. I suggest creating a ``modules`` "
"directory in the same place as your ``templates`` directory."
msgstr ""
"Tout d'abord, décider où vous voulez garder votre module. Comme vos "
"gabarits texte et graphe, il est préférable de le garder séparé du code "
"pywws, de sorte qu'il n'est pas affecté par les mises à jour de pywws. Je"
" suggère la création d'un répertoire ``modules`` au même endroit que "
"votre répertoire ``templates``."

#: of pywws.calib:19
#, fuzzy
msgid ""
"You could start by copying one of the example calibration modules, or you"
" can create a plain text file in your ``modules`` directory, e.g. "
"``calib.py`` and copy the following text into it:"
msgstr ""
"Vous pouvez commencer par copier l'un des exemples de modules "
"d'étalonnage, ou vous pouvez créer un fichier texte brut dans votre "
"répertoire ``modules``, par ex. ``calib.py`` et copiez-y le texte suivant"
" ::"

#: of pywws.calib:35
msgid ""
"The :class:`Calib` class has two methods. :py:meth:`Calib.__init__` is "
"the constructor and is a good place to set any constants you need. It is "
"passed a reference to the raw data storage which can be useful for "
"advanced tasks such as spike removal. :py:meth:`Calib.calib` generates a "
"single set of 'calibrated' data from a single set of 'raw' data. There "
"are a few rules to follow when writing this method:"
msgstr ""
"La classe :class:`Calib` a deux méthodes. :py:meth:`Calib.__init__` est "
"le constructeur et c'est un bon endroit pour définir les constantes dont "
"vous avez besoin. Une référence au stockage des données brutes lui est "
"transmise, ce qui peut être utile pour des tâches avancées telles que la "
"suppression des pics. :py:meth:`Calib.calib` génère un seul ensemble de "
"données \"calibrées\" à partir d'un seul ensemble de données \"brutes\". "
"Il y a quelques règles à suivre lors de l'écriture de cette méthode :"

#: of pywws.calib:42
msgid ""
"Make sure you include the line ``result = dict(raw)``, which copies all "
"the raw data to your result value, at the start."
msgstr ""
"Assurez-vous d'inclure la ligne ``result = dict(raw)``, qui permet de "
"copier toutes les données brutes à votre résultat, au début."

#: of pywws.calib:45
msgid "Don't modify any of the raw data."
msgstr "Ne modifiez pas les données brutes."

#: of pywws.calib:47
msgid "Make sure you set ``result['rel_pressure']``."
msgstr "Assurez-vous que vous définissez ``result['rel_pressure']``."

#: of pywws.calib:49
msgid "Don't forget to ``return`` the result at the end."
msgstr "N'oubliez pas de retourner (``return``) le résultat à la fin."

#: of pywws.calib:51
msgid ""
"When you've finished writing your calibration module you can get pywws to"
" use it by putting its location in your ``weather.ini`` file. It goes in "
"the ``[paths]`` section, as shown in the example below::"
msgstr ""
"Lorsque vous avez fini d'écrire votre module de calibration vous pouvez "
"demander à pywws de l'utiliser en mettant son emplacement dans votre "
"fichier ``weather.ini``. Il va dans les sections ``[paths]``, comme le "
"montre l'exemple ci-dessous::"

#: of pywws.calib:61
msgid ""
"Note that the ``user_calib`` value need not include the ``.py`` at the "
"end of the file name."
msgstr ""
"Notez que la valeur de ``user_calib`` ne doit pas inclure le ``.py`` à la"
" fin du nom de fichier."

#: ../../src/doc/api/pywws.calib.rst:17
#: ../../src/doc/api/pywws.constants.rst:17
#: ../../src/doc/api/pywws.device_ctypes_hidapi.rst:17
#: ../../src/doc/api/pywws.device_cython_hidapi.rst:17
#: ../../src/doc/api/pywws.device_libusb1.rst:17
#: ../../src/doc/api/pywws.device_pyusb.rst:17
#: ../../src/doc/api/pywws.device_pyusb1.rst:17
#: ../../src/doc/api/pywws.filedata.rst:17
#: ../../src/doc/api/pywws.livelogdaemon.rst:23
#: ../../src/doc/api/pywws.logdata.rst:23 ../../src/doc/api/pywws.logger.rst:23
#: ../../src/doc/api/pywws.plot.rst:23 ../../src/doc/api/pywws.process.rst:29
#: ../../src/doc/api/pywws.regulartasks.rst:17
#: ../../src/doc/api/pywws.service.copy.rst:17
#: ../../src/doc/api/pywws.service.cwop.rst:17
#: ../../src/doc/api/pywws.service.ftp.rst:17
#: ../../src/doc/api/pywws.service.mastodon.rst:17
#: ../../src/doc/api/pywws.service.metoffice.rst:17
#: ../../src/doc/api/pywws.service.mqtt.rst:17
#: ../../src/doc/api/pywws.service.openweathermap.rst:17
#: ../../src/doc/api/pywws.service.pwsweather.rst:17
#: ../../src/doc/api/pywws.service.rst:23
#: ../../src/doc/api/pywws.service.sftp.rst:17
#: ../../src/doc/api/pywws.service.temperaturnu.rst:17
#: ../../src/doc/api/pywws.service.twitter.rst:17
#: ../../src/doc/api/pywws.service.underground.rst:17
#: ../../src/doc/api/pywws.service.weathercloud.rst:17
#: ../../src/doc/api/pywws.service.wetterarchivde.rst:17
#: ../../src/doc/api/pywws.service.windy.rst:17
#: ../../src/doc/api/pywws.sqlite3data.rst:17
#: ../../src/doc/api/pywws.storage.rst:23
#: ../../src/doc/api/pywws.template.rst:23
#: ../../src/doc/api/pywws.weatherstation.rst:17
#: ../../src/doc/api/pywws.windrose.rst:23
msgid "Classes"
msgstr "Classes"

#: ../../src/doc/api/pywws.calib.rst:21:<autosummary>:1
#, fuzzy
msgid ":py:obj:`Calib <pywws.calib.Calib>`\\ \\(params\\, stored\\_data\\)"
msgstr ":obj:`Calib <pywws.calib.Calib>`\\ (params, stored_data)"

#: ../../src/doc/api/pywws.calib.rst:21:<autosummary>:1
msgid "Calibration class that implements default or user calibration."
msgstr ""
"Classe qui implémente la calibration par défaut ou la calibration par "
"l'utilisateur."

#: ../../src/doc/api/pywws.calib.rst:21:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`DefaultCalib <pywws.calib.DefaultCalib>`\\ \\(params\\, "
"stored\\_data\\)"
msgstr ":obj:`DefaultCalib <pywws.calib.DefaultCalib>`\\ (params, stored_data)"

#: ../../src/doc/api/pywws.calib.rst:21:<autosummary>:1
msgid "Default calibration class."
msgstr "Classe de calibration par défaut."

#: ../../<rst_epilog>:4
msgid ""
"Comments or questions? Please subscribe to the pywws mailing list "
"http://groups.google.com/group/pywws and let us know."
msgstr ""
"Commentaires et questions? SVP, abonnez-vous à la liste pywws  "
"http://groups.google.com/group/pywws et faites-vous entendre."

#: ../../src/doc/api/pywws.constants.rst:2
msgid "pywws.constants"
msgstr "pywws.constants"

#: of pywws.constants:1
msgid "Bits of data used in several places."
msgstr "Bits de données utilisées dans plusieurs endroits."

#: of pywws.constants:3
msgid ""
"This module collects together some 'constants' that are used in other "
"pywws modules."
msgstr ""
"Ce module rassemble certaines \"constantes\" qui sont utilisées dans "
"d'autres modules pywws."

#: ../../src/doc/api/pywws.constants.rst:20:<autosummary>:1
#, fuzzy
msgid ":py:obj:`Twitter <pywws.constants.Twitter>`\\ \\(\\)"
msgstr ":obj:`Twitter <pywws.constants.Twitter>`\\"

#: ../../src/doc/api/pywws.conversions.rst:2
msgid "pywws.conversions"
msgstr "pywws.conversions"

#: of pywws.conversions:1
msgid ""
"conversions.py - a set of functions to convert pywws native units "
"(Centigrade, mm, m/s, hPa) to other popular units"
msgstr ""
"conversions.py est un ensemble de fonctions pour convertir les unités "
"pywws natives (centigrades, mm, m / s, hPa), en d'autres unités de mesure"
" populaires"

#: ../../src/doc/api/pywws.conversions.rst:13
#: ../../src/doc/api/pywws.forecast.rst:13
#: ../../src/doc/api/pywws.hourly.rst:13 ../../src/doc/api/pywws.livelog.rst:13
#: ../../src/doc/api/pywws.livelogdaemon.rst:13
#: ../../src/doc/api/pywws.localisation.rst:13
#: ../../src/doc/api/pywws.logdata.rst:13 ../../src/doc/api/pywws.logger.rst:13
#: ../../src/doc/api/pywws.mergeewdata.rst:13
#: ../../src/doc/api/pywws.plot.rst:13 ../../src/doc/api/pywws.process.rst:13
#: ../../src/doc/api/pywws.reprocess.rst:13
#: ../../src/doc/api/pywws.service.rst:13
#: ../../src/doc/api/pywws.setweatherstation.rst:13
#: ../../src/doc/api/pywws.storage.rst:13
#: ../../src/doc/api/pywws.template.rst:13
#: ../../src/doc/api/pywws.testweatherstation.rst:13
#: ../../src/doc/api/pywws.timezone.rst:13
#: ../../src/doc/api/pywws.usbtest.rst:13
#: ../../src/doc/api/pywws.version.rst:13
#: ../../src/doc/api/pywws.windrose.rst:13
msgid "Functions"
msgstr "Fonctions"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`apparent_temp <pywws.conversions.apparent_temp>`\\ \\(temp\\, "
"rh\\, wind\\)"
msgstr ":obj:`apparent_temp <pywws.conversions.apparent_temp>`\\ (temp, hr, vent)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid ""
"Compute apparent temperature (real feel), using formula from "
"http://www.bom.gov.au/info/thermal_stress/"
msgstr ""
"Calcule la température apparente (sensation réelle), en utilisant la "
"formule provenant de http://www.bom.gov.au/info/thermal_stress/"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`cadhumidex <pywws.conversions.cadhumidex>`\\ \\(temp\\, "
"humidity\\)"
msgstr ":obj:`cadhumidex <pywws.conversions.cadhumidex>`\\ (temp, humidité)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Calculate Humidity Index as per Canadian Weather Standards"
msgstr "Calcule l'Indice d'Humidité selon les Normes Météo Canadiennes"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`cloud_base <pywws.conversions.cloud_base>`\\ \\(temp\\, hum\\)"
msgstr ":obj:`dew_point <pywws.conversions.dew_point>`\\ (temp, hum)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid ""
"Calculate cumulus cloud base in metres, using formula from "
"https://en.wikipedia.org/wiki/Cloud_base or "
"https://de.wikipedia.org/wiki/Kondensationsniveau#Konvektionskondensationsniveau"
msgstr ""

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`cloud_ft <pywws.conversions.cloud_ft>`\\ \\(m\\)"
msgstr ":obj:`wind_bft <pywws.conversions.wind_bft>`\\ (ms)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid "Convert cloud base from metres to feet."
msgstr "Converti les précipitations de millimètres, à pouces"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`dew_point <pywws.conversions.dew_point>`\\ \\(temp\\, hum\\)"
msgstr ":obj:`dew_point <pywws.conversions.dew_point>`\\ (temp, hum)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid ""
"Compute dew point, using formula from "
"http://en.wikipedia.org/wiki/Dew_point."
msgstr ""
"Calcule le point de rosée, en utilisant la formule provenant de "
"http://en.wikipedia.org/wiki/Dew_point."

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`illuminance_wm2 <pywws.conversions.illuminance_wm2>`\\ \\(lux\\)"
msgstr ":obj:`illuminance_wm2 <pywws.conversions.illuminance_wm2>`\\ (lux)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Approximate conversion of illuminance in lux to solar radiation in W/m2"
msgstr ""
"Conversion approximative de la luminosité en lux, au rayonnement solaire "
"en W/m2"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`pressure_inhg <pywws.conversions.pressure_inhg>`\\ \\(hPa\\)"
msgstr ":obj:`pressure_inhg <pywws.conversions.pressure_inhg>`\\ (hPa)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Convert pressure from hectopascals/millibar to inches of mercury"
msgstr "Converti la pression de hectopascals/millibars, à pouces de mercure"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`pressure_trend_text <pywws.conversions.pressure_trend_text>`\\ "
"\\(trend\\)"
msgstr ""
":obj:`pressure_trend_text <pywws.conversions.pressure_trend_text>`\\ "
"(trend)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Convert pressure trend to a string, as used by the UK met office."
msgstr ""
"Converti la tendance de la pression en une chaîne, telle qu'utilisée par "
"le UK Met Office."

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`rain_inch <pywws.conversions.rain_inch>`\\ \\(mm\\)"
msgstr ":obj:`rain_inch <pywws.conversions.rain_inch>`\\ (mm)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Convert rainfall from millimetres to inches"
msgstr "Converti les précipitations de millimètres, à pouces"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`scale <pywws.conversions.scale>`\\ \\(value\\, factor\\)"
msgstr ":obj:`cadhumidex <pywws.conversions.cadhumidex>`\\ (temp, humidité)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Multiply value by factor, allowing for None values."
msgstr ""

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`temp_f <pywws.conversions.temp_f>`\\ \\(c\\)"
msgstr ":obj:`temp_f <pywws.conversions.temp_f>`\\ (c)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Convert temperature from Celsius to Fahrenheit"
msgstr "Converti la température de Celsius, à Fahrenheit"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`usaheatindex <pywws.conversions.usaheatindex>`\\ \\(temp\\, "
"humidity\\[\\, dew\\]\\)"
msgstr ""
":obj:`usaheatindex <pywws.conversions.usaheatindex>`\\ (temp, humidité, "
"point de rosée)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Calculate Heat Index as per USA National Weather Service Standards"
msgstr ""
"Calcule l'Indice de Chaleur selon les normes du Service Météorologique "
"National USA"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`wind_bft <pywws.conversions.wind_bft>`\\ \\(ms\\)"
msgstr ":obj:`wind_bft <pywws.conversions.wind_bft>`\\ (ms)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Convert wind from metres per second to Beaufort scale"
msgstr "Converti la vitesse du vent de mètres par seconde, vers l'échelle Beaufort"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`wind_chill <pywws.conversions.wind_chill>`\\ \\(temp\\, wind\\)"
msgstr ":obj:`wind_chill <pywws.conversions.wind_chill>`\\ (temp, vent)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid ""
"Compute wind chill, using formula from "
"http://en.wikipedia.org/wiki/wind_chill"
msgstr ""
"Calcule le refroidissement éolien, en utilisant la formule provenant de "
"http://en.wikipedia.org/wiki/wind_chill"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`wind_kmph <pywws.conversions.wind_kmph>`\\ \\(ms\\)"
msgstr ":obj:`wind_kmph <pywws.conversions.wind_kmph>`\\ (ms)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Convert wind from metres per second to kilometres per hour"
msgstr "Converti la vitesse du vent de mètres par seconde, à kilomètres par heure"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`wind_kn <pywws.conversions.wind_kn>`\\ \\(ms\\)"
msgstr ":obj:`wind_kn <pywws.conversions.wind_kn>`\\ (ms)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Convert wind from metres per second to knots"
msgstr "Converti la vitesse du vent de mètres par seconde, à noeuds"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`wind_mph <pywws.conversions.wind_mph>`\\ \\(ms\\)"
msgstr ":obj:`wind_mph <pywws.conversions.wind_mph>`\\ (ms)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Convert wind from metres per second to miles per hour"
msgstr "Converti la vitesse du vent de mètres par seconde, en miles par heure"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`winddir_average <pywws.conversions.winddir_average>`\\ "
"\\(data\\, threshold\\, min\\_count\\)"
msgstr ""
":obj:`winddir_average <pywws.conversions.winddir_average>`\\ (données, "
"seuil, min_count)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Compute average wind direction (in degrees) for a slice of data."
msgstr ""
"Calcul la direction moyenne du vent (en degrés) pour une tranche de "
"données."

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`winddir_degrees <pywws.conversions.winddir_degrees>`\\ \\(pts\\)"
msgstr ":obj:`winddir_degrees <pywws.conversions.winddir_degrees>`\\ (pts)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Convert wind direction from 0..15 to degrees"
msgstr "Converti la direction du vent de 0..15 en degrés"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
#, fuzzy
msgid ":py:obj:`winddir_text <pywws.conversions.winddir_text>`\\ \\(pts\\)"
msgstr ":obj:`winddir_text <pywws.conversions.winddir_text>`\\ (pts)"

#: ../../src/doc/api/pywws.conversions.rst:35:<autosummary>:1
msgid "Convert wind direction from 0..15 to compass point text"
msgstr "Converti la direction du vent de 0..15, en points cardinaux"

#: ../../src/doc/api/pywws.device_ctypes_hidapi.rst:2
#, fuzzy
msgid "pywws.device\\_ctypes\\_hidapi"
msgstr "pywws.device_ctypes_hidapi"

#: of pywws.device_ctypes_hidapi:1
msgid "Low level USB interface to weather station, using ctypes to access hidapi."
msgstr ""
"Interface USB de bas niveau de la station météo, utilisant ctype pour "
"accéder hidapi."

#: of pywws.device_ctypes_hidapi:4 pywws.device_cython_hidapi:4
#: pywws.device_libusb1:4 pywws.device_pyusb:4 pywws.device_pyusb1:4
#: pywws.filedata:4 pywws.localisation:13 pywws.mergeewdata:13 pywws.plot:15
#: pywws.sqlite3data:4 pywws.storage:4 pywws.template:14 pywws.timezone:5
#: pywws.weatherstation:8 pywws.windrose:16
msgid "Introduction"
msgstr "Introduction"

#: of pywws.device_ctypes_hidapi:6
msgid ""
"This module handles low level communication with the weather station via "
"`ctypes <http://docs.python.org/2/library/ctypes.html>`_ and the `hidapi "
"<https://github.com/signal11/hidapi>`_ library. It is one of several USB "
"device modules, each of which uses a different USB library interface. See"
" :ref:`Installation - USB library<dependencies-usb>` for details."
msgstr ""
"Ce module gère la communication de bas niveau avec la station météo via "
"`ctypes <http://docs.python.org/2/library/ctypes.html>`_ et le `hidapi "
"<https://github.com/signal11/hidapi >`_ library. Il s'agit de l'un des "
"nombreux modules de périphériques USB, chacun utilisant une interface de "
"librairie USB différente. Voir :ref:`Installation - Librairie USB"
"<dépendances-usb>` pour plus de détails."

#: of pywws.device_ctypes_hidapi:15 pywws.device_cython_hidapi:13
#: pywws.device_libusb1:14 pywws.device_pyusb:13 pywws.device_pyusb1:13
msgid "Testing"
msgstr "Vérification"

#: of pywws.device_ctypes_hidapi:17 pywws.device_cython_hidapi:15
#: pywws.device_pyusb:15 pywws.device_pyusb1:15
#, fuzzy
msgid ""
"Run :py:mod:`pywws.testweatherstation` with increased verbosity so it "
"reports which USB device access module is being used::"
msgstr ""
"Exécutez :py:mod:`pywws.TestWeatherStation` avec une verbosité accrue "
"afin qu'il signale quel module d'accès au périphérique USB est utilisé ::"

#: of pywws.device_ctypes_hidapi:32 pywws.device_cython_hidapi:30
#: pywws.device_libusb1:34 pywws.device_pyusb:30 pywws.device_pyusb1:30
msgid "API"
msgstr "API"

#: ../../src/doc/api/pywws.device_ctypes_hidapi.rst:20:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`USBDevice <pywws.device_ctypes_hidapi.USBDevice>`\\ "
"\\(vendor\\_id\\, product\\_id\\)"
msgstr ""
":obj:`USBDevice <pywws.device_ctypes_hidapi.USBDevice>`\\ (vendor_id, "
"product_id)"

#: ../../src/doc/api/pywws.device_ctypes_hidapi.rst:20:<autosummary>:1
msgid "Low level USB device access via hidapi library."
msgstr "Accès de bas niveau au périphérique USB via la bibliothèque hidapi."

#: ../../src/doc/api/pywws.device_cython_hidapi.rst:2
#, fuzzy
msgid "pywws.device\\_cython\\_hidapi"
msgstr "pywws.device_cython_hidapi"

#: of pywws.device_cython_hidapi:1
msgid "Low level USB interface to weather station, using cython-hidapi."
msgstr "Interface USB de bas niveau de la station météo, utilisant cython-hidapi."

#: of pywws.device_cython_hidapi:6
msgid ""
"This module handles low level communication with the weather station via "
"the `cython-hidapi <https://github.com/gbishop/cython-hidapi>`_ library. "
"It is one of several USB device modules, each of which uses a different "
"USB library interface. See :ref:`Installation - USB library<dependencies-"
"usb>` for details."
msgstr ""
"Ce module gère la communication de bas niveau avec la station météo via "
"la bibliothèque `cython-hidapi <https://github.com/gbishop/cython-"
"hidapi>`_. Il s'agit de l'un des nombreux modules de périphérique USB, "
"chacun utilisant une interface de bibliothèque USB différente. Voir "
":ref:`Installation - Bibliothèque USB<dépendances-usb>` pour plus de "
"détails."

#: ../../src/doc/api/pywws.device_cython_hidapi.rst:20:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`USBDevice <pywws.device_cython_hidapi.USBDevice>`\\ "
"\\(idVendor\\, idProduct\\)"
msgstr ""
":obj:`USBDevice <pywws.device_cython_hidapi.USBDevice>`\\ (idVendor, "
"idProduct)"

#: ../../src/doc/api/pywws.device_cython_hidapi.rst:20:<autosummary>:1
msgid "Low level USB device access via cython-hidapi library."
msgstr "Accès de bas niveau au périphérique USB via la bibliothèque cython-hidapi."

#: ../../src/doc/api/pywws.device_libusb1.rst:2
#, fuzzy
msgid "pywws.device\\_libusb1"
msgstr "pywws.device_libusb1"

#: of pywws.device_libusb1:1
msgid "Low level USB interface to weather station, using python-libusb1."
msgstr ""
"Interface USB de bas niveau de la station météo, à l'aide de python-"
"libusb1."

#: of pywws.device_libusb1:6
msgid ""
"This module handles low level communication with the weather station via "
"the `python-libusb1 <https://github.com/vpelletier/python-libusb1>`_ "
"library. It is one of several USB device modules, each of which uses a "
"different USB library interface. See :ref:`Installation - USB library"
"<dependencies-usb>` for details."
msgstr ""
"Ce module gère la communication de bas niveau avec la station météo via "
"la bibliothèque `python-libusb1 <https://github.com/vpelletier/python-"
"libusb1>`_. Il s'agit de l'un des nombreux modules de périphériques USB, "
"chacun utilisant une interface de bibliothèque USB différente. Voir "
":ref:`Installation - Bibliothèque USB<dépendances-usb>` pour plus de "
"détails."

#: of pywws.device_libusb1:16
#, fuzzy
msgid ""
"Run :py:mod:`pywws-testweatherstation <pywws.testweatherstation>` with "
"increased verbosity so it reports which USB device access module is being"
" used::"
msgstr ""
"Exécutez :py:mod:`pywws-testweatherstation <pywws.TestWeatherStation>` "
"avec une verbosité accrue afin qu'il signale quel module d'accès au "
"périphérique USB est utilisé ::"

#: ../../src/doc/api/pywws.device_libusb1.rst:20:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`USBDevice <pywws.device_libusb1.USBDevice>`\\ \\(idVendor\\, "
"idProduct\\)"
msgstr ":obj:`USBDevice <pywws.device_libusb1.USBDevice>`\\ (idVendor, idProduct)"

#: ../../src/doc/api/pywws.device_libusb1.rst:20:<autosummary>:1
msgid "Low level USB device access via python-libusb1 library."
msgstr ""
"Accès de bas niveau aux périphériques USB via la bibliothèque python-"
"libusb1."

#: ../../src/doc/api/pywws.device_pyusb.rst:2
#, fuzzy
msgid "pywws.device\\_pyusb"
msgstr "pywws.device_pyusb"

#: of pywws.device_pyusb:1
msgid "Low level USB interface to weather station, using PyUSB v0.4."
msgstr "Interface USB de bas niveau de la station météo, à l'aide de PyUSB v0.4."

#: of pywws.device_pyusb:6
msgid ""
"This module handles low level communication with the weather station via "
"the `PyUSB <http://sourceforge.net/apps/trac/pyusb/>`_ library. It is one"
" of several USB device modules, each of which uses a different USB "
"library interface. See :ref:`Installation - USB library<dependencies-"
"usb>` for details."
msgstr ""
"Ce module gère la communication de bas niveau avec la station météo via "
"la bibliothèque `PyUSB <http://sourceforge.net/apps/trac/pyusb/>`_. Il "
"s'agit de l'un des nombreux modules de périphérique USB, chacun utilisant"
" une interface de bibliothèque USB différente. Voir :ref:`Installation - "
"Bibliothèque USB<dépendances-usb>` pour plus de détails."

#: ../../src/doc/api/pywws.device_pyusb.rst:20:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`USBDevice <pywws.device_pyusb.USBDevice>`\\ \\(idVendor\\, "
"idProduct\\)"
msgstr ":obj:`USBDevice <pywws.device_pyusb.USBDevice>`\\ (idVendor, idProduct)"

#: ../../src/doc/api/pywws.device_pyusb.rst:20:<autosummary>:1
msgid "Low level USB device access via PyUSB library."
msgstr "Accès de bas niveau au périphérique USB via la bibliothèque PyUSB."

#: ../../src/doc/api/pywws.device_pyusb1.rst:2
#, fuzzy
msgid "pywws.device\\_pyusb1"
msgstr "pywws.device_pyusb1"

#: of pywws.device_pyusb1:1
msgid "Low level USB interface to weather station, using PyUSB v1.0."
msgstr "Interface USB de bas niveau de la station météo, à l'aide de PyUSB v1.0."

#: of pywws.device_pyusb1:6
msgid ""
"This module handles low level communication with the weather station via "
"the `PyUSB <http://sourceforge.net/apps/trac/pyusb/>`_ library (version "
"1.0). It is one of several USB device modules, each of which uses a "
"different USB library interface. See :ref:`Installation - USB library"
"<dependencies-usb>` for details."
msgstr ""
"Ce module gère la communication de bas niveau avec la station météo via "
"la bibliothèque `PyUSB <http://sourceforge.net/apps/trac/pyusb/>`_ "
"(version 1.0). Il s'agit de l'un des nombreux modules de périphériques "
"USB, chacun utilisant une interface de bibliothèque USB différente. Voir "
":ref:`Installation - Bibliothèque USB<dépendances-usb>` pour plus de "
"détails."

#: ../../src/doc/api/pywws.device_pyusb1.rst:20:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`USBDevice <pywws.device_pyusb1.USBDevice>`\\ \\(idVendor\\, "
"idProduct\\)"
msgstr ":obj:`USBDevice <pywws.device_pyusb1.USBDevice>`\\ (idVendor, idProduct)"

#: ../../src/doc/api/pywws.device_pyusb1.rst:20:<autosummary>:1
msgid "Low level USB device access via PyUSB 1.0 library."
msgstr "Accès de bas niveau au périphérique USB via la bibliothèque PyUSB 1.0."

#: ../../src/doc/api/pywws.filedata.rst:2
#, fuzzy
msgid "pywws.filedata"
msgstr "pywws.Plot"

#: of pywws.filedata:1
#, fuzzy
msgid "Store weather data in easy to access files"
msgstr ""
"DataStore.py - enregistre les lectures dans des fichiers facilement "
"accessibles"

#: of pywws.filedata:6
#, fuzzy
msgid ""
"This module is at the core of pywws file based storage. It stores data on"
" disc, but without the overhead of a full scale database system. I have "
"designed it to run on a small memory machine such as a Raspberry Pi or "
"even a router. To minimise memory usage it only loads one day's worth of "
"raw data at a time into memory."
msgstr ""
"Ce module est au cœur de mon logiciel de station météo. Il stocke les "
"données sur disque, mais sans le coût d'un système de base de données à "
"grande échelle. Je l'ai conçu pour fonctionner sur une machine avec peu "
"de mémoire comme mon routeur Asus. Pour minimiser l'utilisation de la "
"mémoire, il ne charge que l'équivalent d'une journée de données à la fois"
" dans la mémoire."

#: of pywws.filedata:12 pywws.sqlite3data:25 pywws.storage:13
msgid ""
"From a \"user\" point of view, the data is accessed as a cross between a "
"list and a dictionary. Each data record is indexed by a "
":py:class:`datetime.datetime` object (dictionary behaviour), but records "
"are stored in order and can be accessed as slices (list behaviour)."
msgstr ""
"D'un  point de vue \"utilisateur\", les données sont accédées comme un "
"croisement entre une liste et un dictionnaire. Chaque enregistrement de "
"données est indexée par un objet :py:class:`datetime.datetime` "
"(comportement dictionnaire), mais les enregistrements sont stockés dans "
"l'ordre et peut être consulté sous forme de tranches (comportement "
"liste)."

#: of pywws.filedata:18 pywws.sqlite3data:31 pywws.storage:19
msgid ""
"For example, to access the hourly data for Christmas day 2009, one might "
"do the following::"
msgstr ""
"Par exemple, pour accéder aux données horaires pour le jour de Noël 2009,"
" on peut faire ce qui suit ::"

#: of pywws.filedata:27 pywws.sqlite3data:40 pywws.storage:29
msgid "Some more examples of data access::"
msgstr "D'autres exemples d'accès aux données::"

#: of pywws.filedata:36 pywws.sqlite3data:49 pywws.storage:38
msgid ""
"Note that the :py:class:`datetime.datetime` index is in UTC. You may need"
" to apply an offset to convert to local time."
msgstr ""
"Notez que l'indice :py:class:`datetime.datetime` est au format UTC.  Vous"
" devrez peut-être appliquer un décalage pour convertir en heure locale."

#: of pywws.filedata:39 pywws.sqlite3data:52
#, fuzzy
msgid ""
"The module provides five classes to store different data. "
":py:class:`RawStore` takes \"raw\" data from the weather station; "
":py:class:`CalibStore`, :py:class:`HourlyStore`, :py:class:`DailyStore` "
"and :py:class:`MonthlyStore` store processed data (see "
":py:mod:`pywws.process`). All are derived from the same ``CoreStore`` "
"class, they only differ in the keys and types of data stored in each "
"record."
msgstr ""
"Le module fournit cinq classes pour stocker des données différentes.  "
":py:class:`data_store` prend les données  \"brutes\" de la station météo;"
" :py:class:`calib_store`, :py:class:`hourly_store`, "
":py:class:`daily_store` et :py:class:`monthly_store` stockent les données"
" traitées (voir :py:mod:`pywws.Process`). Les trois sont dérivés de la "
"même classe ``core_store``, ils ne diffèrent que par les clés et les "
"types de données stockées dans chaque enregistrement."

#: of pywws.filedata:48 pywws.logdata:38 pywws.mergeewdata:32 pywws.plot:494
#: pywws.sqlite3data:61 pywws.storage:45 pywws.template:272 pywws.timezone:14
#: pywws.weatherstation:55 pywws.windrose:242
msgid "Detailed API"
msgstr "API détaillé"

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`CalibStore <pywws.filedata.CalibStore>`\\ \\(root\\_dir\\)"
msgstr ":obj:`calib_store <pywws.DataStore.calib_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
msgid "Stores 'calibrated' weather station data."
msgstr "Stocke les données  \"calibrées\" de la station météo."

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`CoreStore <pywws.filedata.CoreStore>`\\ \\(root\\_dir\\)"
msgstr ":obj:`core_store <pywws.DataStore.core_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`DailyStore <pywws.filedata.DailyStore>`\\ \\(root\\_dir\\)"
msgstr ":obj:`daily_store <pywws.DataStore.daily_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
msgid "Stores daily summary weather station data."
msgstr "Stocke les données sommaires quotidiens de la stations météo."

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`HourlyStore <pywws.filedata.HourlyStore>`\\ \\(root\\_dir\\)"
msgstr ":obj:`hourly_store <pywws.DataStore.hourly_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
msgid "Stores hourly summary weather station data."
msgstr "Stocke les données sommaires horaire de la stations météo."

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`MonthlyStore <pywws.filedata.MonthlyStore>`\\ \\(root\\_dir\\)"
msgstr ":obj:`monthly_store <pywws.DataStore.monthly_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
msgid "Stores monthly summary weather station data."
msgstr "Stocke les données mensuelles sommaire de la stations météo."

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`RawStore <pywws.filedata.RawStore>`\\ \\(root\\_dir\\)"
msgstr ":obj:`data_store <pywws.DataStore.data_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.filedata.rst:25:<autosummary>:1
#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
msgid "Stores raw weather station data."
msgstr "Stocke les données brutes de la station météo."

#: ../../src/doc/api/pywws.forecast.rst:2
#, fuzzy
msgid "pywws.forecast"
msgstr "pywws.Forecast"

#: of pywws.forecast:1
msgid "Predict future weather using recent data ::"
msgstr "Prédit le temps futur en utilisant les données récentes ::"

#: ../../src/doc/api/pywws.forecast.rst:18:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.forecast.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.Forecast.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.forecast.rst:18:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`zambretti <pywws.forecast.zambretti>`\\ \\(params\\, "
"hourly\\_data\\)"
msgstr ":obj:`Zambretti <pywws.Forecast.Zambretti>`\\ (params, hourly_data)"

#: ../../src/doc/api/pywws.forecast.rst:18:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`zambretti_code <pywws.forecast.zambretti_code>`\\ \\(params\\, "
"hourly\\_data\\)"
msgstr ""
":obj:`ZambrettiCode <pywws.Forecast.ZambrettiCode>`\\ (params, "
"hourly_data)"

#: ../../src/doc/api/pywws.forecast.rst:18:<autosummary>:1
msgid "Simple implementation of Zambretti forecaster algorithm."
msgstr "Implémentation simple de l'algorithme de prévision de Zambretti."

#: ../../src/doc/api/pywws.hourly.rst:2
#, fuzzy
msgid "pywws.hourly"
msgstr "pywws.Hourly"

#: of pywws.hourly:1
msgid ""
"Get weather data, process it, prepare graphs & text files and upload to a"
" web site."
msgstr ""
"Obtient les données météorologiques, les traite, prépare les fichiers de "
"graphes & textes et les téléverse sur un site web."

#: of pywws.hourly:4
msgid "Typically run every hour from cron. ::"
msgstr "Exécuté à partir d'une tâche cron, en règle générale toutes les heures. ::"

#: of pywws.hourly:14
msgid ""
"This script does little more than call other modules in sequence to get "
"data from the weather station, process it, plot some graphs, generate "
"some text files and upload the results to a web site."
msgstr ""
"Ce script ne fait guère plus que d'appeler d'autres modules dans l'ordre "
"pour obtenir les données de la station météo, les traiter, tracer des "
"graphes, de générer des fichiers texte et transférer le résultat vers un "
"site web."

#: of pywws.hourly:18
#, fuzzy
msgid ""
"For more information on using ``pywws.hourly``, see "
":doc:`../guides/hourlylogging`."
msgstr ""
"Pour plus d'informations sur l'utilisation de ``Hourly.py``, voir "
":doc:`../guides/hourlylogging`."

#: ../../src/doc/api/pywws.hourly.rst:17:<autosummary>:1
#, fuzzy
msgid ":py:obj:`hourly <pywws.hourly.hourly>`\\ \\(data\\_dir\\)"
msgstr ":obj:`Hourly <pywws.Hourly.Hourly>`\\ (data_dir)"

#: ../../src/doc/api/pywws.hourly.rst:17:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.hourly.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.Hourly.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.livelog.rst:2
#, fuzzy
msgid "pywws.livelog"
msgstr "pywws.LiveLog"

#: of pywws.livelog:1
msgid "Get weather data, store it, and process it."
msgstr "Obtient les données météo, les stocke et les traite."

#: of pywws.livelog:3
msgid ""
"Run this continuously, having set what tasks are to be done. This script "
"can also be run with the ``pywws-livelog`` command. ::"
msgstr ""
"Exécuter en continu, après avoir défini les tâches à compléter. Ce script"
" peut également être exécuté avec la commande ``pywws-livelog`` ::"

#: of pywws.livelog:13
#, fuzzy
msgid ""
"For more information on using ``pywws.livelog``, see "
":doc:`../guides/livelogging`."
msgstr ""
"Pour plus d'informations sur l'utilisation ``LiveLog.py``, voir "
":doc:`../guides/livelogging`."

#: ../../src/doc/api/pywws.livelog.rst:18:<autosummary>:1
#, fuzzy
msgid ":py:obj:`live_log <pywws.livelog.live_log>`\\ \\(data\\_dir\\)"
msgstr ":obj:`LiveLog <pywws.LiveLog.LiveLog>`\\ (data_dir)"

#: ../../src/doc/api/pywws.livelog.rst:18:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.livelog.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.LiveLog.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.livelog.rst:18:<autosummary>:1
msgid ""
":py:obj:`signal_handler <pywws.livelog.signal_handler>`\\ \\(signum\\, "
"frame\\)"
msgstr ""

#: ../../src/doc/api/pywws.livelogdaemon.rst:2
msgid "pywws.livelogdaemon"
msgstr "pywws.livelogdaemon"

#: of pywws.livelogdaemon:1
msgid "Run 'live logging' as a UNIX daemon."
msgstr "Exécutez 'live logging' comme un démon sous UNIX."

#: of pywws.livelogdaemon:3
msgid "This script can also be run with the ``pywws-livelog-daemon`` command. ::"
msgstr ""
"Le script peut aussi être exécuté avec la commande ``pywws-livelog-"
"daemon``. ::"

#: of pywws.livelogdaemon:13
msgid "Requires the python-daemon library."
msgstr "Nécessite la bibliothèque python-daemon."

#: of pywws.livelogdaemon:15
msgid ""
"If you get a \"function() argument 1 must be code, not str\" error, try "
"installing python-daemon from PyPI instead of your Linux repos."
msgstr ""
"Si vous obtenez une erreur \"function() argument 1 must be code, not "
"str\", essayez d'installer python-daemon à partir de PyPI au lieu de vos "
"dépôts Linux."

#: of pywws.livelogdaemon:18
msgid "For more information on 'live logging' see :doc:`../guides/livelogging`."
msgstr ""
"Pour plus d'informations sur la \"journalisation en direct\", voir "
":doc:`../guides/livelogging`."

#: ../../src/doc/api/pywws.livelogdaemon.rst:21:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.livelogdaemon.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.livelogdaemon.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.livelogdaemon.rst:26:<autosummary>:1
#, fuzzy
msgid ":py:obj:`App <pywws.livelogdaemon.App>`\\ \\(argv\\)"
msgstr ":obj:`main <pywws.livelogdaemon.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.localisation.rst:2
#, fuzzy
msgid "pywws.localisation"
msgstr "pywws.Localisation"

#: of pywws.localisation:1
#, fuzzy
msgid "Provide translations of strings into local language"
msgstr "Localisation.py - fournit des traductions de phrases en langue locale"

#: of pywws.localisation:15
#, fuzzy
msgid ""
"Some of the pywws modules, such as pywws.windrose, can automatically use "
"your local language for such things as wind directions. The "
"pywws.localisation module, mostly copied from examples in the Python "
"documentation, enables this."
msgstr ""
"Certains modules pywws, comme WindRose.py, peuvent automatiquement "
"utiliser la langue locale pour des choses telles que les directions du "
"vent. Le module Localisation.py, surtout copié à partir d'exemples dans "
"la documentation Python, permet cela."

#: of pywws.localisation:20
msgid ""
"Localisation of pywws is done in two parts - translating strings such as "
"'rising very rapidly', and changing the 'locale' which controls things "
"like month names and number representation (e.g. '23,2' instead of "
"'23.2'). On some computers it may not be possible to set the locale, but "
"translated strings can still be used."
msgstr ""
"Traduction de pywws se fait en deux parties - traduisant les phrases "
"comme 'rising very rapidly', en changeant le \"terme local\" qui contrôle"
" des choses comme le noms des mois et la représentation des nombres (par "
"exemple le nombre '23, 2' au lieu de '23 .2 '). Sur certains ordinateurs,"
" il peut ne pas être possible de définir les paramètres régionaux, mais "
"les chaînes traduites peuvent encore être utilisées."

#: of pywws.localisation:27
msgid "Using a different language"
msgstr "En utilisant une langue différente"

#: of pywws.localisation:29
msgid ""
"The language used by pywws is set in the ``[config]`` section of the "
"``weather.ini`` file. This can be a two-letter language code, such as "
"``en`` (English), or can specify a national variant, such as ``fr_CA`` "
"(Canadian French). It could also include a character set, for example "
"``de_DE.UTF-8``."
msgstr ""
"Le langage utilisé par pywws est situé dans la section ``[config]`` du "
"fichier ``weather.ini``. Cela peut être un code de langue à deux lettres,"
" comme ``fr`` (français), ou pouvez spécifier une variante nationale, "
"telle que ``fr_CA`` (canadien-français). Il pourrait également s'agir "
"d'un jeu de caractères, par exemple ``de_DE.UTF-8``."

#: of pywws.localisation:35
#, fuzzy
msgid ""
"The choice of language is very system dependant, so pywws.localisation "
"can be run as a standalone program to test language codes. A good "
"starting point might be your system's ``LANG`` environment variable, for "
"example::"
msgstr ""
"Le choix de la langue dépend beaucoup du système, donc Localisation.py "
"peut être exécuté comme un programme autonome pour tester les codes "
"linguistiques. Un bon point de départ pourrait être, par exemple, votre "
"variable d'environnement ``LANG``::"

#: of pywws.localisation:54
msgid "In most cases no more than a two-letter code is required::"
msgstr ""
"Dans la plupart des cas, pas plus que d'un code à deux lettres n'est "
"requis::"

#: of pywws.localisation:68
msgid "If you try an unsupported language, pywws falls back to English::"
msgstr "Si vous essayez une langue non prise en charge, pywws reprend l'anglais::"

#: of pywws.localisation:82
msgid ""
"Once you've found a suitable language code that works, you can configure "
"pywws to use it by editing your ``weather.ini`` file::"
msgstr ""
"Une fois que vous avez trouvé un code de langue approprié qui fonctionne,"
" vous pouvez demander à pywws de l'utiliser en éditant votre fichier "
"``weather.ini``::"

#: of pywws.localisation:89
msgid "Creating a new translation"
msgstr "Créer une nouvelle traduction"

#: of pywws.localisation:91
msgid ""
"If there is no translation file for your preferred language then you need"
" to create one. See :doc:`../guides/language` for detailed instructions."
msgstr ""
"S'il n'y a aucun fichier de traduction pour votre langue préférée, alors "
"vous devez en créer un. Voir :doc:`../guides/language` pour obtenir les "
"instructions détaillées."

#: ../../src/doc/api/pywws.localisation.rst:19:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.localisation.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.Localisation.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.localisation.rst:19:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`set_application_language "
"<pywws.localisation.set_application_language>`\\ \\(params\\)"
msgstr ""
":obj:`SetApplicationLanguage "
"<pywws.Localisation.SetApplicationLanguage>`\\ (params)"

#: ../../src/doc/api/pywws.localisation.rst:19:<autosummary>:1
msgid "Set the locale and translation for a pywws program."
msgstr "Défini la langue locale et la traduction pour un programme pywws."

#: ../../src/doc/api/pywws.localisation.rst:19:<autosummary>:1
#, fuzzy
msgid ":py:obj:`set_locale <pywws.localisation.set_locale>`\\ \\(lang\\)"
msgstr ":obj:`SetLocale <pywws.Localisation.SetLocale>`\\ (lang)"

#: ../../src/doc/api/pywws.localisation.rst:19:<autosummary>:1
msgid "Set the 'locale' used by a program."
msgstr "Régle la langue 'locale' utilisée par un programme."

#: ../../src/doc/api/pywws.localisation.rst:19:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`set_translation <pywws.localisation.set_translation>`\\ "
"\\(lang\\)"
msgstr ":obj:`SetTranslation <pywws.Localisation.SetTranslation>`\\ (lang)"

#: ../../src/doc/api/pywws.localisation.rst:19:<autosummary>:1
msgid "Set the translation used by (some) pywws modules."
msgstr "Régle la traduction utilisée par les modules (certains) pywws."

#: ../../src/doc/api/pywws.logdata.rst:2
#, fuzzy
msgid "pywws.logdata"
msgstr "pywws.LogData"

#: of pywws.logdata:1
msgid "Save weather station history to file ::"
msgstr "Enregistre l'historique de la station météo dans un fichier ::"

#: of pywws.logdata:14
#, fuzzy
msgid ""
"This module gets data from the weather station's memory and stores it to "
"file. Each time it is run it fetches all data that is newer than the last"
" stored data, so it only needs to be run every hour or so. As the weather"
" station typically stores two weeks' readings (depending on the logging "
"interval), :py:mod:`pywws.logdata` could be run quite infrequently if you"
" don't need up-to-date data."
msgstr ""
"Ce module reçoit les données de la mémoire de la station météorologique "
"et les stocke dans un fichier. Chaque fois qu'il est exécuté, il récupère"
" toutes les données plus récents que les dernières données stockées, de "
"sorte qu'il ne nécessite d'être exécuté qu'environ toutes les heures. "
"Comme la station météo stocke généralement les lectures de deux semaines "
"(en fonction de l’intervalle d’enregistrement), :py:mod:`pywws.LogData` "
"pourrait être exécuté très rarement si vous n’avez pas besoin de données "
"à jour."

#: of pywws.logdata:21
#, fuzzy
msgid ""
"There is no date or time information in the raw weather station data, so "
":py:mod:`pywws.logdata` creates a time stamp for each reading. It uses "
"the computer's clock, rather than the weather station clock which can not"
" be read accurately by the computer. A networked computer should have its"
" clock set accurately by `ntp "
"<http://en.wikipedia.org/wiki/Network_Time_Protocol>`_."
msgstr ""
"Il n’y a aucune information de date ou d’heure dans les données brutes de"
" la station météo, donc :py:mod:`pywws.LogData` crée un horodatage pour "
"chaque lecture.  Il utilise l’horloge de l’ordinateur, plutôt que "
"l’horloge de la station météorologique qui ne peut être lu avec précision"
" par l’ordinateur.  Un ordinateur en réseau devrait avoir son horloge "
"réglée avec précision par  `ntp "
"<http://fr.wikipedia.org/wiki/Network_Time_Protocol>`_."

#: of pywws.logdata:28
msgid ""
"Synchronisation with the weather station is achieved by waiting for a "
"change in the current data. There are two levels of synchronisation, set "
"by the config file or a command line option. Level 0 is quicker, but is "
"only accurate to around twelve seconds. Level 1 waits until the weather "
"station stores a new logged record, and gets time stamps accurate to a "
"couple of seconds. Note that this could take a long time, if the logging "
"interval is greater than the recommended five minutes."
msgstr ""
"La synchronisation avec la station météo est obtenue par l'attente d'un "
"changement dans les données en cours. Il y a deux niveaux de "
"synchronisation, fixés par le fichier de configuration ou une option de "
"ligne de commande. Le niveau 0 est plus rapide, mais n'est exacte qu'à "
"environ douze secondes. Le niveau 1 attend jusqu'à ce que la station "
"météo enregistre un nouvel enregistrement, et obtient un horodatage "
"précis sur quelque secondes. Notez que cela peut prendre un certain "
"temps, si l'intervalle d'enregistrement est supérieur aux cinq minutes "
"recommandées."

#: ../../src/doc/api/pywws.logdata.rst:21:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.logdata.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.LogData.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.logdata.rst:26:<autosummary>:1
#, fuzzy
msgid ":py:obj:`DataLogger <pywws.logdata.DataLogger>`\\ \\(context\\)"
msgstr ":obj:`DataLogger <pywws.LogData.DataLogger>`\\ (params, status, raw_data)"

#: ../../src/doc/api/pywws.logger.rst:2
#, fuzzy
msgid "pywws.logger"
msgstr "pywws.Logger"

#: of pywws.logger:1
msgid "Configure Python logging system"
msgstr ""

#: ../../src/doc/api/pywws.logger.rst:21:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`setup_handler <pywws.logger.setup_handler>`\\ \\(verbose\\[\\, "
"logfile\\]\\)"
msgstr ""
":obj:`ApplicationLogger <pywws.Logger.ApplicationLogger>`\\ (verbose[, "
"logfile])"

#: ../../src/doc/api/pywws.logger.rst:27:<autosummary>:1
msgid ":py:obj:`FilterURLLib3 <pywws.logger.FilterURLLib3>`\\ \\(level\\)"
msgstr ""

#: ../../src/doc/api/pywws.logger.rst:27:<autosummary>:1
msgid ""
":py:obj:`SystemdFormatter <pywws.logger.SystemdFormatter>`\\ \\(\\[fmt\\,"
" datefmt\\, style\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.mergeewdata.rst:2
#, fuzzy
msgid "pywws.mergeewdata"
msgstr "pywws.LogData"

#: of pywws.mergeewdata:1
msgid "Convert EasyWeather.dat data to pywws format ::"
msgstr "Converti les données du format EasyWeather.dat vers le format de pywws ::"

#: of pywws.mergeewdata:15
#, fuzzy
msgid ""
"This module converts data from the format used by the EasyWeather program"
" supplied with the weather station to the format used by pywws. It is "
"useful if you've been using EasyWeather for a while before discovering "
"pywws."
msgstr ""
"Ce programme convertit les données du format utilisé par le programme "
"EasyWeather fourni avec la station météo, vers le format utilisé par "
"pywws. Il est utile si vous avez utilisé EasyWeather pendant un certain "
"temps avant de découvrir pywws."

#: of pywws.mergeewdata:20
#, fuzzy
msgid ""
"The ``EasyWeather.dat`` file is only used to provide data from before the"
" start of the pywws data. As your weather station has its own memory, you"
" should run :py:mod:`pywws.logdata` before :py:mod:`pywws.mergeewdata` to"
" minimise use of the EasyWeather.dat file."
msgstr ""
"Le  fichier ``EasyWeather.dat`` n'est utilisé que pour fournir les "
"données précédent le début des données pywws. Étant donné que votre "
"station météo dispose de sa propre mémoire, vous devez exécuter "
":py:mod:`pywws.LogData` avant :py:mod:`pywws.EWtoPy` pour minimiser "
"l'utilisation du fichier EasyWeather.dat."

#: of pywws.mergeewdata:25
#, fuzzy
msgid ""
":py:mod:`pywws.mergeewdata` converts the time stamps in EasyWeather.dat "
"from local time to UTC. This can cause problems when daylight savings "
"time ends, as local time appears to jump back one hour. The program "
"attempts to detect this and correct the affected time stamps, but I have "
"not been able to test this on a variety of time zones."
msgstr ""
":py:mod:`pywws.EWtoPy` convertit les horodates EasyWeather.dat de l'heure"
" locale vers l'heure UTC. Cela peut causer des problèmes lorsque l'heure "
"d'été se termine, puisque l'heure locale semble revenir en arrière d'une "
"heure. Le programme tente de détecter et de corriger les horodates "
"concernées, mais je n'ai pas pu tester cela sur une variété de fuseaux "
"horaires."

#: ../../src/doc/api/pywws.mergeewdata.rst:16:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.mergeewdata.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.LogData.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.plot.rst:2
#, fuzzy
msgid "pywws.plot"
msgstr "pywws.Plot"

#: of pywws.plot:1
msgid "Plot graphs of weather data according to an XML recipe ::"
msgstr "Trace les graphes de données météorologiques selon une recette XML ::"

#: of pywws.plot:17
#, fuzzy
msgid ""
"Like :py:mod:`pywws.template` this is one of the more difficult to use "
"modules in the weather station software collection. It plots a graph (or "
"set of graphs) of weather data. Almost everything about the graph is "
"controlled by an XML file. I refer to these files as templates, but they "
"aren't templates in the same sense as :py:mod:`pywws.template` uses to "
"create text files."
msgstr ""
"Comme :py:mod:`pywws.Template` c'est l’un des modules les plus difficiles"
" à utiliser dans la collection du logiciel de station météo.  Il trace un"
" graphe (ou un ensemble de graphiques) de données météorologiques.  "
"Presque tout sur le graphe est contrôlée par un fichier XML.  Je réfère à"
" ces fichiers en tant que modèles, mais ils ne sont pas des modèles dans "
"le même sens qu'utilisé par :py:mod:`pywws.Template` pour créer des "
"fichiers texte."

#: of pywws.plot:24
msgid ""
"Before writing your own graph template files, it might be useful to look "
"at some of the examples in the example_graph_templates directory. If "
"(like I was) you are unfamiliar with XML, I suggest reading the W3 "
"Schools XML tutorial."
msgstr ""
"Avant d'écrire vos propres fichiers de gabarit de graphe, il pourrait "
"être utile d'examiner quelques exemples dans le répertoire "
"example_graph_templates. Si (comme moi) vous n'êtes pas familier avec le "
"langage XML, je vous suggère de lire le tutoriel XML du Site du Zéro."

#: of pywws.plot:30 pywws.template:34
msgid "Text encoding"
msgstr "Encodage du texte"

#: of pywws.plot:32
msgid ""
"The ``[config]`` section of :ref:`weather.ini <weather_ini-config>` has a"
" ``gnuplot encoding`` entry that sets the text encoding pywws uses to "
"write a gnuplot command file. The default value, ``iso_8859_1``, is "
"suitable for most western European languages, but may need changing if "
"you use another language. It can be set to any text encoding recognised "
"by both the Python :py:mod:`codecs` module and the `gnuplot "
"<http://www.gnuplot.info/documentation.html>`_ ``set encoding`` command. "
"If Python and gnuplot have different names for the same encoding, give "
"both names separated by a space, Python name first. For example::"
msgstr ""
"La section ``[config]`` du fichier :ref:`weather.ini <weather_ini-"
"config>` contient une entrée ``gnuplot encoding`` qui définit l'encodage "
"de texte qu'utilise pywws pour écrire un fichier de commande gnuplot. La "
"valeur par défaut, ``iso_8859_1``, convient pour la plupart des langues "
"d’Europe occidentale, mais peut nécessiter modifications si vous utilisez"
" une autre langue.  Elle peut être définie à n’importe quel codage de "
"texte reconnu par les deux modules Python :py:mod:`codecs` et la commande"
" `gnuplot <http://www.gnuplot.info/documentation.html>`_ ``set "
"encoding``.  Si Python et gnuplot ont des noms différents pour le même "
"codage, donner les deux noms séparés par un espace, le nom Python "
"d’abord.  Par exemple::"

#: of pywws.plot:45
msgid ""
"Note that you need to choose an encoding for which ``gnuplot`` has a "
"suitable font. You may need to set the font with a terminal_ element. "
"Note also that this encoding is unrelated to the encoding of your XML "
"graph file, which is set in the XML header."
msgstr ""
"Notez que vous devez choisir un codage pour lequel ``gnuplot`` a une "
"police appropriée.  Vous devrez peut-être définir la police par un "
"élément terminal_.  Notez également que ce codage n'est pas lié à "
"l’encodage de votre fichier de graphique XML, qui est définie dans l’en-"
"tête XML."

#: of pywws.plot:51 pywws.windrose:29
msgid "XML graph file syntax"
msgstr "Syntaxe XML du fichier graphe"

#: of pywws.plot:53
msgid ""
"Here is the simplest useful graph template. It plots the external "
"temperature for the last 24 hours. ::"
msgstr ""
"Voici le modèle de graphe utile le plus simple. Il trace la température "
"extérieure pendant les 24 dernières heures. ::"

#: of pywws.plot:66
msgid ""
"In this example, the root element graph has one plot element, which has "
"one subplot element. The subplot element contains a title element and a "
"ycalc element. To plot more data on the same graph (for example dew point"
" and temperature), we can add more subplot elements. To plot more than "
"one graph (for example wind speed is measured in different units from "
"temperature) in the same file we can add more plot elements."
msgstr ""
"Dans cet exemple, l’élément graphique racine a un élément de tracé, qui "
"possède un élément de tracé secondaire.  L’élément de tracé secondaire "
"contient un élément title et un élément ycalc.  Pour tracer plus de "
"données sur le même graphe (point de rosée et la température, par "
"exemple), nous pouvons ajouter plusieurs éléments de tracé secondaire.  "
"Pour établir plus d’une courbe (par exemple vitesse du vent est mesurée "
"en unités différentes de la température) dans le même fichier, nous "
"pouvons ajouter plusieurs éléments de tracé."

#: of pywws.plot:73 pywws.windrose:44
msgid "The complete element hierarchy is shown below."
msgstr "La hiérarchie complète de l'élément est illustré ci-dessous."

#: of pywws.plot:75 pywws.windrose:46
msgid "graph_"
msgstr "graph_"

#: of pywws.plot:76
msgid "plot_"
msgstr "plot_"

#: of pywws.plot:77
msgid "subplot_"
msgstr "subplot_"

#: of pywws.plot:78 pywws.windrose:48
msgid "xcalc_"
msgstr "xcalc_"

#: of pywws.plot:79 pywws.windrose:49
msgid "ycalc_"
msgstr "ycalc_"

#: of pywws.plot:80
msgid "axes_"
msgstr "axes_"

#: of pywws.plot:81
msgid "style_"
msgstr "style_"

#: of pywws.plot:82 pywws.windrose:51
msgid "colour_"
msgstr "colour_"

#: of pywws.plot:83
msgid ":ref:`title <subplot-title>`"
msgstr ":ref:`title <subplot-title>`"

#: of pywws.plot:84
msgid "bmargin_"
msgstr "bmargin_"

#: of pywws.plot:85 pywws.windrose:52
msgid "yrange_"
msgstr "yrange_"

#: of pywws.plot:86
msgid "y2range_"
msgstr "y2range_"

#: of pywws.plot:87
msgid "ytics_"
msgstr "ytics_"

#: of pywws.plot:88
msgid "y2tics_"
msgstr "y2tics_"

#: of pywws.plot:89
msgid "ylabel_"
msgstr "ylabel_"

#: of pywws.plot:90
msgid "ylabelangle_"
msgstr "ylabelangle_"

#: of pywws.plot:91
msgid "y2label_"
msgstr "y2label_"

#: of pywws.plot:92
msgid "y2labelangle_"
msgstr "y2labelangle_"

#: of pywws.plot:93
msgid "grid_"
msgstr "grid_"

#: of pywws.plot:94 pywws.windrose:54
msgid "source_"
msgstr "source_"

#: of pywws.plot:95
msgid "boxwidth_"
msgstr "boxwidth_"

#: of pywws.plot:96
msgid ":ref:`title <plot-title>`"
msgstr ":ref:`title <plot-title>`"

#: of pywws.plot:97 pywws.windrose:56
msgid "command_"
msgstr "command_"

#: of pywws.plot:98 pywws.windrose:57
msgid "start_"
msgstr "start_"

#: of pywws.plot:99 pywws.windrose:58
msgid "stop_"
msgstr "stop_"

#: of pywws.plot:100 pywws.windrose:59
msgid "duration_"
msgstr "duration_"

#: of pywws.plot:101 pywws.windrose:60
msgid "layout_"
msgstr "layout_"

#: of pywws.plot:102 pywws.windrose:61
msgid "size_"
msgstr "size_"

#: of pywws.plot:103 pywws.windrose:62
msgid "fileformat_"
msgstr "fileformat_"

#: of pywws.plot:104
msgid "terminal_"
msgstr "terminal_"

#: of pywws.plot:105
msgid "lmargin_"
msgstr "lmargin_"

#: of pywws.plot:106
msgid "rmargin_"
msgstr "rmargin_"

#: of pywws.plot:107
msgid "xformat_"
msgstr "xformat_"

#: of pywws.plot:108
msgid "xlabel_"
msgstr "xlabel_"

#: of pywws.plot:109
msgid "dateformat_"
msgstr "dateformat_"

#: of pywws.plot:110
msgid "xtics_"
msgstr "xtics_"

#: of pywws.plot:111
msgid ":ref:`title <graph-title>`"
msgstr ":ref:`title <graph-title>`"

#: of pywws.plot:114 pywws.windrose:67
msgid "graph"
msgstr "graph"

#: of pywws.plot:116 pywws.windrose:69
msgid ""
"This is the root element of the graph XML file. It does not have to be "
"called \"graph\", but there must be exactly one root element."
msgstr ""
"C'est l'élément racine du fichier XML de graphe. Il n'a pas à être appelé"
" \"graph \", mais il doit y avoir exactement un élément racine."

#: of pywws.plot:120
msgid "plot"
msgstr "plot"

#: of pywws.plot:122
msgid ""
"Every graph element should contain at least one plot element. A separate "
"graph is drawn for each plot element, but all share the same X axis."
msgstr ""
"Chaque élément graphe doit contenir au moins un élément de tracé. Un "
"graphe distinct est établi pour chaque élément de tracé, mais tous "
"partagent le même axe X."

#: of pywws.plot:127 pywws.windrose:73
msgid "start"
msgstr "start"

#: of pywws.plot:129
msgid ""
"This element sets the date & time of the start of the X axis. It is used "
"in the ``replace`` method of a Python datetime object that is initialised"
" to 00:00 hours on the date of the latest weather station hourly reading."
" For example, to start the graph at noon (local time) on Christmas day "
"2008: ``<start>year=2008, month=12, day=25, hour=12</start>`` or to start"
" the graph at 2am (local time) today: ``<start>hour=2</start>``. The "
"default value is (stop - duration)."
msgstr ""
"Cet élément définit la date et l'heure du début de l'axe X. Il est "
"utilisé dans la méthode ``replace`` d'un objet datetime Python qui est "
"initialisé à 00:00 heures à la date de la dernière lecture horaire de la "
"station météo. Par exemple, pour démarrer le graphique à midi (heure "
"locale) le jour de Noël 2008 : ``<start>year=2008, month=12, day=25, "
"hour=12</start>`` ou pour démarrer le graphique à 2h du matin (heure "
"locale) aujourd'hui : ``<start>hour=2</start>``. La valeur par défaut est"
" (arrêt - durée)."

#: of pywws.plot:137
msgid ""
"previously the ``<start>`` and ``<stop>`` elements were used in a "
"datetime constructor, so ``year``, ``month`` and ``day`` values were "
"required."
msgstr ""
"auparavant, les éléments ``<start>`` et ``<stop>`` étaient utilisés dans "
"un constructeur datetime, donc les valeurs ``year``, ``month`` et ``day``"
" étaient requises."

#: of pywws.plot:143 pywws.windrose:81
msgid "stop"
msgstr "stop"

#: of pywws.plot:145
msgid ""
"This element sets the date & time of the end of the X axis. It is used in"
" the ``replace`` method of a Python datetime object, just like "
"``<start>``. The default value is (start + duration), unless start is not"
" defined, in which case the timestamp of the latest weather station "
"hourly reading is used."
msgstr ""
"Cet élément définit la date et l'heure de la fin de l'axe X. Il est "
"utilisé dans la méthode ``replace`` d'un objet datetime Python, tout "
"comme ``<start>``. La valeur par défaut est (début + durée), sauf si le "
"début n'est pas défini, auquel cas l'horodatage du dernier relevé horaire"
" de la station météo est utilisé."

#: of pywws.plot:152 pywws.windrose:91
msgid "duration"
msgstr "duration"

#: of pywws.plot:154
msgid ""
"This element sets the extent of the X axis of the graph, unless both "
"start and stop are defined. It is used in the constructor of a Python "
"timedelta object. For example, to plot one week: "
"``<duration>weeks=1</duration>``. The default value is hours=24."
msgstr ""
"Cet élément définit l'étendue de l'axe X du graphique, à moins que start "
"(début) et stop (arrêt) soient tous deux définis. Il est utilisé dans le "
"construction d'un objet Python timedelta. Par exemple, pour tracer une "
"semaine: ``<duration>weeks=1</duration>``. La valeur par défaut est "
"hours=24."

#: of pywws.plot:160 pywws.windrose:99
msgid "layout"
msgstr "layout"

#: of pywws.plot:162
msgid ""
"Controls the layout of the plots. Default is a single column. The layout "
"element specifies rows and columns. For example: ``<layout>4, "
"2</layout>`` will use a grid of 4 rows and 2 columns."
msgstr ""
"Contrôle la disposition des tracés. Par défaut sur une seule colonne. "
"L'élément de mise en page définit les lignes et les colonnes. Par "
"exemple: ``<layout>4, 2</layout>`` utilisera une grille de 4 lignes et 2 "
"colonnes."

#: of pywws.plot:167 pywws.windrose:107
msgid "size"
msgstr "size"

#: of pywws.plot:169
msgid ""
"Sets the overall dimensions of the image file containing the graph. "
"Default (in a single column layout) is a width of 600 pixels and height "
"of 200 pixels for each plot, so a graph with four plot elements would be "
"600 x 800 pixels. Any size element must include both width and height. "
"For example: ``<size>800, 600</size>`` will produce an image 800 pixels "
"wide and 600 pixels high."
msgstr ""
"Définit les dimensions globales du fichier image contenant le graphe. Par"
" défaut (dans une mise en page à simple colonne) une largeur de 600 "
"pixels et une hauteur de 200 pixels pour chaque tracé est employé, donc "
"la dimension d'un graphe avec quatre éléments tracés serait de 600 x 800 "
"pixels. Tout élément de taille doit inclure à la fois la largeur et la "
"hauteur. Par exemple: ``<size>800, 600</size>`` produira une image 800 "
"pixels de large et 600 pixels de haut."

#: of pywws.plot:177 pywws.windrose:116
msgid "fileformat"
msgstr "fileformat"

#: of pywws.plot:179
msgid ""
"Sets the image format of the file containing the graph. Default is "
"``png``. Any string recognised by your installation of gnuplot should do."
" For example: ``<fileformat>gif</fileformat>`` will produce a GIF image."
msgstr ""
"Définit le format d'image du fichier contenant le graphique. La valeur "
"par défaut est ``png``. Toute chaîne reconnue par votre installation de "
"gnuplot devrait faire l'affaire. Par exemple : "
"``<fileformat>gif</fileformat>`` produira une image GIF."

#: of pywws.plot:184
msgid ""
"If your installation of gnuplot supports it, ``pngcairo`` is an "
"alternative to ``png`` that can yield much better looking results."
msgstr ""
"Si votre installation de gnuplot le supporte, ``pngcairo`` est une "
"alternative à ``png`` qui peut donner de bien meilleurs résultats."

#: of pywws.plot:187
msgid ""
"You can also set terminal_ options in this string, for example: "
"``<fileformat>pngcairo font \"arial,8\" rounded</fileformat>`` will use a"
" small \"Arial\" font and round the ends of line segments."
msgstr ""
"Vous pouvez également définir des options terminal_ dans cette chaîne, "
"par exemple : ``<fileformat>pngcairo font \"arial,8\" "
"rounded</fileformat>`` utilisera une petite police \"Arial\" et arrondira"
" les extrémités des segments de ligne."

#: of pywws.plot:193
msgid "terminal"
msgstr "terminal"

#: of pywws.plot:195
msgid ""
"Allows complete control of gnuplot's \"terminal\" settings. You may want "
"to use this if you are plotting to an unusual image format. Any string "
"recognised by your installation of gnuplot's 'set terminal' command "
"should do. For example: ``<terminal>svg enhanced font \"arial,9\" dynamic"
" rounded size 600,800</terminal>``. This setting overwrites both size_ "
"and fileformat_."
msgstr ""
"Permet un contrôle complet des paramètres \"terminaux\" de gnuplot. Vous "
"pouvez l'utiliser si vous tracez dans un format d'image inhabituel. Toute"
" chaîne reconnue par votre installation de la commande 'set terminal' de "
"gnuplot devrait faire l'affaire. Par exemple : ``<terminal>svg enhanced "
"font \"arial,9\" dynamic rounded size 600,800</terminal>``. Ce paramètre "
"remplace à la fois size_ et fileformat_."

#: of pywws.plot:202
msgid ""
"The size_ and fileformat_ elements are now the preferred way to set the "
"gnuplot \"terminal\"."
msgstr ""
"Les éléments size_ et fileformat_ sont désormais la méthode préférée pour"
" définir le \"terminal\" de gnuplot."

#: of pywws.plot:207
msgid "lmargin"
msgstr "lmargin"

#: of pywws.plot:209
msgid ""
"Sets the left margin of the plots, i.e. the distance from the left hand "
"axis to the left hand edge of the image area. According to the gnuplot "
"documentation the units of lmargin are character widths. The default "
"value is 5, which should look OK in most circumstances."
msgstr ""
"Définit la marge gauche des graphes, c'est à dire la distance entre l'axe"
" de gauche sur le bord gauche de la zone de l'image. Selon la "
"documentation de gnuplot les unités de lmargin sont des largeurs de "
"caractères. La valeur par défaut est de 5, ce qui devrait être OK dans la"
" plupart des circonstances."

#: of pywws.plot:215
msgid "rmargin"
msgstr "rmargin"

#: of pywws.plot:217
msgid ""
"Sets the right margin of the plots, i.e. the distance from the right hand"
" axis to the right hand edge of the image area. According to the gnuplot "
"documentation the units of rmargin are character widths. The default "
"value is -1, which sets automatic adjustment."
msgstr ""
"Définit la marge droite des graphes, c'est à dire la distance entre l'axe"
" de droite à l'extrémité droite de la zone d'image. Selon la "
"documentation de gnuplot les unités de rmargin sont des largeurs de "
"caractères. La valeur par défaut est -1, ce qui spécifie le réglage "
"automatique."

#: of pywws.plot:223
msgid "xformat"
msgstr "xformat"

#: of pywws.plot:225
#, python-format
msgid ""
"Sets the format of the time / date xtic labels. The value is a strftime "
"style format string. Default depends on the graph duration: 24 hours or "
"less is \"%H%M\", 24 hours to 7 days is \"%a %d\" and 7 days or more is "
"\"%Y/%m/%d\"."
msgstr ""
"Définit le format des étiquettes de date / heure xtic. La valeur est une "
"chaîne de style format strftime. Par défaut elle dépend de la durée du "
"graphe: 24 heures ou moins est \"%H%M\", 24 heures sur 7 jours est \"%a% "
"d\" et 7 jours ou plus est \"%Y/%m/%d\"."

#: of pywws.plot:231
msgid "xlabel"
msgstr "xlabel"

#: of pywws.plot:233
msgid ""
"Sets the X axis label. The value is a strftime style format string. "
"Default depends on the graph duration: 24 hours or less is \"Time (%Z)\","
" 24 hours to 7 days is \"Day\" and 7 days or more is \"Date\". The "
"datetime used to compute this is start, which may produce unexpected "
"results when a graph spans DST start or end."
msgstr ""
"Définit l'étiquette d'axe X. La valeur est une chaîne de style format "
"strftime. Par défaut dépend de la durée du graphe: 24 heures ou moins est"
" \"Time (%Z)\", de 24 heures à 7 jours est «Day» et 7 jours ou plus est "
"«Date». Le datetime utilisé pour calculer ce départ, ce qui peut produire"
" des résultats inattendus lorsqu'un graphique s'étend de début ou de fin "
"DST."

#: of pywws.plot:240
msgid "dateformat"
msgstr "dateformat"

#: of pywws.plot:242
#, python-format
msgid ""
"Sets the format of the date labels at each end of X axis. The value is a "
"strftime style format string. Default is \"%Y/%m/%d\". The right hand "
"label is only drawn if it differs from the left. To have no labels, set "
"an empty format: ``<dateformat></dateformat>``"
msgstr ""
"Définit le format des étiquettes de date à chaque extrémité de l'axe X. "
"La valeur est une chaîne de style format strftime. Par défaut est "
"\"%Y/%m/%d\". L'étiquette de droite est uniquement affichée si elle "
"diffère de la gauche. Pour avoir aucune étiquette, définissez un format "
"vide: ``<dateformat></dateformat>``"

#: of pywws.plot:248
msgid "xtics"
msgstr "xtics"

#: of pywws.plot:250
msgid ""
"Sets the spacing of the \"tic\" marks on the X axis. The value is an "
"integer number of hours. The default is to allow gnuplot to set an "
"appropriate interval."
msgstr ""
"Définit l'espacement des \"tic\" des marques sur l'axe X. La valeur est "
"un nombre entier d'heures. La valeur par défaut est de laisser gnuplot "
"définir l'intervalle approprié."

#: of pywws.plot:257 pywws.plot:387 pywws.plot:486 pywws.windrose:134
#: pywws.windrose:220
msgid "title"
msgstr "title"

#: of pywws.plot:259
msgid ""
"Sets the title of the graph. A single line of text, for example: "
"``<title>Today's weather</title>``. This title appears at the very top of"
" the graph, outside any plot area."
msgstr ""
"Définit le titre du graphe. Une seule ligne de texte, par exemple: "
"``<title>La météo du jour</ title>``. Ce titre apparaît tout en haut du "
"graphe, en dehors de toute zone de traçage."

#: of pywws.plot:263
msgid ""
"If the title contains any \"%\" characters it will be used as a strftime "
"style format string for the datetime of the stop value. This allows you "
"to include the graph's date or time in the title."
msgstr ""
"Si le titre contient des caractères \"%\", il sera utilisé comme chaîne "
"de format de style strftime pour la date et l'heure de la valeur d'arrêt."
" Cela vous permet d'inclure la date ou l'heure du graphique dans le "
"titre."

#: of pywws.plot:269
msgid "subplot"
msgstr "subplot"

#: of pywws.plot:271
msgid ""
"Every plot element should contain at least one subplot element. A "
"separate trace is drawn for each subplot element, but all share the same "
"X and Y axes."
msgstr ""
"Chaque élément du graphe doit contenir au moins un élément graphe "
"secondaire. Une tracé distinct est établi pour chaque élément sous-"
"graphe, mais tous partagent les même axes X et Y."

#: of pywws.plot:276
msgid "bmargin"
msgstr "bmargin"

#: of pywws.plot:278
msgid ""
"Sets the bottom margin, i.e. the spacing between the lower X axis and the"
" edge of the graph (or the next plot). The default is to let gnuplot "
"adjust this automatically, which works OK most of the time but you may "
"wish to fine tune the value to suit your installation."
msgstr ""
"Définit la marge inférieure, c'est à dire la distance entre la partie "
"inférieure de l'axe X et le bord du graphique (ou le graphe suivante). La"
" valeur par défaut est de laisser gnuplot ajuster automatiquement, ce qui"
" fonctionne bien la plupart du temps, mais vous pouvez ajuster la valeur "
"en fonction de votre installation."

#: of pywws.plot:283
msgid ""
"The permitted value is any non-negative real number. On my setup 0.9 is a"
" good value, set as follows: ``<bmargin>0.9</bmargin>``."
msgstr ""
"La valeur autorisée est un nombre non négatif réel. Sur mon installation "
"0.9 est une bonne valeur, définie comme suit: ``<bmargin> 0.9</ "
"bmargin>``."

#: of pywws.plot:287 pywws.windrose:192
msgid "yrange"
msgstr "yrange"

#: of pywws.plot:289
msgid ""
"Sets the lower and upper limits of the (left hand) Y axis. The value is "
"anything understood by gnuplot, typically a pair of numbers. The default "
"is to allow gnuplot to set appropriate values, which is unlikely to be "
"what you want. For example, to plot typical UK temperatures with no value"
" going off the graph: ``<yrange>-10, 30</yrange>``. Note that commas are "
"converted to colons, so ``<yrange>-10:30</yrange>`` would be equivalent."
msgstr ""
"Définit les limites inférieure et supérieure de l'axe Y gauche. La valeur"
" est tout ce qui est recconnu par gnuplot, généralement une paire de "
"nombres. La valeur par défaut est de permettre à gnuplot de définir les "
"valeurs appropriées, ce qui est peu susceptible d'être ce que vous "
"voulez. Par exemple, pour tracer des températures typiques du Royaume-Uni"
" sans valeur va hors du graphe: ``<yrange>-10, 30</yrange>``. Notez que "
"les virgules sont converties en deux points, donc ``<yrange>10:30</ "
"yrange>`` serait équivalent."

#: of pywws.plot:297
msgid ""
"You can use an asterisk to have gnuplot choose a suitable value. For "
"example, to have the upper value auto scale whilst fixing the lower value"
" at zero, use ``<yrange>0:*</yrange>``."
msgstr ""
"Vous pouvez utiliser un astérisque pour laisser gnuplot choisir une "
"valeur appropriée. Par exemple, pour automatiser l'échelle de valeur "
"supérieure, tout en fixant la valeur inférieure à zéro, utilisez "
"``<yrange>0:*</yrange>``."

#: of pywws.plot:301
msgid ""
"Since gnuplot version 4.6 you can set lower and/or upper bounds of the "
"auto scaled range. The gnuplot syntax for this is ``lo < * < hi``, but as"
" the plot template is an XML file we need to replace the ``<`` characters"
" with ``&lt;``. For example, if we want the upper value to always be 20 "
"or more we can use ``<yrange>0:20 &lt; *</yrange>``."
msgstr ""

#: of pywws.plot:308
msgid "y2range"
msgstr "y2range"

#: of pywws.plot:310
msgid ""
"Sets the lower and upper limits of the right hand Y axis. Default is for "
"the right hand Y axis to be the same as the left, but setting a different"
" range is useful in dual axis plotting."
msgstr ""
"Définit les limites inférieure et supérieure de l'axe Y de droite. Le "
"défaut est pour l'axe Y de droite d'être la même que celle de gauche, "
"mais fixer une plage différente est utile en double axe de traçage."

#: of pywws.plot:315
msgid "ytics"
msgstr "ytics"

#: of pywws.plot:317
msgid ""
"Controls the \"tic\" marks on the left hand Y axis. The value can be "
"anything that's understood by gnuplot. For example, to set the tic "
"spacing to 45 use ``<ytics>45</ytics>``. More complex things are also "
"possible, e.g. to label a wind direction graph with compass points, use "
"``<y2tics>('N' 0, 'E' 90, 'S' 180, 'W' 270, 'N' 360)</y2tics>``."
msgstr ""
"Contrôle les \"tic\" des marques sur l'axe Y de gauche. La valeur peut "
"être tout ce qui est compris par gnuplot. Par exemple, pour définir "
"l'espacement tic à 45 utiliser ``<ytics>45</ ytics>``. Des choses plus "
"complexes sont également possibles, par exemple étiqueter un diagramme de"
" direction du vent avec des points de boussole, utilisez ``<y2tics>('N' "
"0, 'E' 90, 'S' 180, 'W' 270, 'N' 360)</ y2tics>``."

#: of pywws.plot:324
msgid "y2tics"
msgstr "y2tics"

#: of pywws.plot:326
msgid ""
"Controls the \"tic\" marks on the right hand axis. The format is the same"
" as that for ytics. Default behaviour is to copy the left hand tic marks,"
" but without labels."
msgstr ""
"Contrôle les \"tic\" des marques sur l'axe de droite. Le format est le "
"même que celui de ytics. Le comportement par défaut consiste à copier les"
" marques de graduation de gauche, mais sans étiquette."

#: of pywws.plot:331
msgid "ylabel"
msgstr "ylabel"

#: of pywws.plot:333
msgid ""
"Adds a label to the (left hand) Y axis. For example, when plotting "
"temperature: ``<ylabel>°C</ylabel>``. If you use ylabel you will probably"
" want to adjust lmargin."
msgstr ""
"Ajoute une étiquette à gauche de l'axe Y. Par exemple, lors du tracé de "
"la température: ``<ylabel>°C</ylabel>``. Si vous utilisez ylabel vous "
"voudrez probablement ajuster lmargin."

#: of pywws.plot:338
msgid "ylabelangle"
msgstr "ylabelangle"

#: of pywws.plot:340
msgid ""
"Adjust the angle of the (left hand) Y axis label, if your version of "
"gnuplot supports it. For example, to write the label horizontally: "
"``<ylabelangle>90</ylabelangle>``."
msgstr ""
"Ajuste l'angle de l'étiquette à gauche de l'axe Y, si votre version de "
"gnuplot le soutient. Par exemple, pour écrire l'étiquette "
"horizontalement: ``<ylabelangle>90</ylabelangle>``."

#: of pywws.plot:345
msgid "y2label"
msgstr "y2label"

#: of pywws.plot:347
msgid ""
"Adds a label to the right hand Y axis. For example, when plotting "
"humidity: ``<y2label>%</y2label>``. This is mostly used when plotting "
"dual axis graphs. If you use y2label you will probably want to adjust "
"rmargin."
msgstr ""
"Ajoute une étiquette à l'axe Y de droite. Par exemple, lors du tracé de "
"l'humidité: ``<y2label>%</y2label>``. Cela est principalement utilisé "
"lors du traçage de graphes à deux axes. Si vous utilisez y2label vous "
"voudrez probablement ajuster rmargin."

#: of pywws.plot:353
msgid "y2labelangle"
msgstr "y2labelangle"

#: of pywws.plot:355
msgid ""
"Adjust the angle of the right hand Y axis label, if your version of "
"gnuplot supports it. For example, to write the label horizontally: "
"``<y2labelangle>90</y2labelangle>``."
msgstr ""
"Ajuste l'angle de l'étiquette d'axe Y à droite, si votre version de "
"gnuplot le permet. Par exemple, pour écrire l'étiquette horizontalement: "
"``<y2labelangle>90</ y2labelangle>``."

#: of pywws.plot:360
msgid "grid"
msgstr "grid"

#: of pywws.plot:362
msgid ""
"Adds a grid to the plot. In most situations gnuplot's default grid is "
"suitable, so no value is needed: ``<grid></grid>``. More control is "
"possible using any of the options understood by gnuplot's set grid "
"command. For example, to have horizontal grid lines only: "
"``<grid>ytics</grid>``."
msgstr ""
"Ajoute une grille au tracé. Dans la plupart des situations, la grille par"
" défaut de gnuplot est appropriée, si aucune valeur n'est nécessaire: "
"``<grid></grid>``. Plus de contrôle est possible en utilisant l'une des "
"options comprises par la commande set grid de gnuplot. Par exemple, pour "
"avoir les lignes horizontales de la grille uniquement: "
"``<grid>ytics</grid>``."

#: of pywws.plot:369 pywws.windrose:209
msgid "source"
msgstr "source"

#: of pywws.plot:371 pywws.windrose:211
msgid ""
"Select the weather data to be plotted. Permitted values are "
"``<source>raw</source>``, ``<source>hourly</source>``, "
"``<source>daily</source>`` and ``<source>monthly</source>``. Default is "
"raw. Note that the different sources have different data dictionaries, so"
" this choice affects ycalc."
msgstr ""
"Sélectionne les données météorologiques à tracer. Les valeurs autorisées "
"sont ``<source>raw</source>``, ``<source> hourly</ source>``, "
"``<source>daily</source>`` et ``<source>monthly</source>``. LA valeur par"
" défaut est raw. Notez que les sources différentes ont des dictionnaires "
"de données différents, donc ce choix affecte ycalc."

#: of pywws.plot:378
msgid "boxwidth"
msgstr "boxwidth"

#: of pywws.plot:380
msgid ""
"Sets the width of the \"boxes\" used when drawing bar graphs. The value "
"is an integer expression yielding a number of seconds. Default depends on"
" source: raw is 240, hourly is 2800 and daily is 2800 * 24."
msgstr ""
"Définit la largeur des \"boîtes\" utilisés lors de l'élaboration des "
"graphes à barres. La valeur est une expression entière pour obtenir un "
"nombre de secondes. Le défaut dépend de la source: brut est de 240, "
"horaire est de 2800 et quotidien est de 2800 * 24."

#: of pywws.plot:389
msgid ""
"Sets the title of the plot. A single line of text, for example: "
"``<title>Temperature (°C)</title>``. This title appears within the plot "
"area, above any :ref:`subplot titles <subplot-title>`."
msgstr ""
"Définit le titre du tracé. Une seule ligne de texte, par exemple : "
"``<title>Température (°C)</title>``. Ce titre apparaît dans la zone de "
"tracé, au-dessus de tous les :ref:`titres de sous-graphiques <subplot-"
"title>`."

#: of pywws.plot:394 pywws.windrose:227
msgid "command"
msgstr "command"

#: of pywws.plot:396
msgid ""
"Execute any gnuplot command, just before the main \"plot\" command. This "
"option allows advanced users to have greater control over the graph "
"appearance. The value is any valid gnuplot command, typically beginning "
"with the word set. For example: ``<command>set key tmargin center "
"horizontal width 1 noreverse enhanced autotitles box linetype -1 "
"linewidth 1</command>``. (Don't ask me what this example does — I'm not "
"an advanced user)."
msgstr ""
"Exécute n'importe quelle commande gnuplot, juste avant la principale "
"commande de tracé. Cette option permet aux utilisateurs avancés d'avoir "
"plus de contrôle sur l'apparence du graphe. La valeur est une commande "
"gnuplot valide, généralement commençant par un ensemble de mots. Par "
"exemple: ``<command>set key tmargin center horizontal width 1 noreverse "
"enhanced autotitles box linetype -1 linewidth 1</ command>``. (Ne me "
"demandez pas ce que cet exemple produit - Je ne suis pas un utilisateur "
"avancé)."

#: of pywws.plot:404
msgid "This element can be repeated to allow several things to be set."
msgstr "Cet élément peut être répété pour permettre plusieurs choses à régler."

#: of pywws.plot:408 pywws.windrose:153
msgid "xcalc"
msgstr "xcalc"

#: of pywws.plot:410
msgid ""
"Controls the X axis positioning of plotted data values. The default value"
" of data['idx'] is correct for most data, but there are some exceptions. "
"For example, when plotting bar charts of hourly rainfall, it's nice to "
"centre the bars on 30 minutes past the hour: "
"``<xcalc>data['idx'].replace(minute=30, second=0)</xcalc>``."
msgstr ""
"Contrôle le positionnement de l'axe X du tracé des valeurs de données. La"
" valeur par défaut de data['idx'] est correcte pour la plupart des "
"données, mais il y a quelques exceptions. Par exemple, lors du tracé des "
"diagrammes à barres de pluies horaires, il est bon de centrer les barres "
"sur 30 minutes après l'heure:  ``<xcalc>data ['idx'].replace(minute=30, "
"second=0)</ xcalc>``."

#: of pywws.plot:417 pywws.windrose:163
msgid "ycalc"
msgstr "ycalc"

#: of pywws.plot:419
msgid ""
"Selects the data to be plotted. Any one line Python expression that "
"returns a single float value can be used. At its simplest this just "
"selects one value from the \"data\" dictionary, for example: "
"``<ycalc>data['temp_out']</ycalc>`` plots the external temperature. More "
"complex expressions are possible, and some helper functions are provided."
" For example: ``<ycalc>dew_point(data['temp_out'], "
"data['hum_out'])</ycalc>`` plots the external dew point, and "
"``<ycalc>wind_mph(data['wind_ave'])</ycalc>`` plots the average wind "
"speed in miles per hour."
msgstr ""
"Sélectionne les données à tracer. Toute expression Python sur une ligne "
"retournant une valeur flottante simple peut être utilisée. Au plus simple"
" ceci sélectionne une seule valeur du dictionnaire \"data\", par exemple:"
" ``<ycalc>data['temp_out']</ycalc>`` trace la température extérieure. Des"
" expressions plus complexes sont possibles, et certaines fonctions d'aide"
" sont fournies. Par exemple: ``<ycalc>dew_point(data['temp_out'], "
"data['hum_out'])</ ycalc>`` trace le point de rosée, et "
"``<ycalc>wind_mph(data['wind_ave'])</ycalc>`` trace la vitesse moyenne du"
" vent en miles par heure."

#: of pywws.plot:429 pywws.template:212
#, fuzzy
msgid ""
"In addition to the functions in the :py:mod:`pywws.conversions` module "
"there are four more useful functions: ``rain_hour(data)`` returns the "
"amount of rain in the last hour, ``rain_day(data)`` returns the amount of"
" rain since midnight (local time), ``rain_24hr(data)`` returns the amount"
" of rain in the last 24 hours, and ``hour_diff(data, key)`` returns the "
"change in data item ``key`` over the last hour."
msgstr ""
"En plus des fonctions du module :py:mod:`pywws.conversions`, il existe "
"trois autres fonctions utiles : ``rain_hour(donnée)`` renvoie la quantité"
" de pluie au cours de la dernière heure, ``rain_day(donnée)` ` renvoie la"
" quantité de pluie depuis minuit (heure locale) et ``hour_diff(donnée, "
"clé)`` renvoie le changement de l'élément de données ``clé`` au cours de "
"la dernière heure."

#: of pywws.plot:436
msgid ""
"Cumulative plots are also possible. The result of each ycalc computation "
"is stored and made available to the next computation in the variable "
"last_ycalc. This can be used with any data, but is most useful with "
"rainfall: ``<ycalc>data['rain'] + last_ycalc</ycalc>``."
msgstr ""
"Les courbes cumulatives sont également possibles. Le résultat de chaque "
"calcul ycalc est stocké et mis à la disposition du calcul suivant dans la"
" variable last_ycalc. Ceci peut être utilisé avec toute donnée, mais il "
"est plus utile avec des précipitations: ``<ycalc>data ['rain'] + "
"last_ycalc</ ycalc>``."

#: of pywws.plot:441
msgid ""
"A special case are plots with ``<style>candlesticks</style>`` or "
"``<style>candlesticksw</style>`` which need 4 values in a specific order:"
" ``<ycalc>(data['temp_out_min_ave'], data['temp_out_min_lo'], "
"data['temp_out_max_hi'], data['temp_out_max_ave'])</ycalc>``. To add a "
"median bar, use another candlesticks plot with ``data['temp_out_ave']`` "
"in all 4 fields."
msgstr ""

#: of pywws.plot:449
msgid "axes"
msgstr "axes"

#: of pywws.plot:451
msgid ""
"Selects which Y axis the data is plotted against. Default is the left "
"hand axis, but the right hand axis can be chosen with: "
"``<axes>x1y2</axes>``. This can be used in conjunction with y2range to "
"plot two unrelated quantities on one graph, for example temperature and "
"humidity."
msgstr ""
"Sélectionne contre quel axe Y les données sont tracées. Par défaut c'est "
"l'axe de gauche, mais l'axe de droite peut être choisie avec: "
"``<axes>x1y2</ axes>``. Ceci peut être utilisé en conjonction avec "
"y2range pour tracer deux quantités indépendantes sur une courbe, par "
"exemple la température et de l'humidité."

#: of pywws.plot:458
msgid "style"
msgstr "style"

#: of pywws.plot:460
msgid ""
"Sets the line style for the graph. Default is a smooth continuous line, "
"thickness 1. To select a bar graph use: ``<style>box</style>``. To select"
" points without a connecting line use: ``<style>+</style>`` or "
"``<style>x</style>``. To select a line thickness 3 (for example) use: "
"``<style>line 3</style>``. The thickness of points can be set in a "
"similar fashion. For complete control (for advanced users) a full gnuplot"
" style can be set: ``<style>smooth unique lc 5 lw 3</style>``."
msgstr ""
"Définit le style de ligne pour le graphe. Le défaut est une ligne "
"continue lisse, d'épaisseur 1. Pour sélectionner un graphique à barres, "
"utilisez: ``<style>box</ style>``. Pour sélectionner des points sans "
"ligne de raccordement, utilisez: ``<style>+</ style>`` ou ``<style>x</ "
"style>``. Pour sélectionner une épaisseur de ligne à 3 (par exemple): "
"``<style>line 3</ style>``. L'épaisseur des points peut être réglé de la "
"même façon. Pour un contrôle complet (pour utilisateurs avancés) un style"
" gnuplot complet peut être réglé ainsi: ``<style>smooth unique lc 5 lw "
"3</ style>``."

#: of pywws.plot:468
msgid ""
"For candlesticks plots you can specify line thickness as well, e.g. "
"``<style>candlesticks 1.5</style>``. If you add whiskerbars, you can "
"change the width of the whiskerbars with a second parameter, e.g. "
"``<style>candlesticksw 2 0.5</style>`` would plot the whiskerbars with "
"50% width of the candlesticks."
msgstr ""

#: of pywws.plot:475 pywws.windrose:182
msgid "colour"
msgstr "colour"

#: of pywws.plot:477
msgid ""
"Sets the colour of the subplot line or boxes. This can be in any form "
"that gnuplot accepts, typically a single integer or an rgb specification "
"such as ``rgb \"cyan\"`` or ``rgb \"FF00FF\"``. The mapping of integer "
"values to colours is set by gnuplot. Default value is an ever "
"incrementing integer."
msgstr ""
"Définit la couleur de la ligne ou des cases de la sous-graphique. Cela "
"peut être sous n'importe quelle forme acceptée par gnuplot, généralement "
"un seul entier ou une spécification RVB telle que ``rgb \"cyan\"`` ou "
"``rgb \"FF00FF\"``. Le mappage des valeurs entières aux couleurs est "
"défini par gnuplot. La valeur par défaut est un nombre entier toujours "
"incrémenté."

#: of pywws.plot:488
msgid ""
"Sets the title of the subplot. A single line of text, for example: "
"``<title>Temperature (°C)</title>``. This title appears within the plot "
"area, next to a short segment of the line colour used for the subplot."
msgstr ""
"Définit le titre du sous-graphe. Une seule ligne de texte, par exemple: "
"``<title>Température (°C)</ title>``. Ce titre apparaît dans la zone de "
"graphe, à côté d'un court segment de la couleur de la ligne utilisée pour"
" le sous-graphe."

#: ../../src/doc/api/pywws.plot.rst:21:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.plot.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.Plot.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.plot.rst:29:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`BasePlotter <pywws.plot.BasePlotter>`\\ \\(context\\, "
"work\\_dir\\)"
msgstr ""
":obj:`BasePlotter <pywws.Plot.BasePlotter>`\\ (params, status, raw_data, "
"...)"

#: ../../src/doc/api/pywws.plot.rst:29:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`GraphFileReader <pywws.plot.GraphFileReader>`\\ "
"\\(input\\_file\\)"
msgstr ":obj:`GraphFileReader <pywws.Plot.GraphFileReader>`\\ (input_file)"

#: ../../src/doc/api/pywws.plot.rst:29:<autosummary>:1
#, fuzzy
msgid ":py:obj:`GraphNode <pywws.plot.GraphNode>`\\ \\(node\\)"
msgstr ":obj:`GraphNode <pywws.Plot.GraphNode>`\\ (node)"

#: ../../src/doc/api/pywws.plot.rst:29:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`GraphPlotter <pywws.plot.GraphPlotter>`\\ \\(context\\, "
"work\\_dir\\)"
msgstr ":obj:`GraphNode <pywws.Plot.GraphNode>`\\ (node)"

#: ../../src/doc/api/pywws.process.rst:2
#, fuzzy
msgid "pywws.process"
msgstr "pywws.Reprocess"

#: of pywws.process:1
msgid "Generate hourly, daily & monthly summaries of raw weather station data ::"
msgstr ""
"Génére des sommaires horaires, quotidiens et mensuels à partir des "
"données brutes de la station météo ::"

#: of pywws.process:13
msgid ""
"This module takes raw weather station data (typically sampled every five "
"or ten minutes) and generates hourly, daily and monthly summary data, "
"which is useful when creating tables and graphs."
msgstr ""
"Ce module prend les données brutes de la station météo (typiquement "
"échantillonnées tous les cinq ou dix minutes) et génère des sommaires "
"horaires, quotidiens et mensuels, ce qui est utile pour créer des "
"tableaux et des graphes."

#: of pywws.process:17
msgid ""
"Before computing the data summaries, raw data is \"calibrated\" using a "
"user-programmable function. See :doc:`pywws.calib` for details."
msgstr ""
"Avant de calculer les résumés de données, les données brutes sont "
"\"calibrées\" en utilisant une fonction programmable par l'utilisateur. "
"Voir :doc:`pywws.calib` pour plus de détails."

#: of pywws.process:20
msgid ""
"The hourly data is derived from all the records in one hour, e.g. from "
"18:00:00 to 18:59:59, and is given the index of the last complete record "
"in that hour."
msgstr ""
"Les données horaire sont dérivées de tous les enregistrements lus en une "
"heure, par exemple 18:00:00-18:59:59, et tien compte de l'indice du "
"dernier relevé terminée à cette heure."

#: of pywws.process:24
#, fuzzy
msgid ""
"The daily data summarises the weather over a 24 hour period typically "
"ending at 2100 or 0900 hours, local (non DST) time, though midnight is "
"another popular convention. It is also indexed by the last complete "
"record in the period. Daytime and nighttime, as used when computing "
"maximum and minimum temperatures, are assumed to start at 0900 and 2100 "
"local time, or 1000 and 2200 when DST is in effect, regardless of the "
"meteorological day."
msgstr ""
"Les données quotidiennes résument la météo sur une période de 24 heures "
"se terminant généralement à 2100 ou 0900 heures, heure locale (non heure "
"d'été), bien que minuit est une autre convention populaire. Il est "
"également indexé par le dernier enregistrement complet de la période. Le "
"jour et la nuit, tels qu'utilisés dans le calcul des températures "
"maximales et minimales, sont supposées commencer à 0900 et 2100 heure "
"locale, soit 1000 et 2200 lorsque l'heure d'été est en vigueur, quel que "
"soit le jour météorologique."

#: of pywws.process:32
#, fuzzy
msgid ""
"To adjust the meteorological day to your preference, or that used by your"
" local official weather station, edit the \"day end hour\" line in your "
"``weather.ini`` file, then run :mod:`pywws.reprocess` to regenerate the "
"summaries."
msgstr ""
"Pour régler le jour météorologique à votre préférence, ou celle utilisée "
"par votre station météorologique locale officielle, modifier la ligne  "
"\"day end hour\" dans votre fichier ``weather.ini``, puis exécutez "
"Reprocess.py pour régénérer les résumés."

#: of pywws.process:37
msgid ""
"Monthly summary data is computed from the daily summary data. If the "
"meteorological day does not end at midnight, then each month may begin "
"and end up to 12 hours before or after midnight."
msgstr ""
"Les données récapitulatives mensuelles sont calculées à partir des "
"données sommaires quotidiennes. Si la journée météorologique ne s'arrête "
"pas à minuit, alors chaque mois peut commencer et se terminer jusqu'à 12 "
"heures avant ou après minuit."

#: of pywws.process:41
msgid ""
"Wind speed data is averaged over the hour (or day) and the maximum gust "
"speed during the hour (or day) is recorded. The predominant wind "
"direction is calculated using vector arithmetic."
msgstr ""
"La moyenne des données de vitesse du vent durant la dernière heure (ou "
"jour) et la vitesse maximale des rafales pendant l'heure (ou jour) est "
"enregistrée. La direction prédominante du vent est calculée en utilisant "
"l'arithmétique vectorielle."

#: of pywws.process:45
msgid ""
"Rainfall is converted from the raw \"total since last reset\" figure to a"
" more useful total in the last hour, day or month."
msgstr ""
"La pluie est convertie à partir des données brutes \"totale depuis la "
"dernière réinitialisation\" chiffré à un total plus utile durant la "
"dernière heure, un jour ou mois."

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`calibrate_data <pywws.process.calibrate_data>`\\ \\(params\\, "
"raw\\_data\\, calib\\_data\\)"
msgstr ""
":obj:`calibrate_data <pywws.Process.calibrate_data>`\\ (logger, params, "
"raw_data, ...)"

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
msgid "'Calibrate' raw data, using a user-supplied function."
msgstr ""
"Calibre les données brutes, en utilisant une fonction fournie par "
"l'utilisateur."

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`generate_daily <pywws.process.generate_daily>`\\ "
"\\(day\\_end\\_hour\\, use\\_dst\\, ...\\)"
msgstr ""
":obj:`generate_daily <pywws.Process.generate_daily>`\\ (logger, "
"day_end_hour, ...)"

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
msgid "Generate daily summaries from calibrated and hourly data."
msgstr "Génére les résumés quotidiens à partir des données calibrées et horaires."

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`generate_hourly <pywws.process.generate_hourly>`\\ "
"\\(calib\\_data\\, hourly\\_data\\, ...\\)"
msgstr ""
":obj:`generate_hourly <pywws.Process.generate_hourly>`\\ (logger, "
"calib_data, ...)"

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
msgid "Generate hourly summaries from calibrated data."
msgstr "Génére les résumés horaire à partir des données calibrées."

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`generate_monthly <pywws.process.generate_monthly>`\\ "
"\\(rain\\_day\\_threshold\\, ...\\)"
msgstr ""
":obj:`generate_monthly <pywws.Process.generate_monthly>`\\ (logger, "
"rain_day_threshold, ...)"

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
msgid "Generate monthly summaries from daily data."
msgstr "Génère les résumés mensuels à partir des données quotidiennes."

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
msgid ":py:obj:`get_day_end_hour <pywws.process.get_day_end_hour>`\\ \\(params\\)"
msgstr ""

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.process.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.Reprocess.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
#, fuzzy
msgid ":py:obj:`process_data <pywws.process.process_data>`\\ \\(context\\)"
msgstr ":obj:`Reprocess <pywws.Reprocess.Reprocess>`\\ (data_dir, update)"

#: ../../src/doc/api/pywws.process.rst:27:<autosummary>:1
msgid "Generate summaries from raw weather station data."
msgstr "Génére les résumés de données brutes de la station météo."

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
#, fuzzy
msgid ":py:obj:`Average <pywws.process.Average>`\\ \\(\\)"
msgstr ":obj:`Average <pywws.Process.Average>`\\ ()"

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
msgid "Compute average of multiple data values."
msgstr "Calcule la moyenne des multiples valeurs de données."

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
#, fuzzy
msgid ":py:obj:`DayAcc <pywws.process.DayAcc>`\\ \\(\\)"
msgstr ":obj:`DayAcc <pywws.Process.DayAcc>`\\ ()"

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
msgid "'Accumulate' weather data to produce daily summary."
msgstr "'Accumule' les données météorologiques pour produire le résumé quotidien."

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
#, fuzzy
msgid ":py:obj:`HourAcc <pywws.process.HourAcc>`\\ \\(last\\_rain\\)"
msgstr ":obj:`HourAcc <pywws.Process.HourAcc>`\\ (last_rain)"

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
msgid "'Accumulate' raw weather data to produce hourly summary."
msgstr ""
"'Accumule' les données météorologiques brutes pour produire le "
"récapitulatif horaire."

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
#, fuzzy
msgid ":py:obj:`Maximum <pywws.process.Maximum>`\\ \\(\\)"
msgstr ":obj:`Maximum <pywws.Process.Maximum>`\\ ()"

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
msgid "Compute maximum value and timestamp of multiple data values."
msgstr ""
"Calcule la valeur maximale ainsi que l'heure et la date des multiples "
"valeurs de données."

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
#, fuzzy
msgid ":py:obj:`Minimum <pywws.process.Minimum>`\\ \\(\\)"
msgstr ":obj:`Minimum <pywws.Process.Minimum>`\\ ()"

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
msgid "Compute minimum value and timestamp of multiple data values."
msgstr ""
"Calcule la valeur minimale ainsi que l'heure et la date des multiples "
"valeurs de données."

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
#, fuzzy
msgid ":py:obj:`MonthAcc <pywws.process.MonthAcc>`\\ \\(rain\\_day\\_threshold\\)"
msgstr ":obj:`MonthAcc <pywws.Process.MonthAcc>`\\ (rain_day_threshold)"

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
msgid "'Accumulate' daily weather data to produce monthly summary."
msgstr ""
"'Accumule' les données météorologiques quotidiennes pour produire le "
"sommaire mensuel."

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
#, fuzzy
msgid ":py:obj:`WindFilter <pywws.process.WindFilter>`\\ \\(\\[decay\\]\\)"
msgstr ":obj:`WindFilter <pywws.Process.WindFilter>`\\ ([decay])"

#: ../../src/doc/api/pywws.process.rst:38:<autosummary>:1
msgid "Compute average wind speed and direction."
msgstr "Calcul la vitesse moyenne du vent et la direction."

#: ../../src/doc/api/pywws.regulartasks.rst:2
#, fuzzy
msgid "pywws.regulartasks"
msgstr "pywws.Tasks"

#: of pywws.regulartasks:1
#, fuzzy
msgid ""
"Routines to perform common tasks such as plotting graphs or uploading "
"files."
msgstr ""
"Routines pour effectuer des tâches courantes telles que tracer les gaphes"
" ou téléverser des fichiers."

#: ../../src/doc/api/pywws.regulartasks.rst:20:<autosummary>:1
msgid ":py:obj:`RegularTasks <pywws.regulartasks.RegularTasks>`\\ \\(context\\)"
msgstr ""

#: ../../src/doc/api/pywws.reprocess.rst:2
#, fuzzy
msgid "pywws.reprocess"
msgstr "pywws.Reprocess"

#: of pywws.reprocess:1
msgid "Regenerate hourly and daily summary data."
msgstr "Régénérer les données sommaires horaires et quotidiennes."

#: of pywws.reprocess:3
#, fuzzy
msgid "This module can also be run with the ``pywws-reprocess`` command. ::"
msgstr "Le script peut aussi être exécuté avec la commande ``pywws-reprocess``. ::"

#: of pywws.reprocess:12
#, fuzzy
msgid ""
"This module recreates the calibrated, hourly, daily and monthly summary "
"data that is created by the :py:mod:`pywws.process` module. It should be "
"run whenever you upgrade to a newer version of pywws (if the summary data"
" format has changed), change your calibration module or alter your "
"pressure offset."
msgstr ""
"Ce programme recrée les données récapitulatives calibrées, horaires, "
"quotidiennes et mensuelles créées par le module :py:mod:`pywws.Process`. "
"Il doit être exécuté chaque fois que vous effectuez une mise à niveau "
"vers une version plus récente de pywws (si le format des données "
"récapitulatives a changé), que vous modifiez votre module d'étalonnage ou"
" que vous modifiez votre décalage de pression."

#: of pywws.reprocess:18
msgid ""
"The ``-u`` (or ``--update``) option is a special case. It should be used "
"when upgrading from any pywws version earlier than 14.02.dev1143. Unlike "
"normal reprocessing, the ``-u`` option changes your raw data. You are "
"advised to backup your data before using the ``-u`` option."
msgstr ""
"L'option ``-u`` (ou ``--update``) est un cas particulier. Il doit être "
"utilisé lors de la mise à niveau à partir de n'importe quelle version de "
"pywws antérieure à 14.02.dev1143. Contrairement au retraitement normal, "
"l'option ``-u`` modifie vos données brutes. Il est conseillé de "
"sauvegarder vos données avant d'utiliser l'option ``-u``."

#: ../../src/doc/api/pywws.reprocess.rst:17:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.reprocess.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.Reprocess.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.reprocess.rst:17:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`reprocess <pywws.reprocess.reprocess>`\\ \\(data\\_dir\\, "
"update\\)"
msgstr ":obj:`Reprocess <pywws.Reprocess.Reprocess>`\\ (data_dir, update)"

#: ../../src/doc/api/pywws.service.rst:2
#, fuzzy
msgid "pywws.service"
msgstr "pywws.toservice"

#: of pywws.service:1
#, fuzzy
msgid "Base classes for \"service\" uploaders."
msgstr "nom du service vers lequel télécharger."

#: ../../src/doc/api/pywws.service.rst:21:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.service.main>`\\ \\(class\\_\\[\\, argv\\]\\)"
msgstr ":obj:`main <pywws.toservice.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.service.rst:31:<autosummary>:1
msgid ""
":py:obj:`CatchupDataService <pywws.service.CatchupDataService>`\\ "
"\\(context\\[\\, check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.rst:31:<autosummary>:1
msgid ""
":py:obj:`DataServiceBase <pywws.service.DataServiceBase>`\\ "
"\\(context\\[\\, check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.rst:31:<autosummary>:1
msgid "Base class for \"data\" services."
msgstr ""

#: ../../src/doc/api/pywws.service.rst:31:<autosummary>:1
msgid ""
":py:obj:`FileService <pywws.service.FileService>`\\ \\(context\\[\\, "
"check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.rst:31:<autosummary>:1
msgid "Base class for \"file\" services."
msgstr ""

#: ../../src/doc/api/pywws.service.rst:31:<autosummary>:1
msgid ""
":py:obj:`LiveDataService <pywws.service.LiveDataService>`\\ "
"\\(context\\[\\, check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.rst:31:<autosummary>:1
msgid ":py:obj:`Queue <pywws.service.Queue>`\\ \\(start\\, \\*arg\\, \\*\\*kw\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.rst:31:<autosummary>:1
msgid ""
":py:obj:`ServiceBase <pywws.service.ServiceBase>`\\ \\(context\\[\\, "
"check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.rst:31:<autosummary>:1
#, fuzzy
msgid "Base class for all service uploaders."
msgstr "nom du service vers lequel télécharger."

#: ../../src/doc/api/pywws.service.copy.rst:2
#, fuzzy
msgid "pywws.service.copy"
msgstr "pywws.toservice"

#: of pywws.service.copy:1
#, fuzzy
msgid "Copy files to another directory."
msgstr "donne des enregistrements de données météo."

#: of pywws.service.copy:3
msgid ""
"This module can be used to copy template and graph results to another "
"directory on your computer. This could be useful if you are running a web"
" server on the same machine as pywws (or on a machine that's accessible "
"as a network share)."
msgstr ""

#: of pywws.service.copy:8 pywws.service.cwop:11 pywws.service.ftp:9
#: pywws.service.mastodon:10 pywws.service.metoffice:12 pywws.service.mqtt:9
#: pywws.service.openweathermap:9 pywws.service.pwsweather:10
#: pywws.service.sftp:10 pywws.service.temperaturnu:8 pywws.service.twitter:14
#: pywws.service.underground:9 pywws.service.weathercloud:5
#: pywws.service.wetterarchivde:9 pywws.service.windy:10
msgid "Example ``weather.ini`` configuration::"
msgstr ""

#: of pywws.service.copy:18
msgid ""
"Run :py:mod:`pywws.service.copy` once to set the default configuration, "
"which you can then change. ``directory`` is the full path of a directory "
"in which all the copied files will be put."
msgstr ""

#: of pywws.service.copy:22
msgid ""
"You can copy any files you like, as often as you like, but typical usage "
"is to update a website once an hour. Each file to be uploaded needs to be"
" listed in a service entry like ``('copy', 'filename')``. If the file is "
"not in your ``work`` directory's ``output`` directory then ``filename`` "
"should be the full path."
msgstr ""

#: of pywws.service.copy:28
msgid ""
"If you need to copy some files to a different directory you can copy the "
":py:mod:`pywws.service.copy` module to your ``modules`` directory, making"
" sure that you rename it, for example to ``copy2.py``. This creates a "
"``copy2`` service that you can use in the same way, but with a different "
"``directory``."
msgstr ""

#: ../../src/doc/api/pywws.service.copy.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.copy.ToService>`\\ \\(context\\[\\, "
"check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.cwop.rst:2
#, fuzzy
msgid "pywws.service.cwop"
msgstr "pywws.toservice"

#: of pywws.service.cwop:1
#, fuzzy
msgid "Upload weather data to Citizen Weather Observer Program."
msgstr ""
"Téléverse les données météo pour les services météorologiques tels que "
"Weather Underground."

#: of pywws.service.cwop:3
msgid ""
"The `Citizen Weather Observer Program`_ (CWOP) is a north American "
"public-private partnership to gather weather data. This module uploads "
"data to it from pywws. You can upload \"logged\" or \"live\" data (or "
"both). The module ensures there is at least 5 minutes between each "
"reading as required by the API."
msgstr ""

#: of pywws.service.cwop:9
msgid "Create account: http://www.wxqa.com/SIGN-UP.html"
msgstr ""

#: of pywws.service.cwop:10
msgid "API: http://www.wxqa.com/faq.html"
msgstr ""

#: of pywws.service.cwop:25
msgid ""
"Note that the latitude and longitude must be in \"LORAN\" format and "
"leading zeros are required. See question 3 in the `CWOP FAQ`_ for more "
"information."
msgstr ""

#: of pywws.service.cwop:29
msgid ""
"Licensed radio hams use their callsign as the designator and need a "
"passcode. Other users should leave the passcode at its default value of "
"``-1``."
msgstr ""

#: of pywws.service.cwop:33
msgid ""
"The CWOP/APRS uploader is based on code by Marco Trevisan "
"<mail@3v1n0.net>."
msgstr ""

#: ../../src/doc/api/pywws.service.cwop.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.cwop.ToService>`\\ \\(context\\[\\, "
"check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.ftp.rst:2
#, fuzzy
msgid "pywws.service.ftp"
msgstr "pywws.toservice"

#: of pywws.service.ftp:1
#, fuzzy
msgid "Upload files to a web server by FTP."
msgstr ""
"Téléverse des fichiers sur un serveur web via ftp ou les copies dans un "
"répertoire local ::"

#: of pywws.service.ftp:3
msgid ""
"This module uploads files to (typically) a website *via* FTP. Details of "
"the upload destination are stored in the file ``weather.ini`` in your "
"data directory. You should be able to get the required information from "
"your web space provider. If your provider allows SFTP then you could use "
":py:mod:`pywws.service.sftp` for greater security."
msgstr ""

#: of pywws.service.ftp:23
msgid ""
"Run :py:mod:`pywws.service.ftp` once to set the default configuration, "
"which you can then change. ``directory`` is the name of a directory in "
"which all the uploaded files will be put. This will depend on the "
"structure of your web site and the sort of host you use. ``port`` is the "
"port number to use. 21 is the standard value but your web space provider "
"may require a different port."
msgstr ""

#: of pywws.service.ftp:30
msgid ""
"You can upload any files you like, as often as you like, but typical "
"usage is to update a website once an hour. Each file to be uploaded needs"
" to be listed in a service entry like ``('ftp', 'filename')``. If the "
"file is not in your ``work`` directory's ``output`` directory then "
"``filename`` should be the full path."
msgstr ""

#: ../../src/doc/api/pywws.service.ftp.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.ftp.ToService>`\\ \\(context\\[\\, "
"check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.mastodon.rst:2
#, fuzzy
msgid "pywws.service.mastodon"
msgstr "pywws.toservice"

#: of pywws.service.mastodon:1
msgid "Post messages to Mastodon."
msgstr ""

#: of pywws.service.mastodon:3
msgid ""
"Mastodon_ is a micro-blogging system that at first sight looks a bit like"
" Twitter. In many ways it's quite different though. This module sends "
"\"toots\", with optional image files, typically to report on weather "
"conditions every hour."
msgstr ""

#: of pywws.service.mastodon:8
msgid "Create account: https://joinmastodon.org/"
msgstr ""

#: of pywws.service.mastodon:9
msgid "Additional dependency: https://mastodonpy.readthedocs.io/"
msgstr ""

#: of pywws.service.mastodon:25 pywws.service.twitter:29
msgid "Create an account"
msgstr ""

#: of pywws.service.mastodon:27
msgid ""
"Before creating a Mastodon account for your weather reports you need to "
"choose an \"instance\". Mastodon is a federated system, running on many "
"interconnected servers, each of which is called an instance. Choose one "
"whose rules allow \"bots\" (i.e. automated posts) such as "
"`botsin.space`_. After creating an account, edit its profile and make "
"sure the \"this is a bot account\" box is selected."
msgstr ""

#: of pywws.service.mastodon:34
msgid ""
"The :py:mod:`pywws.service.mastodon` module requires you to install an "
"additional dependency::"
msgstr ""

#: of pywws.service.mastodon:40 pywws.service.twitter:47
msgid "Authorise pywws"
msgstr ""

#: of pywws.service.mastodon:42
msgid ""
"Before you can send \"toots\" you need to authorise pywws to post to your"
" account. If you run pywws on a low power device such as a Raspberry Pi, "
"you may find it easier to run this authorisation step on another "
"computer, as long as it has the required dependencies installed. You can "
"use an empty 'data' directory -- a ``weather.ini`` file will be created "
"whose contents can be copied into your real ``weather.ini`` file using "
"any text editor."
msgstr ""

#: of pywws.service.mastodon:50 pywws.service.twitter:57
msgid ""
"Make sure no other pywws software is running, then run the module with "
"the ``-r`` option. (Remember to replace ``data_dir`` with your data "
"directory.) ::"
msgstr ""

#: of pywws.service.mastodon:56
msgid ""
"The first time you do this it will probably crash because you haven't set"
" your Mastodon \"handle\" in ``weather.ini``. Edit ``weather.ini`` and "
"add your handle as shown above, then run the module with the ``-r`` "
"option again."
msgstr ""

#: of pywws.service.mastodon:61
msgid ""
"This will open a web browser window (or give you a URL to copy to your "
"web browser) where you can log in to your Mastodon account and authorise "
"pywws to post. If the login is successful the browser will display a long"
" code string which you then copy to pywws::"
msgstr ""

#: of pywws.service.mastodon:71
msgid ""
"The ``access_token`` value stored in ``weather.ini`` gives access to your"
" Mastodon account and should be kept confidential."
msgstr ""

#: of pywws.service.mastodon:75 pywws.service.twitter:89
msgid "Create a template"
msgstr ""

#: of pywws.service.mastodon:77
msgid ""
"A \"toot\" is a short text of up to 500 characters. It's up to you what "
"to put in your \"toots\" but an example is included to get your started. "
"Copy the example template ``toot.txt`` to your template directory, then "
"edit it to suit your preferences. (At least change the hashtags to suit "
"your location.) You should also check it uses the same text encoding as "
"your other templates. The example template includes a ``media`` line to "
"send a graph. Either remove this or copy the example graph template "
"``tweet.png.xml`` to your graph templates directory, if you don't already"
" have one there."
msgstr ""

#: of pywws.service.mastodon:87
msgid "Now generate a toot file from your template, for example::"
msgstr ""

#: of pywws.service.mastodon:93
msgid "Post your first toot"
msgstr ""

#: of pywws.service.mastodon:95
msgid "Now you are ready to run :py:mod:`pywws.service.mastodon`::"
msgstr ""

#: of pywws.service.mastodon:99
msgid ""
"If this works, your new Mastodon account will have posted its first "
"weather report. (You can delete the toot.txt file now.)"
msgstr ""

#: of pywws.service.mastodon:103
msgid "Add Mastodon posts to your hourly tasks"
msgstr ""

#: of pywws.service.mastodon:105
msgid ""
"Edit the ``[hourly]`` section in ``weather.ini``. If your toots include "
"one or more graphs you need to add the graph templates to the ``plot`` "
"list. Note that if you reuse your Twitter graph you only need to generate"
" it once. Add your toot template to the ``text`` list. Finally, add "
"``mastodon`` to the ``services`` list, with an option specifying the "
"template processing result. For example::"
msgstr ""

#: of pywws.service.mastodon:117
msgid ""
"You could use the ``[logged]``, ``[12 hourly]`` or ``[daily]`` sections "
"instead, but I think ``[hourly]`` is most appropriate for Mastodon "
"updates."
msgstr ""

#: of pywws.service.mastodon:122
msgid "Add more images"
msgstr ""

#: of pywws.service.mastodon:124
msgid ""
"Mastodon allows up to four images per \"toot\", so you could add more "
"graphs, or a webcam image, or a weather forecast icon. Use one ``media`` "
"line per image at the start of your toot template. You need to give the "
"full path of any files that are not in your \"output\" directory (a "
"subdirectory of your work directory called ``output``)."
msgstr ""

#: ../../src/doc/api/pywws.service.mastodon.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.mastodon.ToService>`\\ \\(context\\[\\,"
" check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.metoffice.rst:2
#, fuzzy
msgid "pywws.service.metoffice"
msgstr "pywws.toservice"

#: of pywws.service.metoffice:1
#, fuzzy
msgid "Upload weather data to UK Met Office \"WOW\"."
msgstr "Téléverser un enregistrement de données météorologiques en utilisant HTTP."

#: of pywws.service.metoffice:3
msgid ""
"The UK Met Office runs a `Weather Observations Website`_ (WOW) that "
"displays readings from amateur and official weather stations. This module"
" uploads data to it from pywws. You can upload \"logged\" or \"live\" "
"data (or both). The module ensures there is at least 5 minutes between "
"each reading as required by the API."
msgstr ""

#: of pywws.service.metoffice:9
msgid ""
"Create account: "
"https://register.metoffice.gov.uk/WaveRegistrationClient/public/newaccount.do?service=weatherobservations"
msgstr ""

#: of pywws.service.metoffice:10
msgid "API: http://wow.metoffice.gov.uk/support/dataformats#automatic"
msgstr ""

#: of pywws.service.metoffice:11 pywws.service.openweathermap:8
#: pywws.service.pwsweather:9 pywws.service.temperaturnu:7
#: pywws.service.underground:8 pywws.service.weathercloud:4
#: pywws.service.wetterarchivde:8 pywws.service.windy:9
msgid "Additional dependency: http://docs.python-requests.org/"
msgstr ""

#: of pywws.service.metoffice:24
msgid ""
"Note that a ``site id`` allocated since June 2016 will probably look like"
" ``6a571450-df53-e611-9401-0003ff5987fd``."
msgstr ""

#: ../../src/doc/api/pywws.service.metoffice.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.metoffice.ToService>`\\ "
"\\(context\\[\\, check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.mqtt.rst:2
#, fuzzy
msgid "pywws.service.mqtt"
msgstr "pywws.toservice"

#: of pywws.service.mqtt:1
msgid "Upload weather data to MQTT message broker."
msgstr ""

#: of pywws.service.mqtt:3
msgid ""
"MQTT_ is a \"message broker\" system, typically running on ``localhost`` "
"or another computer in your home network. Use of MQTT with pywws requires"
" an additional library. See :ref:`Dependencies - MQTT <dependencies-"
"mqtt>` for details."
msgstr ""

#: of pywws.service.mqtt:8
msgid "Mosquitto (a lightweight broker): http://mosquitto.org/"
msgstr ""

#: of pywws.service.mqtt:26
msgid ""
"To customize the MQTT message use template_txt (remove illuminance and uv"
" if weather station does not support them)::"
msgstr ""

#: of pywws.service.mqtt:67
msgid ""
"pywws will publish a JSON string of weather data. This data will be "
"published to the broker running on ``hostname``, with the port number "
"specified. (An IP address can be used instead of a host name.) "
"``client_id`` is a note of who published the data to the topic. ``topic``"
" can be any string value, this needs to be the topic that a subscriber is"
" aware of."
msgstr ""

#: of pywws.service.mqtt:74
msgid ""
"``retain`` is a boolean and should be set to ``True`` or ``False``. If "
"set to ``True`` this will flag the message sent to the broker to be "
"retained. Otherwise the broker discards the message if no client is "
"subscribing to this topic. This allows clients to get an immediate "
"response when they subscribe to a topic, without having to wait until the"
" next message is published."
msgstr ""

#: of pywws.service.mqtt:81
msgid "``user`` and ``password`` can be used for MQTT authentication."
msgstr ""

#: of pywws.service.mqtt:83
msgid ""
"``tls_cert`` and ``tls_ver`` are used for MQTT TLS security. Set tls_cert"
" as the path to a CA certificate (e.g. tls_cert = "
"/home/pi/pywws/ca_cert/mqtt_ca.crt) and tls_ver to the TLS version (e.g. "
"tls_ver = 2) (TLS1.2 recommended). See https://mosquitto.org/man"
"/mosquitto-tls-7.html for information on how to generate certificates. "
"Only copy the ca.crt to your pywws client. See http://www.steves-"
"internet-guide.com/mosquitto-tls/ for a step-by-step guide to securing "
"your MQTT server. Note that secure MQTTS usually uses port 8883, so you "
"will need to also change the port number."
msgstr ""

#: of pywws.service.mqtt:93
msgid ""
"``multi_topic`` is a boolean and should be set to ``True`` or ``False``. "
"If set to ``True`` pywws will also publish all the data each as separate "
"subtopics of the configured ``topic``; e.g., with the ``topic`` set to "
"/weather/pywws pywws will also publish the outside temperature to "
"``/weather/pywws/temp_out_c`` and the inside temperature to "
"``/weather/pywws/temp_in_c``."
msgstr ""

#: of pywws.service.mqtt:100
msgid ""
"``template_txt`` is the template used to generate the data to be "
"published. You can edit it to suit your own requirements. Be very careful"
" about the backslash escaped quotation marks though. If not specified "
"default will be used, which sends a lot of values in metric and imperial "
"units."
msgstr ""

#: of pywws.service.mqtt:106
msgid ""
"Default for ``template_txt`` was updated. This change is not backwards "
"compatible, the original values are still present, just under new names. "
"New default tries to send most of the values pywws collects in both "
"metric and imperial units. This is to make it easier for new users to get"
" going."
msgstr ""

#: of pywws.service.mqtt:113
msgid ""
"If these aren't obvious to you it's worth doing a bit of reading around "
"MQTT. It's a great lightweight messaging system from IBM, recently made "
"more popular when Facebook published information on their use of it."
msgstr ""

#: of pywws.service.mqtt:117
msgid ""
"This has been tested with the Mosquitto Open Source MQTT broker, running "
"on a Raspberry Pi (Raspian OS). TLS (mqtt data encryption) is not yet "
"implemented."
msgstr ""

#: of pywws.service.mqtt:121
msgid ""
"Thanks to Matt Thompson for writing the MQTT code and to Robin Kearney "
"for adding the retain and auth options."
msgstr ""

#: ../../src/doc/api/pywws.service.mqtt.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.mqtt.ToService>`\\ \\(context\\[\\, "
"check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.openweathermap.rst:2
#, fuzzy
msgid "pywws.service.openweathermap"
msgstr "pywws.toservice"

#: of pywws.service.openweathermap:1
msgid "Upload weather data to Open Weather Map."
msgstr ""

#: of pywws.service.openweathermap:3
msgid ""
"`Open Weather Map`_ is a Latvian based IT company seeking to provide "
"affordable weather data."
msgstr ""

#: of pywws.service.openweathermap:6
msgid "Create account: https://home.openweathermap.org/users/sign_up"
msgstr ""

#: of pywws.service.openweathermap:7
msgid "API: https://openweathermap.org/stations"
msgstr ""

#: of pywws.service.openweathermap:23
msgid ""
"Configuring pywws to use Open Weather Map is a bit more complicated than "
"with other services. Start by running the module to set some default "
"values in weather.ini (with no other pywws software running)::"
msgstr ""

#: of pywws.service.openweathermap:29
msgid ""
"After signing up and logging in to Open Weather Map visit the `API keys "
"page`_ and copy your default key to the ``api key`` entry in weather.ini."
" The ``external id`` field is a single word name to identify your "
"station. You could use a name based on your post code, or maybe your id "
"from Weather Underground or CWOP. The ``station name`` is a longer, human"
" readable, name. I'm not sure what use Open Weather Map makes of either "
"of these. ``lat`` and ``long`` should be set to the latitude and "
"longitude of your station (in degrees) and ``alt`` to its altitude in "
"metres."
msgstr ""

#: of pywws.service.openweathermap:39
msgid ""
"After setting (or changing) the above fields you need to \"register\" "
"your station with Open Weather Map. This is done by running the module "
"with the ``-r`` flag::"
msgstr ""

#: of pywws.service.openweathermap:45
msgid ""
"If you already have any stations registered with Open Weather Map this "
"will show you their details. You can select one of these existing "
"stations or register a new one. pywws then sends the configuration values"
" from weather.ini to Open Weather Map."
msgstr ""

#: of pywws.service.openweathermap:50
msgid ""
"If this succeeds then Open Weather Map will have allocated a ``station "
"id`` value which pywws stores in weather.ini. All this complication is to"
" allow more than one station to be attached to one user's account."
msgstr ""

#: ../../src/doc/api/pywws.service.openweathermap.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.openweathermap.ToService>`\\ "
"\\(context\\[\\, check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.pwsweather.rst:2
#, fuzzy
msgid "pywws.service.pwsweather"
msgstr "pywws.toservice"

#: of pywws.service.pwsweather:1
msgid "Upload weather data to PWS Weather."
msgstr ""

#: of pywws.service.pwsweather:3
msgid ""
"`PWS Weather`_ is a site run by AerisWeather_ that \"brings together "
"personal weather station data worldwide from locales not served by "
"primary weather services.\""
msgstr ""

#: of pywws.service.pwsweather:7
msgid "Create account: http://www.pwsweather.com/register.php"
msgstr ""

#: of pywws.service.pwsweather:8
msgid ""
"API based on WU protocol: "
"`<http://wiki.wunderground.com/index.php/PWS_-_Upload_Protocol>`_"
msgstr ""

#: ../../src/doc/api/pywws.service.pwsweather.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.pwsweather.ToService>`\\ "
"\\(context\\[\\, check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.sftp.rst:2
#, fuzzy
msgid "pywws.service.sftp"
msgstr "pywws.toservice"

#: of pywws.service.sftp:1
#, fuzzy
msgid "Upload files to a web server by SFTP."
msgstr ""
"Téléverse des fichiers sur un serveur web via ftp ou les copies dans un "
"répertoire local ::"

#: of pywws.service.sftp:3
msgid ""
"This module uploads files to (typically) a website *via* SFTP. Details of"
" the upload destination are stored in the file ``weather.ini`` in your "
"data directory. You should be able to get the required information from "
"your web space provider. If your provider doesn't allow SFTP then use "
":py:mod:`pywws.service.ftp` instead."
msgstr ""

#: of pywws.service.sftp:9
msgid "Additional dependency: https://www.paramiko.org/ v2.1.0 or later"
msgstr ""

#: of pywws.service.sftp:25
msgid "Paramiko can be installed with ``pip``::"
msgstr ""

#: of pywws.service.sftp:29
msgid ""
"Run :py:mod:`pywws.service.sftp` once to set the default configuration, "
"which you can then change. ``directory`` is the name of a directory in "
"which all the uploaded files will be put. This will depend on the "
"structure of your web site and the sort of host you use. ``port`` is the "
"port number to use. 22 is the standard value but your web space provider "
"may require a different port."
msgstr ""

#: of pywws.service.sftp:36
msgid ""
"Authentication can be by password or RSA public key. To use a key you "
"first need to create a passwordless key pair using ``ssh-keygen``, then "
"copy the public key to your web space provider. For example::"
msgstr ""

#: of pywws.service.sftp:43
msgid ""
"Move both key files to somewhere convenient, such as "
"``/home/pywws/.ssh/`` and set ``privkey`` to the full path of the private"
" key."
msgstr ""

#: of pywws.service.sftp:47
msgid ""
"You can upload any files you like, as often as you like, but typical "
"usage is to update a website once an hour. Each file to be uploaded needs"
" to be listed in a service entry like ``('sftp', 'filename')``. If the "
"file is not in your ``work`` directory's ``output`` directory then "
"``filename`` should be the full path."
msgstr ""

#: ../../src/doc/api/pywws.service.sftp.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.sftp.ToService>`\\ \\(context\\[\\, "
"check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.temperaturnu.rst:2
#, fuzzy
msgid "pywws.service.temperaturnu"
msgstr "pywws.toservice"

#: of pywws.service.temperaturnu:1
msgid "Upload current temperature to temperatur.nu."
msgstr ""

#: of pywws.service.temperaturnu:3
msgid ""
"temperatur.nu is a Swedish web site that shows the current temperature in"
" many places."
msgstr ""

#: of pywws.service.temperaturnu:6
msgid "Web site: http://www.temperatur.nu/"
msgstr ""

#: of pywws.service.temperaturnu:19
msgid ""
"You receive the hash value from the temperatur.nu admins during sign up."
"  It looks like ``d3b07384d113edec49eaa6238ad5ff00``."
msgstr ""

#: ../../src/doc/api/pywws.service.temperaturnu.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.temperaturnu.ToService>`\\ "
"\\(context\\[\\, check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.twitter.rst:2
#, fuzzy
msgid "pywws.service.twitter"
msgstr "pywws.toservice"

#: of pywws.service.twitter:1
#, fuzzy
msgid "Post messages to Twitter."
msgstr "Poster un message sur Twitter ::"

#: of pywws.service.twitter:3
msgid ""
"Twitter_ is a popular micro-blogging service. Users send short messages "
"(up to 280 characters) called \"tweets\". This module sends tweets, with "
"optional image files, typically to report on weather conditions every "
"hour."
msgstr ""

#: of pywws.service.twitter:8
msgid "Create account: https://twitter.com/"
msgstr ""

#: of pywws.service.twitter:9
msgid "Additional dependencies:"
msgstr ""

#: of pywws.service.twitter:11
msgid "https://github.com/joestump/python-oauth2"
msgstr ""

#: of pywws.service.twitter:12
msgid ""
"https://github.com/bear/python-twitter *or* "
"https://github.com/tweepy/tweepy"
msgstr ""

#: of pywws.service.twitter:31
msgid ""
"You could post weather updates to your ‘normal’ Twitter account, but I "
"think it’s better to have a separate account just for weather reports. "
"This could be useful to someone who lives in your area, but doesn’t want "
"to know what you had for breakfast."
msgstr ""

#: of pywws.service.twitter:36
msgid ""
"The :py:mod:`pywws.service.twitter` module requires you to install "
"additional dependencies. There is a choice of Python Twitter library. Use"
" either ``python-twitter`` (preferred) or ``tweepy``::"
msgstr ""

#: of pywws.service.twitter:42
msgid "*or* ::"
msgstr ""

#: of pywws.service.twitter:49
msgid ""
"Before you can send tweets you need to authorise pywws to post to your "
"account. If you run pywws on a low power device such as a Raspberry Pi, "
"you may find it easier to run this authorisation step on another "
"computer, as long as it has the required dependencies installed. You can "
"use an empty 'data' directory -- a ``weather.ini`` file will be created "
"whose contents can be copied into your real ``weather.ini`` file using "
"any text editor."
msgstr ""

#: of pywws.service.twitter:63
msgid ""
"This will open a web browser window (or give you a URL to copy to your "
"web browser) where you can log in to your Twitter account and authorise "
"pywws to post. If the login is successful the browser will display a 7 "
"digit number which you then copy to pywws::"
msgstr ""

#: of pywws.service.twitter:73
msgid ""
"The ``secret`` and ``key`` values stored in ``weather.ini`` give access "
"to your Twitter account and should be kept confidential."
msgstr ""

#: of pywws.service.twitter:77
msgid "Add location data (optional)"
msgstr ""

#: of pywws.service.twitter:79
msgid ""
"Edit your ``weather.ini`` file and add ``latitude`` and ``longitude`` "
"entries to the ``[twitter]`` section. For example::"
msgstr ""

#: of pywws.service.twitter:91
msgid ""
"A tweet is a short text of up to 280 characters (fewer if you include "
"images). It's up to you what to put in your tweets but an example is "
"included to get your started. Copy the example template ``tweet.txt`` to "
"your template directory, then edit it to suit your preferences. You "
"should also check it uses the same text encoding as your other templates."
msgstr ""

#: of pywws.service.twitter:98
msgid "Now generate a tweet file from your template, for example::"
msgstr ""

#: of pywws.service.twitter:103
msgid ""
"(Replace ``~/weather/data`` and ``~/weather/templates`` with your data "
"and template directories.) If you need to change the template (e.g. to "
"change the units or language used) you can edit it now or later."
msgstr ""

#: of pywws.service.twitter:108
msgid "Post your first tweet"
msgstr ""

#: of pywws.service.twitter:110
msgid ""
"Now you are ready to run :py:mod:`pywws.service.twitter`. Using high "
"verbosity shows you what's happening as it runs::"
msgstr ""

#: of pywws.service.twitter:115
msgid ""
"If this works, your new Twitter account will have posted its first "
"weather report. (You can delete the tweet.txt file now.)"
msgstr ""

#: of pywws.service.twitter:119
msgid "Add Twitter posts to your hourly tasks"
msgstr ""

#: of pywws.service.twitter:121
msgid ""
"Edit the ``[hourly]`` section in ``weather.ini``. Add your tweet template"
" to the ``text`` list. Then add ``twitter`` to the ``services`` list, "
"with an option specifying the template processing result. For example::"
msgstr ""

#: of pywws.service.twitter:130
msgid ""
"You could use the ``[logged]``, ``[12 hourly]`` or ``[daily]`` sections "
"instead, but I think ``[hourly]`` is most appropriate for Twitter "
"updates."
msgstr ""

#: of pywws.service.twitter:135
msgid "Include images in your tweet"
msgstr ""

#: of pywws.service.twitter:137
msgid ""
"You can add up to four images to your tweets by specifying the image file"
" locations in the tweet template. Make the first line of the tweet "
"``media path`` where ``path`` is the file name, or full path for files "
"that are not in your \"output\" directory (a subdirectory of your work "
"directory called ``output``). Repeat for any additional image files. The "
"\"tweet_media.txt\" example template shows how to do this."
msgstr ""

#: of pywws.service.twitter:144
msgid ""
"The image could be from a web cam, or for a weather forecast it could be "
"an icon representing the forecast. To add a weather graph you need to "
"make sure the graph is drawn before the tweet is sent. The "
":py:mod:`pywws.regulartasks` module processes graph and text templates "
"before doing service uploads, so you can include the graph drawing in the"
" same section. For example::"
msgstr ""

#: ../../src/doc/api/pywws.service.twitter.rst:22:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`PythonTwitterHandler "
"<pywws.service.twitter.PythonTwitterHandler>`\\ \\(key\\, secret\\, "
"latitude\\, ...\\)"
msgstr ""
":obj:`PythonTwitterHandler <pywws.ToTwitter.PythonTwitterHandler>`\\ "
"(clé, secret, latitude, ...)"

#: ../../src/doc/api/pywws.service.twitter.rst:22:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.twitter.ToService>`\\ \\(context\\[\\, "
"check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.twitter.rst:22:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`TweepyHandler <pywws.service.twitter.TweepyHandler>`\\ \\(key\\,"
" secret\\, latitude\\, longitude\\)"
msgstr ""
":obj:`TweepyHandler <pywws.ToTwitter.TweepyHandler>`\\ (clé, secret, "
"latitude, longitude)"

#: ../../src/doc/api/pywws.service.underground.rst:2
#, fuzzy
msgid "pywws.service.underground"
msgstr "pywws.toservice"

#: of pywws.service.underground:1
#, fuzzy
msgid "Upload data to Weather Underground."
msgstr ""
"Téléverse les données météo pour les services météorologiques tels que "
"Weather Underground."

#: of pywws.service.underground:3
msgid ""
"`Weather Underground`_ may be the oldest and best known site gathering "
"data from amateur weather stations."
msgstr ""

#: of pywws.service.underground:6
msgid "Create account: https://www.wunderground.com/signup"
msgstr ""

#: of pywws.service.underground:7
msgid "API: `<https://support.weather.com/s/article/PWS-Upload-Protocol>`_"
msgstr ""

#: of pywws.service.underground:22
msgid ""
"The ``internal`` configuration setting allows you to include indoor "
"temperature and humidity in your uploads."
msgstr ""

#: of pywws.service.underground:25
msgid ""
"Note that ``password`` is not the password you use to log in to Weather "
"Underground, it's the ``Key`` value shown on your list of devices: "
"https://www.wunderground.com/member/devices"
msgstr ""

#: of pywws.service.underground:29
msgid ""
"Previous versions of pywws had an extra ``underground_rf`` service to use"
" Weather Underground's \"rapid fire\" server for frequent uploads. Now "
"the rapid fire server is used automatically for \"live\" data and the "
"normal server for past data."
msgstr ""

#: ../../src/doc/api/pywws.service.underground.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.underground.ToService>`\\ "
"\\(context\\[\\, check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.weathercloud.rst:2
#, fuzzy
msgid "pywws.service.weathercloud"
msgstr "pywws.toservice"

#: of pywws.service.weathercloud:1
msgid "Upload data to WeatherCloud."
msgstr ""

#: of pywws.service.weathercloud:3
msgid "Create account: https://weathercloud.net/"
msgstr ""

#: ../../src/doc/api/pywws.service.weathercloud.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.weathercloud.ToService>`\\ "
"\\(context\\[\\, check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.wetterarchivde.rst:2
#, fuzzy
msgid "pywws.service.wetterarchivde"
msgstr "pywws.toservice"

#: of pywws.service.wetterarchivde:1
#, fuzzy
msgid "Upload weather data to wetter.com."
msgstr "donne des enregistrements de données météo."

#: of pywws.service.wetterarchivde:3
msgid ""
"wetter.com_ is a web site gathering data mainly from stations in Germany."
" It's referred to in pywws as wetterarchivde for historical reasons."
msgstr ""

#: of pywws.service.wetterarchivde:7
msgid "Register station: https://www.wetter.com/mein_wetter/login/"
msgstr ""

#: ../../src/doc/api/pywws.service.wetterarchivde.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.wetterarchivde.ToService>`\\ "
"\\(context\\[\\, check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.service.windy.rst:2
#, fuzzy
msgid "pywws.service.windy"
msgstr "pywws.toservice"

#: of pywws.service.windy:1
#, fuzzy
msgid "Upload data to Windy."
msgstr "les données à envoyer."

#: of pywws.service.windy:3
msgid ""
"Windy_  is a Czech company providing interactive weather forecasting "
"services worldwide."
msgstr ""

#: of pywws.service.windy:6
msgid "Create account: https://stations.windy.com/"
msgstr ""

#: of pywws.service.windy:7
msgid ""
"API: https://community.windy.com/topic/8168/report-your-weather-station-"
"data-to-windy"
msgstr ""

#: of pywws.service.windy:8
msgid ""
"Forum discussion: https://community.windy.com/topic/11014/pywws-great-"
"python-software-app-to-send-data-to-windy"
msgstr ""

#: of pywws.service.windy:22
msgid ""
"Note that you only need to specify your station ID if you have more than "
"one station defined for your API. Windy allows other data, such as the "
"latitude and longitude, to be included in the upload but it's better to "
"set these by editing your station at https://stations.windy.com/stations."
msgstr ""

#: ../../src/doc/api/pywws.service.windy.rst:20:<autosummary>:1
msgid ""
":py:obj:`ToService <pywws.service.windy.ToService>`\\ \\(context\\[\\, "
"check\\_params\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.setweatherstation.rst:2
#, fuzzy
msgid "pywws.setweatherstation"
msgstr "pywws.SetWeatherStation"

#: of pywws.setweatherstation:1
msgid "Set some weather station parameters."
msgstr "Régler certains paramètres de la station météo."

#: of pywws.setweatherstation:3
msgid ""
"This script can also be run with the ``pywws-setweatherstation`` command."
" ::"
msgstr ""
"Ce script peut également être exécuté avec la commande ``pywws-"
"setweatherstation``. ::"

#: ../../src/doc/api/pywws.setweatherstation.rst:17:<autosummary>:1
#, fuzzy
msgid ":py:obj:`bcd_encode <pywws.setweatherstation.bcd_encode>`\\ \\(value\\)"
msgstr ":obj:`bcd_encode <pywws.SetWeatherStation.bcd_encode>`\\ (value)"

#: ../../src/doc/api/pywws.setweatherstation.rst:17:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.setweatherstation.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.SetWeatherStation.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.sqlite3data.rst:2
#, fuzzy
msgid "pywws.sqlite3data"
msgstr "pywws.livelogdaemon"

#: of pywws.sqlite3data:1
msgid "Store weather data in an SQLite3 database file."
msgstr ""

#: of pywws.sqlite3data:6
msgid ""
"This module is an alternative to the pywws file based storage system. It "
"stores data using the mature SQLite3 database system, but with underlying"
" queries wrapped so the user need not know about them."
msgstr ""

#: of pywws.sqlite3data:10
msgid ""
"It should also be possible for this module to form the basis of a full "
"client-server based SQL module using, for example, MySQL etc."
msgstr ""

#: of pywws.sqlite3data:13
msgid ""
"The Python builtin sqlite3 module is used which has a threadsafety of 1, "
"therefore this module creates a connection with every Store (sub)class "
"instance. This however brings concurrancy issues and so this module makes"
" use of the underlying sqlite3's Write-Ahead-Loging and Shared Cache "
"modes to relieve this. These rely on up to date sqlite3 libraries and may"
" not work on older networked drives which do not support the right "
"locking semantics required by sqlite3."
msgstr ""

#: of pywws.sqlite3data:22
msgid ""
"The external API is as per the original pywws file store, but with some "
"enhancements so as to behave more like a mapping container (dict)."
msgstr ""

#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`CalibStore <pywws.sqlite3data.CalibStore>`\\ \\(dir\\_name\\)"
msgstr ":obj:`calib_store <pywws.DataStore.calib_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
#, fuzzy
msgid "Stores \"calibrated\" weather station data."
msgstr "Stocke les données  \"calibrées\" de la station météo."

#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`CoreStore <pywws.sqlite3data.CoreStore>`\\ \\(dir\\_name\\)"
msgstr ":obj:`core_store <pywws.DataStore.core_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
msgid ""
"Provides a dictionary/list like interface to an underlying SQLite3 "
"database"
msgstr ""

#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`DailyStore <pywws.sqlite3data.DailyStore>`\\ \\(dir\\_name\\)"
msgstr ":obj:`daily_store <pywws.DataStore.daily_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`HourlyStore <pywws.sqlite3data.HourlyStore>`\\ \\(dir\\_name\\)"
msgstr ":obj:`hourly_store <pywws.DataStore.hourly_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`MonthlyStore <pywws.sqlite3data.MonthlyStore>`\\ \\(dir\\_name\\)"
msgstr ":obj:`monthly_store <pywws.DataStore.monthly_store>`\\ (root_dir)"

#: ../../src/doc/api/pywws.sqlite3data.rst:25:<autosummary>:1
#, fuzzy
msgid ":py:obj:`RawStore <pywws.sqlite3data.RawStore>`\\ \\(dir\\_name\\)"
msgstr ":obj:`ParamStore <pywws.DataStore.ParamStore>`\\ (root_dir, file_name)"

#: ../../src/doc/api/pywws.storage.rst:2
#, fuzzy
msgid "pywws.storage"
msgstr "pywws.Logger"

#: of pywws.storage:1
msgid "Store parameters in easy to access files, and access backend data"
msgstr ""

#: of pywws.storage:6
msgid ""
"This module is at the core of pywws. By default it stores data on disc, "
"using a backend module which uses text files (see "
":py:mod:`pywws.filedata`) but other plugin backend modules can be used to"
" use alternative means. These modules must adopt the same API (Class "
"names and methods) as :py:mod:`pywws.filedata` so as to be transparent to"
" the rest of pywws."
msgstr ""

#: of pywws.storage:41
msgid ""
"See :py:mod:`pywws.filedata` for more details on the underlying data "
"store API."
msgstr ""

#: ../../src/doc/api/pywws.storage.rst:21:<autosummary>:1
msgid ""
":py:obj:`pywws_context <pywws.storage.pywws_context>`\\ "
"\\(data\\_dir\\[\\, live\\_logging\\]\\)"
msgstr ""

#: ../../src/doc/api/pywws.storage.rst:27:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`ParamStore <pywws.storage.ParamStore>`\\ \\(root\\_dir\\, "
"file\\_name\\)"
msgstr ":obj:`ParamStore <pywws.DataStore.ParamStore>`\\ (root_dir, file_name)"

#: ../../src/doc/api/pywws.storage.rst:27:<autosummary>:1
msgid ""
":py:obj:`PywwsContext <pywws.storage.PywwsContext>`\\ \\(data\\_dir\\, "
"live\\_logging\\)"
msgstr ""

#: ../../src/doc/api/pywws.template.rst:2
#, fuzzy
msgid "pywws.template"
msgstr "pywws.Template"

#: of pywws.template:1
msgid "Create text data file based on a template ::"
msgstr "Crée un fichier de données texte basé sur un gabarit ::"

#: of pywws.template:16
msgid ""
"This is probably the most difficult to use module in the weather station "
"software collection. It generates text files based on a \"template\" file"
" plus the raw, hourly, daily & monthly weather station data. The template"
" processing goes beyond simple substitution of values to include loops, "
"jumps forwards or backwards in the data, processing of the data and "
"substitution of missing values."
msgstr ""
"C'est probablement le module le plus difficile à utiliser dans le "
"logiciel de collecte de la station météo. Il génère des fichiers de texte"
" basé sur un fichier \"modèle\"  ainsi que les données brutes, horaires, "
"quotidiennes et mensuelles de la station météo. Le traitement de gabarits"
" va au-delà de la simple substitution des valeurs pour inclure des "
"boucles, des sauts vers l'avant ou vers l'arrière dans les données, le "
"traitement des données et de substitution des valeurs manquantes."

#: of pywws.template:23
msgid ""
"A template file can be any sort of text file (plain text, xml, html, "
"etc.) to which \"processing instructions\" have been added. These "
"processing instructions are delimited by hash ('#') characters. They are "
"not copied to the output, but cause something else to happen: either a "
"data value is inserted or one of a limited number of other actions is "
"carried out."
msgstr ""
"Un fichier gabarit peut être n'importe quel type de fichier texte (texte "
"brut, xml, html, etc) dans lequel des \"instructions de traitement\" ont "
"été ajoutées. Ces instructions de traitement sont délimitées par le "
"caractère dièse ('#'). Ils ne sont pas affichés, mais provoquent autre "
"chose: soit une valeur de données est insérée ou un nombre limité "
"d'actions sont exécutées."

#: of pywws.template:30
msgid ""
"Before writing your own template files, it might be useful to look at "
"some of the examples in the example_templates directory."
msgstr ""
"Avant d'écrire vos propres fichiers gabarits, il pourrait être utile "
"d'examiner quelques-uns des exemples dans le répertoire "
"example_templates."

#: of pywws.template:36
#, fuzzy
msgid ""
"The ``[config]`` section of :ref:`weather.ini <weather_ini-config>` has a"
" ``template encoding`` entry that tells pywws what text encoding most of "
"your template files use. The default value, ``iso-8859-1``, is suitable "
"for most western European languages, but may need changing if you use "
"another language. It can be set to any text encoding recognised by the "
"Python :py:mod:`codecs` module."
msgstr ""
"La section ``[config]`` de :ref:`weather.ini <weather_ini-config>` a une "
"entrée ``template encoding`` qui indique à pywws quel encodage de texte "
"vos fichiers gabarits utilisent. La valeur par défaut, ``iso-8859-1``, "
"convient à la plupart des langues d'Europe occidentale, mais peut devoir "
"être modifiée si vous utilisez une autre langue. Il peut être défini sur "
"n'importe quel encodage de texte reconnu par le module Python "
":py:mod:`codecs`."

#: of pywws.template:43
#, fuzzy
msgid ""
"Make sure your templates use the text encoding you set. The `iconv "
"<http://man7.org/linux/man-pages/man1/iconv.1.html>`_ program can be used"
" to transcode files."
msgstr ""
"Assurez-vous que tous vos gabarits utilisent le codage de texte que vous "
"avez défini. Le programme `iconv <http://man7.org/linux/man-"
"pages/man1/iconv.1.html>`_ peut être utilisé pour transcoder des "
"fichiers."

#: of pywws.template:47
msgid ""
"the ``#encoding#`` processing instruction can be used to set the text "
"encoding of a template file."
msgstr ""

#: of pywws.template:52
msgid "Processing instructions"
msgstr "Instructions de traitement"

#: of pywws.template:54
msgid ""
"Note that if the closing '#' of a processing instruction is the last "
"character on a line then the following line break is not outputted. This "
"makes templates easier to edit as you can have a separate line for each "
"processing instruction and still produce output with no line breaks. If "
"you want to output a line break after a processing instruction, put a "
"blank line immediately after it."
msgstr ""
"Notez que si le '#' fermant d'une instruction de traitement est le "
"dernier caractère d'une ligne, le saut de ligne suivant n'est pas émis. "
"Cela rend les modèles plus faciles à modifier car vous pouvez avoir une "
"ligne distincte pour chaque instruction de traitement tout en produisant "
"une sortie sans saut de ligne. Si vous souhaitez afficher un saut de "
"ligne après une instruction de traitement, placez une ligne vide "
"immédiatement après."

#: of pywws.template:61
msgid ""
"Processing instructions can be split across lines to improve readability."
" Split lines are joined together before processing, after removing any "
"trailing newline characters."
msgstr ""

#: of pywws.template:66
msgid "``##``"
msgstr "``##``"

#: of pywws.template:68
msgid "output a single '#' character."
msgstr "affiche un seul caractère '#'."

#: of pywws.template:71
msgid "``#! comment text#``"
msgstr "``#! comment text#``"

#: of pywws.template:73
msgid ""
"a comment, no output generated. ``comment text`` can be any text without "
"a line break."
msgstr ""
"un commentaire, pas de sortie généré. '' ``comment text`` peut être "
"n'importe quel texte sans saut de ligne."

#: of pywws.template:77
msgid "``#monthly#``"
msgstr "``#monthly#``"

#: of pywws.template:79
msgid ""
"switch to \"monthly\" summary data. The index is reset to the most recent"
" value."
msgstr ""
"affiche le sommaire des données \"mensuelles\". L'indice est "
"réinintialisé à la plus récente valeur."

#: of pywws.template:83
msgid "``#daily#``"
msgstr "``#daily#``"

#: of pywws.template:85
msgid ""
"switch to \"daily\" summary data. The index is reset to the most recent "
"value."
msgstr ""
"affiche le sommaire des données \"quotidiennes\". L'indice est "
"réinintialisé à la plus récente valeur."

#: of pywws.template:89
msgid "``#hourly#``"
msgstr "``#hourly#``"

#: of pywws.template:91
msgid ""
"switch to \"hourly\" summary data. The index is reset to the most recent "
"value."
msgstr ""
"affiche le sommaire des données \"horaires\". L'indice est réinintialisé "
"à la plus récente valeur."

#: of pywws.template:95
msgid "``#raw#``"
msgstr "``#raw#``"

#: of pywws.template:97
msgid "switch to \"raw\" data. The index is reset to the most recent value."
msgstr ""
"affiche les données \"brutes\". L'indice est réinitialisé à la plus "
"récente valeur."

#: of pywws.template:99
msgid ""
"This now selects \"calibrated\" data. The directive name remains "
"unchanged for backwards compatibility."
msgstr ""
"Cela sélectionne maintenant les données \"calibrées\". Le nom de la "
"directive reste inchangé pour une compatibilité descendante."

#: of pywws.template:104
msgid "``#live#``"
msgstr "``#live#``"

#: of pywws.template:106
msgid ""
"switch to \"live\" data. If the template is processed in the ``[live]`` "
"section of ``weather.ini`` this will select the most up-to-date weather "
"data, otherwise it will have the same effect as ``#raw#``. Any ``#jump#``"
" will go to \"raw\" data."
msgstr ""
"passer aux données \"en direct\". Si le modèle est traité dans la section"
" ``[live]`` de ``weather.ini``, cela sélectionnera les données "
"météorologiques les plus récentes, sinon cela aura le même effet que "
"``#raw#` `. Tout ``#jump#`` ira aux données \"brutes\"."

#: of pywws.template:112
msgid "``#timezone name#``"
msgstr "``#timezone name#``"

#: of pywws.template:114
msgid ""
"convert all datetime values to time zone ``name`` before output. "
"Permitted values for name are ``utc`` or ``local``."
msgstr ""
"converti  toute les valeurs de temps en zone de temps ``name`` avant "
"affichage. Les valeurs permises sont ``utc`` ou ``local``."

#: of pywws.template:118
msgid "``#locale expr#``"
msgstr "``#locale expr#``"

#: of pywws.template:120
msgid ""
"switch use of 'locale' on or off, according to ``expr``. When locale is "
"on floating point numbers may use a comma as the decimal separator "
"instead of a point, depending on your localisation settings. Use "
"``\"True\"`` or ``\"False\"`` for expr."
msgstr ""
"activer ou désactiver l'utilisation de 'locale', selon ``expr``. Lorsque "
"les paramètres régionaux sont sur virgule flottante, les nombres peuvent "
"utiliser une virgule comme séparateur décimal au lieu d'un point, selon "
"vos paramètres de localisation. Utilisez ``\"True\"`` ou ``\"False\"`` "
"pour expr."

#: of pywws.template:126
#, fuzzy
msgid "``#encoding expr#``"
msgstr "``#roundtime expr#``"

#: of pywws.template:130
msgid ""
"set the template text encoding to ``expr``, e.g. ``ascii``, ``utf8`` or "
"``html``. The ``html`` encoding is a special case. It writes ``ascii`` "
"files but with non ASCII characters converted to HTML entities."
msgstr ""

#: of pywws.template:134
msgid ""
"Any ``#encoding#`` directive should be placed near the beginning of the "
"template file, before any non-ASCII characters are used."
msgstr ""

#: of pywws.template:138
msgid "``#roundtime expr#``"
msgstr "``#roundtime expr#``"

#: of pywws.template:140
msgid ""
"switch time rounding on or off, according to ``expr``. When time rounding"
" is on, 30 seconds is added to each time value used. This is useful if "
"you are only printing out hours and minutes, e.g. with a \"%H:%M\" "
"format, and want time values such as 10:23:58 to appear as \"10:24\". Use"
" ``\"True\"`` or ``\"False\"`` for expr."
msgstr ""
"met l'arrondissement du temps en fonction ou hors fonction, selon "
"``expr``. Lorsque l'arrondissement du temps est en fonction, 30 secondes "
"est ajouté à chaque valeur de temps utilisée. Ceci est utile lorsque vous"
" affichez seulement en heures et minutes, exemple avec un format "
"\"%H:%M\", et que vous souhaitez qu'une valeur comme 10:23:58 apparaisse "
"ainsi \"10:24\". Pour la valeur de expr, utiliser ``\"True\"`` ou "
"``\"False\"``."

#: of pywws.template:147
msgid "``#jump count#``"
msgstr "``#jump count#``"

#: of pywws.template:149
msgid ""
"jump ``count`` values. The data index is adjusted by ``count`` hours or "
"days. Negative values jump back in time."
msgstr ""
"saute ``count`` valeurs. L'indice des données est ajusté par ``count`` "
"heures ou jours. Des valeures négatives saute en arrière dans le temps."

#: of pywws.template:152
msgid ""
"It is a good idea to put jumps within a loop at the end, just before the "
"``#endloop#`` instruction. The loop can then terminate cleanly if it has "
"run out of data."
msgstr ""
"Dans une boucle, c'est une bonne idée de mettre des sauts à la fin, juste"
" avant l'instruction ``#endloop``. La boucle peut alors se terminer "
"proprement si elle a épuisé toutes les données."

#: of pywws.template:157
msgid "``#goto date-time#``"
msgstr "``#goto date-time#``"

#: of pywws.template:159
msgid ""
"go to ``date-time``. The data index is adjusted to the record immediately"
" after ``date-time``. This can be in UTC or your local time zone, "
"according to the setting of ``timezone``, and must exactly match the ISO "
"date format, for example ``\"2010-11-01 12:00:00\"`` is noon on 1st "
"November 2010."
msgstr ""
"aller à ``date-time``. L'indice des données est ajusté à l'enregistrement"
" immédiatement après ``date-time``. Ceci peut être en temps UTC ou dans "
"votre zone de temps local, selon la configuration de ``timezone``, et "
"doit exactement correspondre au format de date ISO, par exemple "
"``\"2010-11-01 12:00:00\"`` est midi le 1er Novembre 2010."

#: of pywws.template:165
#, python-format
msgid ""
"Parts of ``date-time`` can be replaced with strftime style % format "
"characters to specify the current loop index. For example, ``\"%Y-%m-01 "
"12:00:00\"`` is noon on 1st of this month."
msgstr ""
"Des parties de ``date-time`` peuvent être remplacées par le caractère de "
"formatage % comme dans strftime pour spécifier l'indice courant de la "
"bouche. Par exemple, ``\"%Y-%m-01 12:00:00\"`` est midi le 1er de ce "
"mois."

#: of pywws.template:170
msgid "``#loop count#``"
msgstr "``#loop count#``"

#: of pywws.template:172
msgid ""
"start a loop that will repeat ``count`` times. ``count`` must be one or "
"more."
msgstr ""
"démarre une boucle qui se répétera ``count`` fois. ``count`` doit être "
"égale à 1 ou plus."

#: of pywws.template:176
msgid "``#endloop#``"
msgstr "``#endloop#``"

#: of pywws.template:178
msgid ""
"end a loop started by ``#loop count#``. The template processing will go "
"back to the line containing the ``#loop count#`` instruction. Don't try "
"to nest loops."
msgstr ""
"termine une boucle démarrée par ``#loop count# ``. Le traitement du "
"gabarit reviendra à la ligne contenant l'instruction ``#loop count#``. Ne"
" pas essayer d'imbriquer des boucles."

#: of pywws.template:183
msgid "``#key fmt_string no_value_string conversion#``"
msgstr "``#key fmt_string no_value_string conversion#``"

#: of pywws.template:185
#, python-format
msgid ""
"output a data value. ``key`` is the data key, e.g. ``temp_out`` for "
"outdoor temperature. ``fmt_string`` is a printf-like format string "
"(actually Python's % operator) except for datetime values, when it is "
"input to datetime's ``strftime()`` method. ``no_value_string`` is output "
"instead of ``fmt_string`` when the data value is absent, e.g. if the "
"station lost contact with the outside sensor. ``conversion`` is a Python "
"expression to convert the data, e.g. to convert wind speed from m/s to "
"mph you could use ``\"x * 3.6 / 1.609344\"``, or the more convenient "
"provided function ``\"wind_mph(x)\"``. See the "
":py:mod:`pywws.conversions` module for details of the available "
"functions."
msgstr ""
"affiche une valeur de données. ``key`` est la clé de données, par ex. "
"``temp_out`` pour la température extérieure. ``fmt_string`` est une "
"chaîne de format de type printf (en fait l'opérateur % de Python) sauf "
"pour les valeurs datetime, lorsqu'il est entré dans la méthode "
"``strftime()`` de datetime. ``no_value_string`` est affiché au lieu de "
"``fmt_string`` lorsque la valeur de données est absente, par ex. si la "
"station a perdu le contact avec le capteur extérieur. ``conversion`` est "
"une expression Python pour convertir les données, par ex. pour convertir "
"la vitesse du vent de m/s en mph, vous pouvez utiliser ``\"x * 3.6 / "
"1.609344\"``, ou la fonction fournie plus pratique ``\"wind_mph(x)\"``. "
"Voir le module :py:mod:`pywws.conversions` pour plus de détails sur les "
"fonctions disponibles."

#: of pywws.template:197
msgid ""
"All these values need double quotes \" if they contain spaces or other "
"potentially difficult characters. All except ``key`` are optional, but "
"note that if you want to specify a conversion, you also need to specify "
"``fmt_string`` and ``no_value_string``."
msgstr ""
"Toutes ces valeurs doivent entre guillemets \"si elles contiennent des "
"espaces ou d'autres caractères potentiellement difficiles. Tout sauf "
"``key`` sont facultatifs, mais notez que si vous voulez spécifier une "
"conversion, vous devez également spécifier ``fmt_string`` et "
"``no_value_string``."

#: of pywws.template:203
msgid "``#calc expression fmt_string no_value_string conversion#``"
msgstr "``#calc expression fmt_string no_value_string conversion#``"

#: of pywws.template:205
msgid ""
"output a value computed from one or more data items. ``expression`` is "
"any valid Python expression, e.g. ``\"dew_point(data['temp_out'], "
"data['hum_out'])\"`` to compute the outdoor dew point. ``fmt_string``, "
"``no_value_string`` and ``conversion`` are as described above. Note that "
"it is probably more efficient to incorporate any conversion into "
"expression."
msgstr ""
"affiche une valeur calculée à partir d'un ou plusieurs éléments de "
"données. ``expression`` représente toute expression Python valide, par "
"exemple, ``\"Dew_point(data['temp_out'], data['hum_out'])\"`` pour "
"calculer le point de rosée. ``fmt_string``, ``no_value_string`` et "
"``conversion`` sont tel que décrit ci-dessus. Notez qu'il est "
"probablement plus efficace d'intégrer toute conversion dans l'expression."

#: of pywws.template:220
msgid "Example"
msgstr "Exemple"

#: of pywws.template:222
msgid ""
"Here is an example snippet showing basic and advanced use of the template"
" features. It is part of the 6hrs.txt example template file, which "
"generates an HTML table of 7 hourly readings (which should span 6 hours)."
" ::"
msgstr ""
"Voici un extrait qui montre un exemple de l'utilisation de base et avancé"
" des caractéristiques du gabarit. Il fait partie du fichier modèle "
"6hrs.txt, ce qui génère un tableau HTML de 7 relevés horaires (qui "
"devrait s'étendre sur 6 heures). ::"

#: of pywws.template:244
msgid ""
"The first three lines of this snippet do the following: select hourly "
"data, jump back 6 hours, start a loop with a count of 7. A jump forward "
"of one hour appears just before the end of the repeated segment. As this "
"last jump (of one hour) happens each time round the loop, a sequence of 7"
" data readings will be output. The last line marks the end of the loop — "
"everything between the ``#loop 7#`` and ``#endloop#`` lines is output 7 "
"times."
msgstr ""
"Les trois premières lignes de cet extrait, exécutent ce qui suit: "
"sélectionne les données horaires, revient en arrière de 6 heures, "
"commence une boucle avec un nombre de 7. Un saut d'une heure apparaît "
"juste avant la fin du segment répété. Comme ce dernier saut (d'une heure)"
" se produit à chaque tour de la boucle, une séquence de 7 lectures de "
"données sera affichée. La dernière ligne marque la fin de la boucle - "
"tout ce qui est entre les lignes ``#loop 7#`` et ``#endloop#`` est "
"affiché 7 fois."

#: of pywws.template:252
msgid ""
"The ``#temp_out ...#``, ``#hum_out ...#``, ``#rain ...#`` and "
"``#rel_pressure ...#`` instructions show basic data output. They each use"
" a ``fmt_string`` to format the data appropriately. The ``#wind_ave "
"...#`` and ``#wind_gust ...#`` instructions show how to use a conversion "
"expression to convert m/s to mph."
msgstr ""
"Les instructions ``#temp_out ...#``, ``#hum_out ...#``, ``#rain ... #`` "
"et ``#rel_pressure ...#`` affichent les données de base. Elles utilisent "
"chacune un format de donnée ``fmt_string`` pour formater les données de "
"façon appropriée. Les instructions``#wind_ave ...#`` et ``#wind_gust "
"...#`` montrent comment utiliser une expression de conversion pour "
"convertir m/s en mph."

#: of pywws.template:258
msgid ""
"The ``#wind_dir ...#`` and ``#pressure_trend ...#`` instructions show use"
" of the built-in functions ``winddir_text`` and ``pressure_trend_text`` "
"to convert numerical values into text."
msgstr ""
"Les instructions ``#wind_dir ... #`` et ``#pressure_trend ... #`` "
"affichent l'utilisation des fonctions ``winddir_text`` et "
"``pressure_trend_text`` pour convertir des valeurs numériques en texte ."

#: of pywws.template:262
#, python-format
msgid ""
"Finally we get to datetime values. The ``#idx \"%H%M\"#`` instruction "
"simply outputs the time (in HHMM format) of the data's index. The ``#idx "
"\"%Y/%m/%d\" \"\" \"[None, x][x.hour == 0 or loop_count == 7]\"#`` "
"instruction is a bit more complicated. It outputs the date, but only on "
"the first line or if the date has changed. It does this by indexing the "
"array ``[None, x]`` with a boolean expression that is true when "
"``loop_count`` is 7 (i.e. on the first pass through the loop) or "
"``x.hour`` is zero (i.e. this is the first hour of the day)."
msgstr ""
"Enfin nous arrivons aux valeurs de datetime. L'instruction ``#idx "
"\"%H%M\"#`` affiche simplement l'heure (au format HHMM) de l'indice de "
"donnée. L'instruction ``#idx \"%Y/%m/%d\" \"\" \"[None, x] [x.hour == 0 "
"or loop_count == 7]\"#`` est un peu plus compliquée. Elle affiche la "
"date, mais seulement sur la première ligne ou si la date a changée. Elle "
"le fait en indexant le tableau ``[None, x]`` avec une expression "
"booléenne vraie quand ``loop_count`` est égal à 7 (c'est à dire sur le "
"premier passage dans la boucle) ou ``x.hour`` est zéro (c'est la première"
" heure de la journée)."

#: ../../src/doc/api/pywws.template.rst:21:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.template.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.Template.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.template.rst:27:<autosummary>:1
#, fuzzy
msgid ":py:obj:`Computations <pywws.template.Computations>`\\ \\(context\\)"
msgstr ":obj:`main <pywws.Template.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.template.rst:27:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`Template <pywws.template.Template>`\\ \\(context\\[\\, "
"use\\_locale\\]\\)"
msgstr ""
":obj:`Template <pywws.Template.Template>`\\ (params, status, calib_data, "
"...[, ...])"

#: ../../src/doc/api/pywws.testweatherstation.rst:2
#, fuzzy
msgid "pywws.testweatherstation"
msgstr "pywws.TestWeatherStation"

#: of pywws.testweatherstation:1
msgid "Test connection to weather station."
msgstr "Teste la connexion à la station météo."

#: of pywws.testweatherstation:3
msgid ""
"This script can also be run with the ``pywws-testweatherstation`` "
"command. ::"
msgstr ""
"Le script peut aussi être exécuté avec la commande ``pywws-"
"testweatherstation``. ::"

#: of pywws.testweatherstation:18
msgid ""
"This is a simple utility to test communication with the weather station. "
"If this doesn't work, then there's a problem that needs to be sorted out "
"before trying any of the other programs. Likely problems include not "
"properly installing the USB libraries, or a permissions problem. The most"
" unlikely problem is that you forgot to connect the weather station to "
"your computer!"
msgstr ""
"Il s'agit d'un utilitaire simple pour tester la communication avec la "
"station météo. Si cela ne fonctionne pas, il y a un problème qui doit "
"être résolu avant d'essayer l'un des autres programmes. Les problèmes "
"probables incluent une installation incorrecte des bibliothèques USB ou "
"un problème d'autorisations. Le problème le plus improbable est que vous "
"ayez oublié de connecter la station météo à votre ordinateur !"

#: ../../src/doc/api/pywws.testweatherstation.rst:17:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.testweatherstation.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.TestWeatherStation.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.testweatherstation.rst:17:<autosummary>:1
#, fuzzy
msgid ":py:obj:`raw_dump <pywws.testweatherstation.raw_dump>`\\ \\(pos\\, data\\)"
msgstr ":obj:`raw_dump <pywws.TestWeatherStation.raw_dump>`\\ (pos, data)"

#: ../../src/doc/api/pywws.timezone.rst:2
#, fuzzy
msgid "pywws.timezone"
msgstr "pywws.TimeZone"

#: of pywws.timezone:1
msgid ""
"Provide a couple of :py:class:`datetime.tzinfo` compatible objects "
"representing local time and UTC."
msgstr ""
"Fournir un couple d'objets :py:class:`datetime.tzinfo` compatibles "
"représentant l'heure locale et l'heure UTC."

#: of pywws.timezone:7
msgid ""
"This module provides two :py:class:`datetime.tzinfo` compatible objects "
"representing UTC and local time zones. These are used to convert "
"timestamps to and from UTC and local time. The weather station software "
"stores data with UTC timestamps, to avoid problems with daylight savings "
"time, but the template and plot programs output data with local times."
msgstr ""
"Ce module fournit deux objets compatibles :py:class:`datetime.tzinfo` "
"représentant les fuseaux horaires UTC et locaux. Ceux-ci sont utilisés "
"pour convertir les horodatages vers et depuis l'UTC et l'heure locale. Le"
" logiciel de la station météo stocke les données avec des horodatages "
"UTC, pour éviter les problèmes avec l'heure d'été, mais les programmes de"
" gabarit et de tracé produisent des données avec les heures locales."

#: ../../src/doc/api/pywws.timezone.rst:16:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.timezone.main>`\\ \\(\\)"
msgstr ":obj:`main <pywws.TimeZone.main>`\\ ()"

#: ../../src/doc/api/pywws.usbtest.rst:2
#, fuzzy
msgid "pywws.usbtest"
msgstr "pywws.USBQualityTest"

#: of pywws.usbtest:1
msgid "Test quality of USB connection to weather station"
msgstr "Teste la qualité de la connexion USB avec votre station météo"

#: of pywws.usbtest:13
#, python-format
msgid ""
"The USB link to my weather station is not 100% reliable. The data read "
"from the station by the computer is occasionally corrupted, perhaps by "
"interference. I've been trying to solve this by putting ferrite beads "
"around the USB cable and relocating possible interference sources such as"
" external hard drives. All without any success so far."
msgstr ""
"La liaison USB à ma station n'est pas fiable à 100%. Les données lues à "
"partir de la station par l'ordinateur sont occasionnellement corrompues, "
"peut-être par une interférence. J'ai essayé de résoudre ce problème en "
"mettant une perle de ferrite autour du câble USB et le déplaçant des "
"sources d'interférences possibles, tels que les disques durs externes. Le"
" tout sans succès jusqu'à présent."

#: of pywws.usbtest:20
msgid ""
"This program tests the USB connection for errors by continuously reading "
"the entire weather station memory (except for those parts that may be "
"changing) looking for errors. Each 32-byte block is read twice, and if "
"the two readings differ a warning message is displayed. Also displayed "
"are the number of blocks read, and the number of errors found."
msgstr ""
"Ce programme teste la connexion USB en lisant de manière continue toute "
"la mémoire de la station météo (sauf les parties qui peuvent être "
"changeantes) à la recherche d'erreurs. Chaque bloc de 32 octets est lu "
"deux fois, et si les deux lectures diffèrent, un message d'avertissement "
"s'affiche. Sont également affichés le nombre de blocs lus, et le nombre "
"d'erreurs rencontrées."

#: of pywws.usbtest:27
#, fuzzy
msgid ""
"I typically get one or two errors per hour, so the test needs to be run "
"for several hours to produce a useful measurement. Note that other "
"software that accesses the weather station (such as "
":py:mod:`pywws.hourly` or :py:mod:`pywws.livelog`) must not be run while "
"the test is in progress."
msgstr ""
"J'obtiens généralement une ou deux erreurs par heure, donc le test doit "
"être exécuté pendant plusieurs heures pour produire une mesure utile. "
"Notez que les autres logiciels qui accèdent à la station météo (tels que "
":py:mod:`pywws.Hourly` ou :py:mod:`pywws.LiveLog`) ne doivent pas être "
"exécutés pendant que le test est en cours."

#: of pywws.usbtest:33
msgid ""
"If you run this test and get no errors at all, please let me know. There "
"is something good about your setup and I'd love to know what it is!"
msgstr ""
"Si vous exécutez ce test et obtenez absolument aucune erreur, s'il vous "
"plaît faites le moi savoir. Il y a quelque chose de spécial dans votre "
"configuration et j'aimerais bien savoir ce que c'est!"

#: ../../src/doc/api/pywws.usbtest.rst:16:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.usbtest.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.Forecast.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.version.rst:2
msgid "pywws.version"
msgstr "pywws.version"

#: of pywws.version:1
msgid "Display pywws version information."
msgstr "Afficher les informations de version pywws."

#: of pywws.version:3
msgid "This script can also be run with the ``pywws-version`` command. ::"
msgstr "Le script peut aussi être exécuté avec la commande ``pywws-version``. ::"

#: ../../src/doc/api/pywws.version.rst:16:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.version.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.version.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.weatherstation.rst:2
#, fuzzy
msgid "pywws.weatherstation"
msgstr "pywws.WeatherStation"

#: of pywws.weatherstation:1
msgid "Get data from WH1080/WH3080 compatible weather stations."
msgstr ""
"Obtient les données des stations météorologiques WH1080/WH3080 et "
"compatibles."

#: of pywws.weatherstation:3
msgid ""
"Derived from wwsr.c by Michael Pendec (michael.pendec@gmail.com), "
"wwsrdump.c by Svend Skafte (svend@skafte.net), modified by Dave Wells, "
"and other sources."
msgstr ""
"Dérivé de wwsr.c par Michael Pendec (michael.pendec@gmail.com), "
"wwsrdump.c par Svend Skafte (svend@skafte.net), modifié par Dave Wells, "
"et d'autres sources."

#: of pywws.weatherstation:10
msgid ""
"This is the module that actually talks to the weather station base unit. "
"I don't have much understanding of USB, so copied a lot from Michael "
"Pendec's C program wwsr."
msgstr ""
"C'est le module qui parle à l'unité de base de la station météo. Je n'ai "
"pas beaucoup de compréhension de l'USB, donc j'ai copié beaucoup du "
"programme C wwsr de Michael Pendec."

#: of pywws.weatherstation:14
msgid ""
"The weather station memory has two parts: a \"fixed block\" of 256 bytes "
"and a circular buffer of 65280 bytes. As each weather reading takes 16 "
"bytes the station can store 4080 readings, or 14 days of 5-minute "
"interval readings. (The 3080 type stations store 20 bytes per reading, so"
" store a maximum of 3264.) As data is read in 32-byte chunks, but each "
"weather reading is 16 or 20 bytes, a small cache is used to reduce USB "
"traffic. The caching behaviour can be over-ridden with the ``unbuffered``"
" parameter to ``get_data`` and ``get_raw_data``."
msgstr ""
"La mémoire de la station météorologique comporte deux parties: un \"bloc "
"fixe\" de 256 octets et une mémoire tampon circulaire de 65280 octets. "
"Comme chaque lecture météo prend 16 octets, la station peut stocker 4080 "
"lectures, ou 14 jours de lectures intervalle de 5 minutes. (Les stations "
"de type 3080 stockent 20 octets par la lecture, pour un maximum de 3264 "
"lectures) Comme les données sont lues en bloc de 32 octets, mais chaque "
"lecture météorologique est de 16 ou 20 octets, un petit cache est utilisé"
" pour réduire le trafic USB. Le comportement de mise en cache mémoire "
"peut être contourné avec le paramètre ``unbuffered`` de ``get_data`` et "
"``get_raw_data``."

#: of pywws.weatherstation:23
#, fuzzy
msgid ""
"Decoding the data is controlled by the static dictionaries "
"``_reading_format``, ``lo_fix_format`` and ``fixed_format``. The keys are"
" names of data items and the values can be an ``(offset, class, kwds)`` "
"tuple or another dictionary. So, for example, the _reading_format "
"dictionary entry ``'rain' : (13, WSFloat, {'signed': False, 'scale': "
"0.3})`` means that the rain value is an unsigned short (two bytes), 13 "
"bytes from the start of the block, and should be multiplied by 0.3 to get"
" a useful value."
msgstr ""
"Le décodage des données est contrôlé par les dictionnaires statiques "
"``_reading_format``, ``lo_fix_format`` et ``fixed_format``. Les clés sont"
" des noms d'éléments de données et les valeurs peuvent être un tuple "
"``(décalage, type, multiplicateur)`` ou un autre dictionnaire. Ainsi, par"
" exemple, l'entrée du dictionnaire _reading_format ``'rain' : (13, 'us', "
"0.3)`` signifie que la valeur de pluie est un nombre court non signé "
"(deux octets), à 13 octets du début du bloc, et doit être multiplié par "
"0,3 pour obtenir une valeur utile."

#: of pywws.weatherstation:32
msgid ""
"The use of nested dictionaries in the ``fixed_format`` dictionary allows "
"useful subsets of data to be decoded. For example, to decode the entire "
"block ``get_fixed_block`` is called with no parameters::"
msgstr ""
"L'utilisation de dictionnaires imbriqués dans le dictionnaire "
"``fixed_format`` permet de décoder des sous-ensembles de données utiles ."
" Par exemple, pour décoder le bloc entier ``get_fixed_block`` celui-ci "
"est appelée sans paramètres::"

#: of pywws.weatherstation:39
msgid ""
"To get the stored minimum external temperature, ``get_fixed_block`` is "
"called with a sequence of keys::"
msgstr ""
"Pour obtenir la température extérieure minimale stockées, "
"``get_fixed_block`` est appelée avec une séquence de clés::"

#: of pywws.weatherstation:45
msgid ""
"Often there is no requirement to read and decode the entire fixed block, "
"as its first 64 bytes contain the most useful data: the interval between "
"stored readings, the buffer address where the current reading is stored, "
"and the current date & time. The ``get_lo_fix_block`` method provides "
"easy access to these."
msgstr ""
"Souvent, il n'est pas nécessaire de lire et décoder l'ensemble du bloc "
"fixe, comme ses 64 premiers octets contiennent les données les plus "
"utiles: l'intervalle entre les lectures enregistrées, l'adresse du tampon"
" où la lecture en cours est mémorisée, ainsi que la date et l'heure "
"courante. La méthode ``get_lo_fix_block`` offre un accès facile à ces "
"données."

#: of pywws.weatherstation:51
#, fuzzy
msgid ""
"For more examples of using the pywws.weatherstation module, see the "
"pywws.testweatherstation module."
msgstr ""
"Pour d'autres exemples de l'utilisation du module WeatherStation, voir le"
" programme TestWeatherStation."

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
#, fuzzy
msgid ":py:obj:`CUSBDrive <pywws.weatherstation.CUSBDrive>`\\ \\(\\)"
msgstr ":obj:`CUSBDrive <pywws.WeatherStation.CUSBDrive>`\\ ()"

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
msgid "Low level interface to weather station via USB."
msgstr "Interface de bas niveau de la station météo via USB."

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`DriftingClock <pywws.weatherstation.DriftingClock>`\\ \\(name\\,"
" status\\, period\\, margin\\)"
msgstr ""
":obj:`DriftingClock <pywws.WeatherStation.DriftingClock>`\\ "
"(enregistreur, nom, état, période, ...)"

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
#, fuzzy
msgid ":py:obj:`WSBits <pywws.weatherstation.WSBits>`\\"
msgstr ":obj:`main <pywws.SetWeatherStation.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
#, fuzzy
msgid ":py:obj:`WSDateTime <pywws.weatherstation.WSDateTime>`\\"
msgstr ":obj:`timedelta <pywws.SetWeatherStation.timedelta>`\\"

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
#, fuzzy
msgid ":py:obj:`WSFloat <pywws.weatherstation.WSFloat>`\\"
msgstr ":obj:`main <pywws.SetWeatherStation.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
#, fuzzy
msgid ":py:obj:`WSInt <pywws.weatherstation.WSInt>`\\"
msgstr ":obj:`main <pywws.SetWeatherStation.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
#, fuzzy
msgid ":py:obj:`WSStatus <pywws.weatherstation.WSStatus>`\\"
msgstr ":obj:`decode_status <pywws.WeatherStation.decode_status>`\\ (status)"

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
#, fuzzy
msgid ":py:obj:`WSTime <pywws.weatherstation.WSTime>`\\"
msgstr ":obj:`timedelta <pywws.SetWeatherStation.timedelta>`\\"

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`WeatherStation <pywws.weatherstation.WeatherStation>`\\ "
"\\(\\[context\\]\\)"
msgstr ""
":obj:`weather_station <pywws.WeatherStation.weather_station>`\\ "
"([ws_type, status, avoid])"

#: ../../src/doc/api/pywws.weatherstation.rst:28:<autosummary>:1
msgid "Class that represents the weather station to user program."
msgstr "Classe qui représente la station météo pour le programme utilisateur."

#: ../../src/doc/api/pywws.windrose.rst:2
#, fuzzy
msgid "pywws.windrose"
msgstr "pywws.WindRose"

#: of pywws.windrose:1
msgid "Plot a \"wind rose\""
msgstr "Tracer une  \"rose des vents\"."

#: of pywws.windrose:18
#, fuzzy
msgid ""
"This routine plots one or more \"wind roses\" (see `Wikipedia "
"<http://en.wikipedia.org/wiki/Wind_rose>`_ for a description). Like "
":py:mod:`pywws.plot` almost everything is controlled by an XML \"recipe\""
" / template file."
msgstr ""
"Cette routine trace une ou plusieurs \"rose des vents\" (voir `Wikipedia "
"<http://en.wikipedia.org/wiki/Wind_rose>` _ pour une description). Comme "
":py:mod:`pywws.Plot` presque tout est contrôlé par un fichier "
"\"recette\"/gabarit XML."

#: of pywws.windrose:23
msgid ""
"Before writing your own template files, it might be useful to look at "
"some of the examples in the example_graph_templates directory. If (like I"
" was) you are unfamiliar with XML, I suggest reading the `W3 Schools XML "
"tutorial <http://www.w3schools.com/xml/>`_."
msgstr ""
"Avant d'écrire vos propres fichiers gabarits, il pourrait être utile de "
"jeter un coup d'oeil sur quelques exemples dans le répertoire "
"example_graph_templates. Si (comme moi) vous n'êtes pas familier avec le "
"langage XML, je vous suggère de lire `Le point sur le XML < "
"http://www.siteduzero.com/tutoriel-3-33440-le-point-sur-xml.html/>` _."

#: of pywws.windrose:31
msgid ""
"Here is the simplest useful wind rose template. It plots wind over the "
"last 24 hours. ::"
msgstr ""
"Voici le plus simple  gabarit de rose des vents utile. Il trace le vent "
"au cours des dernières 24 heures. ::"

#: of pywws.windrose:41
msgid ""
"In this example, the root element graph has one windrose element which "
"contains nothing more than a ycalc element."
msgstr ""
"Dans cet exemple, l'élément racine du graphe est un élément de rose des "
"vents qui ne contient rien de plus qu'un élément ycalc."

#: of pywws.windrose:47
msgid "windrose_"
msgstr "windrose_"

#: of pywws.windrose:50
msgid "threshold_"
msgstr "threshold_"

#: of pywws.windrose:53
msgid "points_"
msgstr "points_"

#: of pywws.windrose:55
#, fuzzy
msgid ":ref:`title <rose-title>`"
msgstr ":ref:`title <plot-title>`"

#: of pywws.windrose:63
msgid "`lmargin, rmargin, tmargin, bmargin`_"
msgstr "`lmargin, rmargin, tmargin, bmargin`_"

#: of pywws.windrose:64
#, fuzzy
msgid ":ref:`title <roses-title>`"
msgstr ":ref:`title <plot-title>`"

#: of pywws.windrose:75
msgid ""
"This element sets the date & time of the wind roses. It is used in the "
"constructor of a Python datetime object. For example, to start at noon "
"(local time) on Christmas day 2008: ``<start>year=2008, month=12, day=25,"
" hour=12</start>``. The default value is (stop - duration)."
msgstr ""
"Cet élément règle la date et l'heure des roses des vents. Il est utilisé "
"dans la construction d'un objet datetime Python. Par exemple, pour "
"commencer, à midi (heure locale) le jour de Noël 2008: "
"``<start>year=2008, month=12, day=25, hour=12</ start>``. La valeur par "
"défaut est (stop - durée)."

#: of pywws.windrose:83
msgid ""
"This element sets the date & time of the end of the wind roses. It is "
"used in the constructor of a Python datetime object. For example, to end "
"at 10 am (local time) on new year's day 2009: ``<stop>year=2009, month=1,"
" day=1, hour=10</stop>``. The default value is (start + duration), unless"
" start is not defined in which case the timestamp of the latest weather "
"station hourly reading is used."
msgstr ""
"Cet élément règle la date et l'heure de la fin des roses des vents. Il "
"est utilisé dans la construction d'un objet datetime Python. Par exemple,"
" pour se terminer à 10 h (heure locale) le jour de l'an 2009: "
"``<stop>year=2009, month=1, day=1, hour=10</stop>``. La valeur par défaut"
" est (départ + durée), à ​​moins que départ ne soit pas défini. Dans ce "
"cas, l'horodatage de la dernière lecture horaire de la station est "
"utilisée."

#: of pywws.windrose:93
msgid ""
"This element sets the duration of wind roses, unless both start and stop "
"are defined. It is used in the constructor of a Python timedelta object. "
"For example, to plot one week: ``<duration>weeks=1</duration>``. The "
"default value is hours=24."
msgstr ""
"Cet élément définit la durée de la rose des vents, à moins que démarrage "
"et arrêt soient définies. Il est utilisé dans la construction d'un objet "
"Python timedelta. Par exemple, pour tracer une semaine: ``<duration> "
"weeks=1</duration>``. La valeur par défaut est hours=24."

#: of pywws.windrose:101
msgid ""
"Controls the layout of the plots. Default is a grid that is wider than it"
" is tall. The layout element specifies rows and columns. For example: "
"``<layout>4, 2</layout>`` will use a grid of 4 rows and 2 columns."
msgstr ""
"Contrôle la disposition des graphes. Le défaut est une grille qui est "
"plus large que haute. L'élément de mise en page définit les lignes et les"
" colonnes. Par exemple: ``<layout> 4, 2 </ layout>`` utilisera une grille"
" de 4 lignes et 2 colonnes."

#: of pywws.windrose:109
msgid ""
"Sets the overall dimensions of the image file containing the graph. "
"Default is a height of 600 pixels and a width that depends on the layout."
" Any size element must include both width and height. For example: "
"``<size>800, 600</size>`` will produce an image 800 pixels wide and 600 "
"pixels high."
msgstr ""
"Définit les dimensions globales du fichier image contenant le graphe. Par"
" défaut elle est d'une hauteur de 600 pixels et une largeur qui dépend de"
" la disposition. Tout élément de taille doit inclure à la fois la largeur"
" et la hauteur. Par exemple: ``<size>800, 600</size>`` produira une image"
" 800 pixels de large et 600 pixels de haut."

#: of pywws.windrose:118
msgid ""
"Sets the image format of the file containing the plots. Default is png. "
"Any string recognised by your installation of gnuplot should do. For "
"example: ``<fileformat>gif</fileformat>`` will produce a GIF image."
msgstr ""
"Définit le format d'image du fichier contenant les graphes. Par défaut "
"png. Toute chaîne reconnue par votre installation de gnuplot peut "
"convenir. Par exemple: ``<fileformat>gif</fileformat>`` va produire une "
"image GIF."

#: of pywws.windrose:124
msgid "lmargin, rmargin, tmargin, bmargin"
msgstr "lmargin, rmargin, tmargin, bmargin"

#: of pywws.windrose:126
msgid ""
"Over-rides the automatically computed left, right, top or bottom margin. "
"Supply any positive real number, for example ``<lmargin>1.3</lmargin>``. "
"Some experimentation may be necessary to find the best values."
msgstr ""
"Remplace automatiquement la marge calculée pour la gauche, la droite, la "
"marge supérieure ou inférieure. Fournir tout nombre réel positif, par "
"exemple ``<lmargin>1.3</lmargin> ``. Quelques essais peuvent être "
"nécessaires pour trouver les meilleures valeurs."

#: of pywws.windrose:136
msgid ""
"Sets the overall title of the plots. A single line of text, for example: "
"``<title>Today's wind direction</title>``. This title appears at the very"
" top, outside any plot area."
msgstr ""
"Définit le titre général des tracés. Une seule ligne de texte, par "
"exemple : ``<title>Direction du vent d'aujourd'hui</title>``. Ce titre "
"apparaît tout en haut, en dehors de toute zone de tracé."

#: of pywws.windrose:140
msgid ""
"If the title contains any \"%\" characters it will be used as a strftime "
"style format string for the datetime of the stop value. This allows you "
"to include the graph's date or time in the title, for example: "
"``<title>Wind over 24 hours ending %H:%M (mph)</title>``"
msgstr ""
"Si le titre contient des caractères \"%\", il sera utilisé comme chaîne "
"de format de style strftime pour la date et l'heure de la valeur d'arrêt."
" Cela vous permet d'inclure la date ou l'heure du graphique dans le "
"titre, par exemple : ``<title>Vent sur 24 heures se terminant %H :%M "
"(mph)</title>``"

#: of pywws.windrose:147
msgid "windrose"
msgstr "windrose"

#: of pywws.windrose:149
msgid ""
"A separate plot is drawn for each windrose element, but all share the "
"same time period."
msgstr ""
"Un tracé séparé est établi pour chaque élément de rose des vents, mais "
"tous partagent le même période."

#: of pywws.windrose:155
msgid ""
"Selects if data is included in the wind rose. The value should be a valid"
" Python logical expression. For example, to plot a rose for afternoon "
"winds only: ``<xcalc>data['idx'].hour &gt;= 12</xcalc>``. This allows "
"aggregation of afternoon wind data over several days. Remember that data "
"is indexed in UTC, so you need to use an expression that takes account of"
" your time zone. The default value is 'True'."
msgstr ""
"Sélectionne si les données sont incluses dans la rose des vents. La "
"valeur doit être une expression logique Python valide. Par exemple, pour "
"tracer une rose des vents pour l'après-midi seulement: ``<xcalc>data "
"['idx'].hour&gt;= 12</xcalc>``. Cela permet l'agrégation des données de "
"vent l'après-midi pendant plusieurs jours. Rappelez-vous que les données "
"sont indexées en UTC, vous devez donc utiliser une expression qui tient "
"compte de votre fuseau horaire. La valeur par défaut est \"True\"."

#: of pywws.windrose:165
msgid ""
"Selects the data to be plotted. Any one line Python expression that "
"returns a single float value can be used. At its simplest this just "
"selects one value from the \"data\" dictionary, for example: "
"``<ycalc>data['wind_ave']</ycalc>``. To convert to mph use: "
"``<ycalc>data['wind_ave'] * 3.6 / 1.609344</ycalc>``. You are unlikely to"
" want to use anything other than 'wind_ave' here."
msgstr ""
"Sélectionne les données à tracer. Toute expression Python sur une ligne "
"qui retourne une valeur flottante simple peut être utilisée. Dans sa plus"
" simple utilisation cela sélectionne une seule valeur du dictionnaire de "
"\"données\", par exemple: ``<ycalc>data['wind_ave']</ycalc>``. Pour "
"convertir en mph, utiliser: ``<ycalc>data['wind_ave'] * 3.6 / "
"1.609344</ycalc>``. Il est très peu probable de vouloir utiliser pour "
"autre chose que 'wind_ave' ici."

#: of pywws.windrose:173
msgid "threshold"
msgstr "threshold"

#: of pywws.windrose:175
msgid ""
"Sets the thresholds for each colour on the rose petals. Defaults are "
"based on the Wikipedia example. The values should be a correctly ordered "
"list of real numbers, for example: ``<threshold>0.5, 3.5, 7.5, 12.5, "
"18.5, 24.5, 31.5</threshold>`` approximates to the Beaufort scale, if "
"ycalc has been set to convert windspeeds to mph."
msgstr ""
"Définit les seuils pour chaque couleur sur les pétales de rose. Par "
"défaut sont basées sur l'exemple Wikipedia. Les valeurs doivent être une "
"liste correctement ordonnée de nombres réels, par exemple: "
"``<threshold>0.5, 3.5, 7.5, 12.5, 18.5, 24.5, 31.5</threshold>`` se "
"rapproche de l'échelle de Beaufort, si ycalc a été défini pour convertir "
"les vitesses de vent en mph."

#: of pywws.windrose:184
msgid ""
"Sets the colours of the threshold petal segments. Can be any sequence of "
"values accepted by gnuplot. Default value is a sequence of integer colour"
" indexes, which is probably not what you want. You may need to experiment"
" with more complicated values such as ::"
msgstr ""
"Définit les couleurs des segments de pétale de seuil. Peut être n'importe"
" quelle séquence de valeurs acceptée par gnuplot. La valeur par défaut "
"est une séquence d'index de couleurs entiers, ce qui n'est probablement "
"pas ce que vous voulez. Vous devrez peut-être expérimenter avec des "
"valeurs plus compliquées telles que ::"

#: of pywws.windrose:194
msgid ""
"Sets the upper limits of the axes. The rose shows what percentage of the "
"time the wind came from a particular direction. For example, if you live "
"somewhere with a very steady wind you might want to allow higher "
"percentages than normal: ``<yrange>91</yrange>``. Auto-scaling is also "
"possible, using an asterisk: ``<yrange>*</yrange>``"
msgstr ""
"Définit les limites supérieures des axes. La rose indique le pourcentage "
"du temps où le vent est venu d'une direction particulière. Par exemple, "
"si vous vivez dans un endroit avec un vent très régulier vous voudrez "
"peut-être permettre à des pourcentages plus élevés que la normale: "
"``<yrange> 91</ yrange>`` . Auto-mise à l'échelle est également possible,"
" à l'aide d'un astérisque:``<yrange> *</ yrange>``"

#: of pywws.windrose:201
msgid "points"
msgstr "points"

#: of pywws.windrose:203
msgid ""
"Sets the text of the compass points. The defaults are 'N', 'S', 'E' & "
"'W'. For graphs in another language you can over-ride this, for example: "
"``<points>'No', 'Zu', 'Oo', 'We'</points>``. (The preferred way to do "
"this is to create a language file, see :py:mod:`pywws.localisation`.)"
msgstr ""

#: of pywws.windrose:222
msgid ""
"Sets the title of the plot. A single line of text, for example: "
"``<title>Morning winds</title>``. This title appears within the plot "
"area, above the threshold colour key."
msgstr ""
"Définit le titre du graphe. Une seule ligne de texte, par exemple: "
"``<title>Vents du matin</title>``. Ce titre apparaît dans la zone de "
"traçage, au-dessus de la légende des couleurs."

#: of pywws.windrose:231
#, fuzzy
msgid ""
"Execute any gnuplot command, just before the main \"plot\" command. This "
"option allows advanced users to have greater control over the graph "
"appearance. The value is any valid gnuplot command, typically beginning "
"with the word set."
msgstr ""
"Exécute n'importe quelle commande gnuplot, juste avant la principale "
"commande de tracé. Cette option permet aux utilisateurs avancés d'avoir "
"plus de contrôle sur l'apparence du graphe. La valeur est une commande "
"gnuplot valide, généralement commençant par un ensemble de mots. Par "
"exemple: ``<command>set key tmargin center horizontal width 1 noreverse "
"enhanced autotitles box linetype -1 linewidth 1</ command>``. (Ne me "
"demandez pas ce que cet exemple produit - Je ne suis pas un utilisateur "
"avancé)."

#: of pywws.windrose:236
msgid ""
"For example, ``<command>set grid front</command>`` will stop the grid "
"being hidden by the coloured wedges, and ``<command>set key outside above"
" right maxrows 1</command>`` will place the key outside the plot area."
msgstr ""

#: ../../src/doc/api/pywws.windrose.rst:21:<autosummary>:1
#, fuzzy
msgid ":py:obj:`main <pywws.windrose.main>`\\ \\(\\[argv\\]\\)"
msgstr ":obj:`main <pywws.WindRose.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.windrose.rst:26:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`RosePlotter <pywws.windrose.RosePlotter>`\\ \\(context\\, "
"work\\_dir\\)"
msgstr ""
":obj:`RosePlotter <pywws.WindRose.RosePlotter>`\\ (params, status, "
"raw_data, ...)"

#~ msgid "pywws.DataStore"
#~ msgstr "pywws.DataStore"

#~ msgid ":obj:`Lock <pywws.DataStore.Lock>`\\"
#~ msgstr ":obj:`Lock <pywws.DataStore.Lock>`\\"

#~ msgid "allocate_lock() -> lock object"
#~ msgstr "allocate_lock() -> lock object"

#~ msgid ""
#~ ":obj:`safestrptime <pywws.DataStore.safestrptime>`\\ "
#~ "(date_string[, format])"
#~ msgstr ""
#~ ":obj:`safestrptime <pywws.DataStore.safestrptime>`\\ "
#~ "(date_string[, format])"

#~ msgid ""
#~ ":obj:`RawConfigParser <pywws.DataStore.RawConfigParser>`\\ "
#~ "([defaults, dict_type, ...])"
#~ msgstr ""
#~ ":obj:`RawConfigParser <pywws.DataStore.RawConfigParser>`\\ "
#~ "([defaults, dict_type, ...])"

#~ msgid ":obj:`date <pywws.DataStore.date>`\\"
#~ msgstr ":obj:`date <pywws.DataStore.date>`\\"

#~ msgid "date(year, month, day) --> date object"
#~ msgstr "date(année, mois, jour) --> date object"

#~ msgid ""
#~ ":obj:`datetime <pywws.DataStore.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.DataStore.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid "The year, month and day arguments are required."
#~ msgstr "Les arguments année, mois et jour sont nécessaires."

#~ msgid ":obj:`params <pywws.DataStore.params>`\\ (root_dir)"
#~ msgstr ":obj:`params <pywws.DataStore.params>`\\ (root_dir)"

#~ msgid "Parameters are stored in a file \"weather.ini\" in root_dir."
#~ msgstr ""
#~ "Les paramètres sont stockés dans le "
#~ "fichier \"weather.ini\", dans le répertoire"
#~ " spécifié par root_dir."

#~ msgid ":obj:`status <pywws.DataStore.status>`\\ (root_dir)"
#~ msgstr ":obj:`status <pywws.DataStore.status>`\\ (root_dir)"

#~ msgid "Status is stored in a file \"status.ini\" in root_dir."
#~ msgstr ""
#~ "Le status est stocké dans le "
#~ "fichier \"status.ini\", dans le répertoire "
#~ "spécifié par root_dir."

#~ msgid ":obj:`timedelta <pywws.DataStore.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.DataStore.timedelta>`\\"

#~ msgid "Difference between two datetime values."
#~ msgstr "Différence entre deux valeurs de datetime."

#~ msgid "Get a parameter value and return a string."
#~ msgstr "Obtient une valeur de paramètre et renvoie une chaîne."

#~ msgid ""
#~ "If default is specified and section "
#~ "or option are not defined in the"
#~ " file, they are created and set "
#~ "to default, which is then the "
#~ "return value."
#~ msgstr ""
#~ "Si la valeur par défaut est "
#~ "spécifiée et la section ou l'option "
#~ "n'est pas définie dans le fichier, "
#~ "ils sont créés et définit par "
#~ "défaut, qui est alors la valeur "
#~ "retournée."

#~ msgid "Set option in section to string value."
#~ msgstr "Définit l'option dans la section, à chaîne."

#~ msgid "Remove option from section."
#~ msgstr "Supprimer l'option de la section."

#~ msgid "Return datetime of newest existing data record whose datetime is < idx."
#~ msgstr ""
#~ "Retourne datetime (horodate) du plus "
#~ "récent enregistrement de données existant "
#~ "dont datetime est <idx."

#~ msgid ""
#~ "Might not even be in the same "
#~ "year! If no such record exists, "
#~ "return None."
#~ msgstr ""
#~ "Peut même ne pas être dans la "
#~ "même année! Si aucun enregistrement "
#~ "n'existe, retourne None (Aucun)."

#~ msgid ""
#~ "Return datetime of oldest existing data"
#~ " record whose datetime is >= idx."
#~ msgstr ""
#~ "Retourne datetime (horodate) de la plus"
#~ " ancienne donnée existante dont datetime"
#~ " est> = idx."

#~ msgid "Return datetime of record whose datetime is nearest idx."
#~ msgstr ""
#~ "Retourne le datetime (horodate) de "
#~ "l'enregistrement dont le datetime est le"
#~ " plus près de idx."

#~ msgid "pywws.EWtoPy"
#~ msgstr "pywws.EWtoPy"

#~ msgid ":obj:`main <pywws.EWtoPy.main>`\\ ([argv])"
#~ msgstr ":obj:`main <pywws.EWtoPy.main>`\\ ([argv])"

#~ msgid ""
#~ ":obj:`datetime <pywws.EWtoPy.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.EWtoPy.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`timedelta <pywws.EWtoPy.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.EWtoPy.timedelta>`\\"

#~ msgid ""
#~ ":obj:`datetime <pywws.Forecast.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.Forecast.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`timedelta <pywws.Forecast.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.Forecast.timedelta>`\\"

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.Hourly.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.Hourly.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"

#~ msgid ""
#~ ":obj:`DataLogger <pywws.Hourly.DataLogger>`\\ (params, "
#~ "status, raw_data)"
#~ msgstr ""
#~ ":obj:`DataLogger <pywws.Hourly.DataLogger>`\\ (params, "
#~ "status, raw_data)"

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.LiveLog.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.LiveLog.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"

#~ msgid ""
#~ ":obj:`DataLogger <pywws.LiveLog.DataLogger>`\\ (params,"
#~ " status, raw_data)"
#~ msgstr ""
#~ ":obj:`DataLogger <pywws.LiveLog.DataLogger>`\\ (params,"
#~ " status, raw_data)"

#~ msgid ""
#~ ":obj:`datetime <pywws.LiveLog.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.LiveLog.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`timedelta <pywws.LiveLog.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.LiveLog.timedelta>`\\"

#~ msgid ""
#~ "This affects the entire application, "
#~ "changing the way dates, currencies and"
#~ " numbers are represented. It should "
#~ "not be called from a library "
#~ "routine that may be used in "
#~ "another program."
#~ msgstr ""
#~ "Cela affecte toute l'application, en "
#~ "changeant la façon dont les dates, "
#~ "les devises et les chiffres sont "
#~ "représentés. Il ne devrait pas être "
#~ "appelée à partir d'une routine de "
#~ "bibliothèque qui peut être utilisée dans"
#~ " un autre programme."

#~ msgid ""
#~ "The ``lang`` parameter can be any "
#~ "string that is recognised by "
#~ "``locale.setlocale()``, for example ``en``, "
#~ "``en_GB`` or ``en_GB.UTF-8``."
#~ msgstr ""
#~ "Le paramètre ``lang`` peut être "
#~ "n'importe quelle chaîne reconnue par "
#~ "``locale.setlocale ()``, par exemple ``en``,"
#~ " ``fr_FR`` ou ``fr_FR.UTF-8``."

#~ msgid "language code."
#~ msgstr "code de langue."

#~ msgid "success status."
#~ msgstr "état succès."

#~ msgid ""
#~ "This sets the translation object "
#~ "``Localisation.translation`` to use a "
#~ "particular language."
#~ msgstr ""
#~ "Ceci définit l'objet de la traduction"
#~ " ``Localisation.translation`` à utiliser une "
#~ "langue particulière."

#~ msgid ""
#~ "The ``lang`` parameter can be any "
#~ "string of the form ``en``, ``en_GB`` "
#~ "or ``en_GB.UTF-8``. Anything after a "
#~ "``.`` character is ignored. In the "
#~ "case of a string such as "
#~ "``en_GB``, the routine will search for"
#~ " an ``en_GB`` language file before "
#~ "searching for an ``en`` one."
#~ msgstr ""
#~ "Le paramètre ``lang`` peut être une "
#~ "chaîne sous la forme ``en``, `` "
#~ "fr_FR`` ou ``fr_FR.UTF-8``. Tout ce qui"
#~ " suit un caractère ``.`` est ignoré."
#~ " Dans le cas d'une chaîne telle "
#~ "que ``fr_FR``, la routine va rechercher"
#~ " un fichier de langue ``fr_FR`` avant"
#~ " de chercher un ``fr``."

#~ msgid ""
#~ "This function reads the language from"
#~ " the configuration file, then calls "
#~ ":func:`SetLocale` and :func:`SetTranslation`."
#~ msgstr ""
#~ "Cette fonction permet de lire la "
#~ "langue à partir du fichier de "
#~ "configuration, puis appel les fonctions "
#~ ":func:`SetLocale` et :func:`SetTranslation`."

#~ msgid "a :class:`pywws.DataStore.params` object."
#~ msgstr "un objet :class:`pywws.DataStore.params`."

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.LogData.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.LogData.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"

#~ msgid ""
#~ ":obj:`datetime <pywws.LogData.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.LogData.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`timedelta <pywws.LogData.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.LogData.timedelta>`\\"

#~ msgid ""
#~ ":obj:`weather_station <pywws.LogData.weather_station>`\\ "
#~ "([ws_type, status, avoid])"
#~ msgstr ""
#~ ":obj:`weather_station <pywws.LogData.weather_station>`\\ "
#~ "([ws_type, status, avoid])"

#~ msgid "Common code for logging info and errors."
#~ msgstr "Code commun pour l'enregistrement d'informations et d'erreurs."

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.Plot.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.Plot.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"

#~ msgid ":obj:`apparent_temp <pywws.Plot.apparent_temp>`\\ (temp, rh, wind)"
#~ msgstr ":obj:`apparent_temp <pywws.Plot.apparent_temp>`\\ (temp, rh, wind)"

#~ msgid "Compute apparent temperature (real feel), using formula from"
#~ msgstr ""
#~ "Calcule la température apparente (sensation"
#~ " réelle), en utilisant la formule de"

#~ msgid ":obj:`cadhumidex <pywws.Plot.cadhumidex>`\\ (temp, humidity)"
#~ msgstr ":obj:`cadhumidex <pywws.Plot.cadhumidex>`\\ (temp, humidité)"

#~ msgid ":obj:`dew_point <pywws.Plot.dew_point>`\\ (temp, hum)"
#~ msgstr ":obj:`dew_point <pywws.Plot.dew_point>`\\ (temp, hum)"

#~ msgid ":obj:`illuminance_wm2 <pywws.Plot.illuminance_wm2>`\\ (lux)"
#~ msgstr ":obj:`illuminance_wm2 <pywws.Plot.illuminance_wm2>`\\ (lux)"

#~ msgid ":obj:`pressure_inhg <pywws.Plot.pressure_inhg>`\\ (hPa)"
#~ msgstr ":obj:`pressure_inhg <pywws.Plot.pressure_inhg>`\\ (hPa)"

#~ msgid ":obj:`pressure_trend_text <pywws.Plot.pressure_trend_text>`\\ (trend)"
#~ msgstr ":obj:`pressure_trend_text <pywws.Plot.pressure_trend_text>`\\ (trend)"

#~ msgid ":obj:`rain_inch <pywws.Plot.rain_inch>`\\ (mm)"
#~ msgstr ":obj:`rain_inch <pywws.Plot.rain_inch>`\\ (mm)"

#~ msgid ":obj:`temp_f <pywws.Plot.temp_f>`\\ (c)"
#~ msgstr ":obj:`temp_f <pywws.Plot.temp_f>`\\ (c)"

#~ msgid ":obj:`usaheatindex <pywws.Plot.usaheatindex>`\\ (temp, humidity, dew)"
#~ msgstr ""
#~ ":obj:`usaheatindex <pywws.Plot.usaheatindex>`\\ (temp, "
#~ "humidité, point de rosée)"

#~ msgid ":obj:`wind_bft <pywws.Plot.wind_bft>`\\ (ms)"
#~ msgstr ":obj:`wind_bft <pywws.Plot.wind_bft>`\\ (ms)"

#~ msgid ":obj:`wind_chill <pywws.Plot.wind_chill>`\\ (temp, wind)"
#~ msgstr ":obj:`wind_chill <pywws.Plot.wind_chill>`\\ (temp, vent)"

#~ msgid "Compute wind chill, using formula from"
#~ msgstr "Calcule le refroidissement éolien, en utilisant la formule de"

#~ msgid ":obj:`wind_kmph <pywws.Plot.wind_kmph>`\\ (ms)"
#~ msgstr ":obj:`wind_kmph <pywws.Plot.wind_kmph>`\\ (ms)"

#~ msgid ":obj:`wind_kn <pywws.Plot.wind_kn>`\\ (ms)"
#~ msgstr ":obj:`wind_kn <pywws.Plot.wind_kn>`\\ (ms)"

#~ msgid ":obj:`wind_mph <pywws.Plot.wind_mph>`\\ (ms)"
#~ msgstr ":obj:`wind_mph <pywws.Plot.wind_mph>`\\ (ms)"

#~ msgid ""
#~ ":obj:`winddir_average <pywws.Plot.winddir_average>`\\ "
#~ "(data, threshold, min_count)"
#~ msgstr ""
#~ ":obj:`winddir_average <pywws.Plot.winddir_average>`\\ "
#~ "(données, seuil, min_count)"

#~ msgid ":obj:`winddir_degrees <pywws.Plot.winddir_degrees>`\\ (pts)"
#~ msgstr ":obj:`winddir_degrees <pywws.Plot.winddir_degrees>`\\ (pts)"

#~ msgid ":obj:`winddir_text <pywws.Plot.winddir_text>`\\ (pts)"
#~ msgstr ":obj:`winddir_text <pywws.Plot.winddir_text>`\\ (pts)"

#~ msgid ""
#~ ":obj:`GraphPlotter <pywws.Plot.GraphPlotter>`\\ (params,"
#~ " status, raw_data, ...)"
#~ msgstr ""
#~ ":obj:`GraphPlotter <pywws.Plot.GraphPlotter>`\\ (params,"
#~ " status, raw_data, ...)"

#~ msgid ":obj:`Record <pywws.Plot.Record>`\\"
#~ msgstr ":obj:`Record <pywws.Plot.Record>`\\"

#~ msgid ""
#~ ":obj:`datetime <pywws.Plot.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.Plot.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`timedelta <pywws.Plot.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.Plot.timedelta>`\\"

#~ msgid "pywws.Process"
#~ msgstr "pywws.Process"

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.Process.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.Process.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"

#~ msgid ""
#~ ":obj:`Process <pywws.Process.Process>`\\ (params, "
#~ "raw_data, calib_data, ...)"
#~ msgstr ""
#~ ":obj:`Process <pywws.Process.Process>`\\ (params, "
#~ "raw_data, calib_data, ...)"

#~ msgid ":obj:`main <pywws.Process.main>`\\ ([argv])"
#~ msgstr ":obj:`main <pywws.Process.main>`\\ ([argv])"

#~ msgid ":obj:`Calib <pywws.Process.Calib>`\\ (params, stored_data)"
#~ msgstr ":obj:`Calib <pywws.Process.Calib>`\\ (params, stored_data)"

#~ msgid ":obj:`date <pywws.Process.date>`\\"
#~ msgstr ":obj:`date <pywws.Process.date>`\\"

#~ msgid ""
#~ ":obj:`datetime <pywws.Process.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.Process.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`deque <pywws.Process.deque>`\\"
#~ msgstr ":obj:`deque <pywws.Process.deque>`\\"

#~ msgid "deque([iterable[, maxlen]]) --> deque object"
#~ msgstr "deque([iterable[, maxlen]]) --> deque object"

#~ msgid ":obj:`timedelta <pywws.Process.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.Process.timedelta>`\\"

#~ msgid ""
#~ "The wind speed and direction of "
#~ "each data item is converted to a"
#~ " vector before averaging, so the "
#~ "result reflects the dominant wind "
#~ "direction during the time period covered"
#~ " by the data."
#~ msgstr ""
#~ "La vitesse et la direction du vent"
#~ " de chaque élément de données sont"
#~ " converties en un vecteur avant le"
#~ " calcul de la moyenne, de sorte "
#~ "que le résultat reflète la direction "
#~ "dominante du vent pendant la période "
#~ "couverte par les données."

#~ msgid ""
#~ "Setting the ``decay`` parameter converts "
#~ "the filter from a simple averager "
#~ "to one where the most recent "
#~ "sample carries the highest weight, and"
#~ " earlier samples have a lower weight"
#~ " according to how long ago they "
#~ "were."
#~ msgstr ""
#~ "La définition du paramètre ``decay`` "
#~ "convertit le filtre d'un simple "
#~ "moyenneur en un filtre où l'échantillon"
#~ " le plus récent a le poids le"
#~ " plus élevé, et les échantillons "
#~ "précédents ont un poids inférieur en "
#~ "fonction de leur ancienneté."

#~ msgid ""
#~ "This process is an approximation of "
#~ "\"exponential smoothing\". See `Wikipedia "
#~ "<http://en.wikipedia.org/wiki/Exponential_smoothing>`_ for "
#~ "a detailed discussion."
#~ msgstr ""
#~ "Ce processus est une approximation du"
#~ " \"lissage exponentiel\". Voir `Wikipedia "
#~ "<https://fr.wikipedia.org/wiki/Lissage_exponentiel>`_ pour "
#~ "une discussion détaillée."

#~ msgid ""
#~ "The parameter ``decay`` corresponds to "
#~ "the value ``(1 - alpha)`` in the"
#~ " Wikipedia description. Because the weather"
#~ " data being smoothed may not be "
#~ "at regular intervals this parameter is"
#~ " the decay over 5 minutes. Weather"
#~ " data at other intervals will have"
#~ " its weight scaled accordingly."
#~ msgstr ""
#~ "Le paramètre ``decay`` correspond à la"
#~ " valeur ``(1 - alpha)`` dans la "
#~ "description Wikipedia. Étant donné que "
#~ "les données météorologiques lissées peuvent"
#~ " ne pas être à intervalles réguliers,"
#~ " ce paramètre correspond à la "
#~ "décroissance sur 5 minutes. Les données"
#~ " météorologiques à d'autres intervalles "
#~ "auront leur poids mis à l'échelle "
#~ "en conséquence."

#~ msgid "The return value is a (speed, direction) tuple."
#~ msgstr "La valeur de retour est un tuple (vitesse, direction)."

#~ msgid "filter coefficient decay rate."
#~ msgstr "taux de décroissance du coefficient de filtre."

#~ msgid ""
#~ "Compute average wind speed and maximum"
#~ " wind gust, find dominant wind "
#~ "direction and compute total rainfall."
#~ msgstr ""
#~ "Calcule la vitesse moyenne du vent "
#~ "et les rafales de vent maximales, "
#~ "trouve la direction des vents dominants"
#~ " et calcule les précipitations totales."

#~ msgid ""
#~ "Compute average wind speed, maximum wind"
#~ " gust and daytime max & nighttime "
#~ "min temperatures, find dominant wind "
#~ "direction and compute total rainfall."
#~ msgstr ""
#~ "Calcule la vitesse moyenne du vent, "
#~ "la rafale maximale et les températures"
#~ " maximum de jour et minimum de "
#~ "nuit, trouve la direction du vent "
#~ "dominant et calcule les précipitations "
#~ "totales."

#~ msgid ""
#~ "Daytime is assumed to be 0900-2100 "
#~ "and nighttime to be 2100-0900, local "
#~ "time (1000-2200 and 2200-1000 during "
#~ "DST), regardless of the \"day end "
#~ "hour\" setting."
#~ msgstr ""
#~ "Le jour est supposé être entre "
#~ "0900-2100 et la nuit entre 2100-0900,"
#~ " heure locale (1000-2200 et 2200-1000 "
#~ "au cours des heures d'été), quelle "
#~ "que soit le réglage de \"day end"
#~ " hour\"."

#~ msgid "Compute daytime max & nighttime min temperatures."
#~ msgstr "Calcule la température maximum le jour et le minimum la nuit."

#~ msgid ""
#~ "The meteorological day end (typically "
#~ "2100 or 0900 local time) is set"
#~ " in the preferences file ``weather.ini``."
#~ " The default value is 2100 (2200 "
#~ "during DST), following the historical "
#~ "convention for weather station readings."
#~ msgstr ""
#~ "La fin de la journée météorologique "
#~ "(généralement 2100 ou 0900 heure locale)"
#~ " se trouve dans le fichier de "
#~ "configuration ``weather.ini``. La valeur par"
#~ " défaut est 2100 (2200 au cours "
#~ "de l'heure d'été), selon la convention"
#~ " historique pour les lectures de la"
#~ " station météo."

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.Reprocess.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.Reprocess.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"

#~ msgid ""
#~ ":obj:`ApplicationLogger "
#~ "<pywws.SetWeatherStation.ApplicationLogger>`\\ (verbose[, "
#~ "logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger "
#~ "<pywws.SetWeatherStation.ApplicationLogger>`\\ (verbose[, "
#~ "logfile])"

#~ msgid ""
#~ ":obj:`datetime <pywws.SetWeatherStation.datetime>`\\ "
#~ "(year, month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.SetWeatherStation.datetime>`\\ "
#~ "(année, mois, jour[, heure[, minute[, "
#~ "...)"

#~ msgid ":obj:`Calib <pywws.Tasks.Calib>`\\ (params, stored_data)"
#~ msgstr ":obj:`Calib <pywws.Tasks.Calib>`\\ (params, stored_data)"

#~ msgid ""
#~ ":obj:`RegularTasks <pywws.Tasks.RegularTasks>`\\ (params,"
#~ " status, raw_data, ...)"
#~ msgstr ""
#~ ":obj:`RegularTasks <pywws.Tasks.RegularTasks>`\\ (params,"
#~ " status, raw_data, ...)"

#~ msgid ""
#~ ":obj:`ToService <pywws.Tasks.ToService>`\\ (params, "
#~ "status, calib_data, ...)"
#~ msgstr ""
#~ ":obj:`ToService <pywws.Tasks.ToService>`\\ (params, "
#~ "status, calib_data, ...)"

#~ msgid ""
#~ ":obj:`datetime <pywws.Tasks.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.Tasks.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`deque <pywws.Tasks.deque>`\\"
#~ msgstr ":obj:`deque <pywws.Tasks.deque>`\\"

#~ msgid ":obj:`timedelta <pywws.Tasks.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.Tasks.timedelta>`\\"

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.Template.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.Template.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"

#~ msgid ":obj:`Zambretti <pywws.Template.Zambretti>`\\ (params, hourly_data)"
#~ msgstr ":obj:`Zambretti <pywws.Template.Zambretti>`\\ (params, hourly_data)"

#~ msgid ""
#~ ":obj:`ZambrettiCode <pywws.Template.ZambrettiCode>`\\ "
#~ "(params, hourly_data)"
#~ msgstr ""
#~ ":obj:`ZambrettiCode <pywws.Template.ZambrettiCode>`\\ "
#~ "(params, hourly_data)"

#~ msgid ":obj:`apparent_temp <pywws.Template.apparent_temp>`\\ (temp, rh, wind)"
#~ msgstr ":obj:`apparent_temp <pywws.Template.apparent_temp>`\\ (temp, hr, vent)"

#~ msgid ":obj:`cadhumidex <pywws.Template.cadhumidex>`\\ (temp, humidity)"
#~ msgstr ":obj:`cadhumidex <pywws.Template.cadhumidex>`\\ (temp, humidité)"

#~ msgid ":obj:`dew_point <pywws.Template.dew_point>`\\ (temp, hum)"
#~ msgstr ":obj:`dew_point <pywws.Template.dew_point>`\\ (temp, hum)"

#~ msgid ":obj:`illuminance_wm2 <pywws.Template.illuminance_wm2>`\\ (lux)"
#~ msgstr ":obj:`illuminance_wm2 <pywws.Template.illuminance_wm2>`\\ (lux)"

#~ msgid ":obj:`pressure_inhg <pywws.Template.pressure_inhg>`\\ (hPa)"
#~ msgstr ":obj:`pressure_inhg <pywws.Template.pressure_inhg>`\\ (hPa)"

#~ msgid ""
#~ ":obj:`pressure_trend_text "
#~ "<pywws.Template.pressure_trend_text>`\\ (trend)"
#~ msgstr ""
#~ ":obj:`pressure_trend_text "
#~ "<pywws.Template.pressure_trend_text>`\\ (trend)"

#~ msgid ":obj:`rain_inch <pywws.Template.rain_inch>`\\ (mm)"
#~ msgstr ":obj:`rain_inch <pywws.Template.rain_inch>`\\ (mm)"

#~ msgid ":obj:`temp_f <pywws.Template.temp_f>`\\ (c)"
#~ msgstr ":obj:`temp_f <pywws.Template.temp_f>`\\ (c)"

#~ msgid ""
#~ ":obj:`usaheatindex <pywws.Template.usaheatindex>`\\ (temp,"
#~ " humidity, dew)"
#~ msgstr ""
#~ ":obj:`usaheatindex <pywws.Template.usaheatindex>`\\ (temp,"
#~ " humidité, point de rosée)"

#~ msgid ":obj:`wind_bft <pywws.Template.wind_bft>`\\ (ms)"
#~ msgstr ":obj:`wind_bft <pywws.Template.wind_bft>`\\ (ms)"

#~ msgid ":obj:`wind_chill <pywws.Template.wind_chill>`\\ (temp, wind)"
#~ msgstr ":obj:`wind_chill <pywws.Template.wind_chill>`\\ (temp, vent)"

#~ msgid ":obj:`wind_kmph <pywws.Template.wind_kmph>`\\ (ms)"
#~ msgstr ":obj:`wind_kmph <pywws.Template.wind_kmph>`\\ (ms)"

#~ msgid ":obj:`wind_kn <pywws.Template.wind_kn>`\\ (ms)"
#~ msgstr ":obj:`wind_kn <pywws.Template.wind_kn>`\\ (ms)"

#~ msgid ":obj:`wind_mph <pywws.Template.wind_mph>`\\ (ms)"
#~ msgstr ":obj:`wind_mph <pywws.Template.wind_mph>`\\ (ms)"

#~ msgid ""
#~ ":obj:`winddir_average <pywws.Template.winddir_average>`\\ "
#~ "(data, threshold, min_count)"
#~ msgstr ""
#~ ":obj:`winddir_average <pywws.Template.winddir_average>`\\ "
#~ "(données, seuil, min_count)"

#~ msgid ":obj:`winddir_degrees <pywws.Template.winddir_degrees>`\\ (pts)"
#~ msgstr ":obj:`winddir_degrees <pywws.Template.winddir_degrees>`\\ (pts)"

#~ msgid ":obj:`winddir_text <pywws.Template.winddir_text>`\\ (pts)"
#~ msgstr ":obj:`winddir_text <pywws.Template.winddir_text>`\\ (pts)"

#~ msgid ""
#~ ":obj:`datetime <pywws.Template.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.Template.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`timedelta <pywws.Template.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.Template.timedelta>`\\"

#~ msgid ""
#~ ":obj:`ApplicationLogger "
#~ "<pywws.TestWeatherStation.ApplicationLogger>`\\ (verbose[, "
#~ "logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger "
#~ "<pywws.TestWeatherStation.ApplicationLogger>`\\ (verbose[, "
#~ "logfile])"

#~ msgid ""
#~ ":obj:`datetime <pywws.TimeZone.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.TimeZone.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid "pywws.ToTwitter"
#~ msgstr "pywws.ToTwitter"

#~ msgid ""
#~ "This module posts a brief message "
#~ "to `Twitter <https://twitter.com/>`_. Before "
#~ "posting to Twitter you need to set"
#~ " up an account and then authorise "
#~ "pywws by running the :py:mod:`TwitterAuth` "
#~ "program. See :doc:`../guides/twitter` for "
#~ "detailed instructions."
#~ msgstr ""
#~ "Ce module poste un bref message "
#~ "sur `Twitter <https://twitter.com/>` _. Avant"
#~ " de poster sur Twitter, vous devez"
#~ " créer un compte et autoriser pywws"
#~ " en exécutant le programme :py: mod:"
#~ " `TwitterAuth`. Voir :doc: `../Guides/twitter`"
#~ " obtenir les instructions détaillées."

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.ToTwitter.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.ToTwitter.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"

#~ msgid ":obj:`main <pywws.ToTwitter.main>`\\ ([argv])"
#~ msgstr ":obj:`main <pywws.ToTwitter.main>`\\ ([argv])"

#~ msgid ":obj:`ToTwitter <pywws.ToTwitter.ToTwitter>`\\ (params)"
#~ msgstr ":obj:`ToTwitter <pywws.ToTwitter.ToTwitter>`\\ (params)"

#~ msgid ":obj:`pct <pywws.ToTwitter.pct>`\\"
#~ msgstr ":obj:`pct <pywws.ToTwitter.pct>`\\"

#~ msgid "alias of :class:`Twitter`"
#~ msgstr "alias de :class:`Twitter`"

#~ msgid "pywws.TwitterAuth"
#~ msgstr "pywws.TwitterAuth"

#~ msgid "Authorise pywws to post to your Twitter account ::"
#~ msgstr "Autorise pywws à publier sur votre compte Twitter::"

#~ msgid ""
#~ "This program authorises :py:mod:`pywws.ToTwitter`"
#~ " to post to a Twitter account. "
#~ "You need to create an account "
#~ "before running :py:mod:`TwitterAuth`. It opens"
#~ " a web browser window (or gives "
#~ "you a URL to copy to your "
#~ "web browser) where you log in to"
#~ " your Twitter account. If the login"
#~ " is successful the browser will "
#~ "display a 7 digit number which you"
#~ " then copy to :py:mod:`TwitterAuth`."
#~ msgstr ""
#~ "Ce programme autorise :py:mod:`pywws.ToTwitter` "
#~ "à poster sur un compte Twitter. "
#~ "Vous devez créer un compte avant "
#~ "de lancer :py:mod:`TwitterAuth`. Il ouvre "
#~ "une fenêtre de navigateur Web (ou "
#~ "vous donne une URL à copier dans"
#~ " votre navigateur) où vous vous "
#~ "connectez à votre compte Twitter. Si "
#~ "la connexion est réussie, le navigateur"
#~ " affichera un nombre à 7 chiffres,"
#~ " que vous devrez copier dans "
#~ ":py:mod:`TwitterAuth`."

#~ msgid ""
#~ "See :doc:`../guides/twitter` for more detail"
#~ " on using Twitter with pywws."
#~ msgstr ""
#~ "Voir :doc:`../guides/twitter` pour plus de "
#~ "détails sur l'utilisation de Twitter "
#~ "avec pywws."

#~ msgid ":obj:`TwitterAuth <pywws.TwitterAuth.TwitterAuth>`\\ (params)"
#~ msgstr ":obj:`TwitterAuth <pywws.TwitterAuth.TwitterAuth>`\\ (params)"

#~ msgid ":obj:`main <pywws.TwitterAuth.main>`\\ ([argv])"
#~ msgstr ":obj:`main <pywws.TwitterAuth.main>`\\ ([argv])"

#~ msgid ":obj:`Twitter <pywws.TwitterAuth.Twitter>`\\"
#~ msgstr ":obj:`Twitter <pywws.TwitterAuth.Twitter>`\\"

#~ msgid ""
#~ ":obj:`ApplicationLogger "
#~ "<pywws.USBQualityTest.ApplicationLogger>`\\ (verbose[, "
#~ "logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger "
#~ "<pywws.USBQualityTest.ApplicationLogger>`\\ (verbose[, "
#~ "logfile])"

#~ msgid ":obj:`main <pywws.USBQualityTest.main>`\\ ([argv])"
#~ msgstr ":obj:`main <pywws.USBQualityTest.main>`\\ ([argv])"

#~ msgid "pywws.Upload"
#~ msgstr "pywws.Upload"

#~ msgid ""
#~ "Login and ftp site details are "
#~ "read from the weather.ini file in "
#~ "data_dir."
#~ msgstr ""
#~ "Le nom d'usager et les détails du"
#~ " site ftp sont lues à partir du"
#~ " fichier weather.ini dans data_dir."

#~ msgid ""
#~ "This module uploads files to (typically)"
#~ " a website *via* ftp/sftp or copies"
#~ " files to a local directory (e.g. "
#~ "if you are running pywws on the"
#~ " your web server). Details of the "
#~ "upload destination are stored in the "
#~ "file ``weather.ini`` in your data "
#~ "directory. The only way to set "
#~ "these details is to edit the file."
#~ " Run :py:mod:`pywws.Upload` once to set "
#~ "the default values, which you can "
#~ "then change. Here is what you're "
#~ "likely to find when you edit "
#~ "``weather.ini``::"
#~ msgstr ""
#~ "Ce module téléverse des fichiers sur "
#~ "(en général) un site Web *via* "
#~ "ftp/sftp ou copie les fichiers dans "
#~ "un répertoire local (par exemple, si "
#~ "vous exécutez pywws sur votre propre "
#~ "serveur web). Les détails de destination"
#~ " de téléversement sont stockés dans "
#~ "le fichier ``weather.ini`` dans votre "
#~ "répertoire de données. La seule façon"
#~ " de régler ces détails est d'éditer"
#~ " le fichier. Exécuter :py:mod:`pywws.Upload` "
#~ "une fois pour définir les valeurs "
#~ "par défaut, que vous pouvez ensuite "
#~ "modifier. Voici ce que vous êtes "
#~ "susceptible de trouver lorsque vous "
#~ "éditez ``weather.ini``::"

#~ msgid ""
#~ "These are, I hope, fairly obvious. "
#~ "The ``local site`` option lets you "
#~ "switch from uploading to a remote "
#~ "site to copying to a local site."
#~ " If you set ``local site = "
#~ "True`` then you can delete the "
#~ "``secure``, ``site``, ``user`` and "
#~ "``password`` lines."
#~ msgstr ""
#~ "Ce sont, je l'espère, des options "
#~ "assez évidentes. ``local site`` vous "
#~ "permet de passer de téléversement sur"
#~ " un site distant, à la copie "
#~ "vers un site local. Si vous réglez"
#~ " ``local site = True``, vous pouvez"
#~ " supprimer les  lignes``secure``, ``site``, "
#~ "``user`` et ``password``."

#~ msgid ""
#~ "``directory`` is the name of a "
#~ "directory in which all the uploaded "
#~ "files will be put. This will "
#~ "depend on the structure of your "
#~ "web site and the sort of host "
#~ "you use. Your hosting provider should"
#~ " be able to tell you what "
#~ "``site`` and ``user`` details to use."
#~ " You should have already chosen a "
#~ "``password``."
#~ msgstr ""
#~ "``directory`` est le nom d'un répertoire"
#~ " dans lequel tous les fichiers "
#~ "téléversés seront déposés. Ce qui "
#~ "dépendra de la structure de votre "
#~ "site et du type d'hôte que vous"
#~ " utilisez. Votre fournisseur d'hébergement "
#~ "doit être en mesure de vous dire"
#~ " ce que vous devez utiliser pour "
#~ "``site`` et ``user``. Vous devriez déjà"
#~ " avoir choisi un ``password``."

#~ msgid ""
#~ "The ``secure`` option lets you switch"
#~ " from normal ftp to sftp (ftp "
#~ "over ssh). Some hosting providers offer"
#~ " this as a more secure upload "
#~ "mechanism, so you should probably use"
#~ " it if available."
#~ msgstr ""
#~ "L'option ``secure`` vous permet de "
#~ "passer de ftp normal à sftp (ftp"
#~ " sur ssh). Certains fournisseurs "
#~ "d'hébergement l'offre comme mécanisme de "
#~ "chargement plus sûr, alors vous devriez"
#~ " probablement l'utiliser lorsque disponible."

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.Upload.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.Upload.ApplicationLogger>`\\ "
#~ "(verbose[, logfile])"

#~ msgid ":obj:`main <pywws.Upload.main>`\\ ([argv])"
#~ msgstr ":obj:`main <pywws.Upload.main>`\\ ([argv])"

#~ msgid ":obj:`Upload <pywws.Upload.Upload>`\\ (params)"
#~ msgstr ":obj:`Upload <pywws.Upload.Upload>`\\ (params)"

#~ msgid ""
#~ ":obj:`USBDevice <pywws.WeatherStation.USBDevice>`\\ "
#~ "(idVendor, idProduct)"
#~ msgstr ""
#~ ":obj:`USBDevice <pywws.WeatherStation.USBDevice>`\\ "
#~ "(idVendor, idProduct)"

#~ msgid ""
#~ ":obj:`datetime <pywws.WeatherStation.datetime>`\\ (year,"
#~ " month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.WeatherStation.datetime>`\\ (année,"
#~ " mois, jour[, heure[, minute[, ...)"

#~ msgid ""
#~ "Loosely modeled on a C++ class "
#~ "obtained from "
#~ "http://site.ambientweatherstore.com/easyweather/ws_1080_2080_protocol.zip."
#~ " I don't know the provenance of "
#~ "this, but it looks as if it "
#~ "may have come from the manufacturer."
#~ msgstr ""
#~ "Vaguement calqué sur une classe C "
#~ "+ + obtenue à partir "
#~ "http://site.ambientweatherstore.com/easyweather/ws_1080_2080_protocol.zip."
#~ " Je n'en sais pas la provenance, "
#~ "mais il semble que cela pourrait "
#~ "provenir du fabricant."

#~ msgid "Read 32 bytes from the weather station."
#~ msgstr "Lit 32 octets à partir de la station météo."

#~ msgid "If the read fails for any reason, :obj:`None` is returned."
#~ msgstr ""
#~ "Si la lecture échoue pour une "
#~ "raison quelconque, :obj:`None` est retourné."

#~ msgid "address to read from."
#~ msgstr "adresse à partir de laquelle lire."

#~ msgid "the data from the weather station."
#~ msgstr "les données de la station météo."

#~ msgid "Write a single byte to the weather station."
#~ msgstr "Écrire un seul octet à la station météo."

#~ msgid "address to write to."
#~ msgstr "adresse à laquelle écrire."

#~ msgid "the value to write."
#~ msgstr "la valeur à écrire."

#~ msgid "Connect to weather station and prepare to read data."
#~ msgstr "Connecte à la station météo et prépare à lire les données."

#~ msgid "Get next circular buffer data pointer."
#~ msgstr "Retourne le pointeur de données suivant du tampon circulaire ."

#~ msgid "Get previous circular buffer data pointer."
#~ msgstr "Obtient le pointeur de donnée du tampon circulaire précédent."

#~ msgid "Get raw data from circular buffer."
#~ msgstr "Obtient les données brutes à partir d'un tampon circulaire."

#~ msgid ""
#~ "If unbuffered is false then a "
#~ "cached value that was obtained earlier"
#~ " may be returned."
#~ msgstr ""
#~ "Si 'unbuffered' est faux, une valeur "
#~ "mise en cache, obtenu précédemment, peut"
#~ " être retourné."

#~ msgid "Get decoded data from circular buffer."
#~ msgstr "Obtenir les données décodées à partir du tampon circulaire."

#~ msgid "Get circular buffer location where current data is being written."
#~ msgstr ""
#~ "Obtenir l'emplacement du tampon circulaire "
#~ "lorsque les données actuelles sont en"
#~ " cours d'écriture."

#~ msgid "Get the raw \"fixed block\" of settings and min/max data."
#~ msgstr "Obtenir le \"bloc fixe\" brut des paramètres et des données MIN/MAX."

#~ msgid "Get the decoded \"fixed block\" of settings and min/max data."
#~ msgstr "Obtient le \"bloc fixe\" décodé des paramètres et des données MIN/MAX."

#~ msgid "A subset of the entire block can be selected by keys."
#~ msgstr "Un sous-ensemble du bloc complet pouvant être sélectionné par clés."

#~ msgid ""
#~ "Write a set of single bytes to "
#~ "the weather station. Data must be "
#~ "an array of (ptr, value) pairs."
#~ msgstr ""
#~ "Écrit un ensemble d'octets unique vers"
#~ " la station météo. Les données "
#~ "doivent être un tableau de (ptr, "
#~ "valeur) paires."

#~ msgid ""
#~ "Sets the text of the compass "
#~ "points. The defaults are 'N', 'S', "
#~ "'E' & 'W'. For graphs in another"
#~ " language you can over-ride this, "
#~ "for example: ``<points>'No', 'Zu', 'Oo', "
#~ "'We'</points>``. (The preferred way to "
#~ "do this is to create a language"
#~ " file, see Localisation.py.)"
#~ msgstr ""
#~ "Définit le texte des points cardinaux."
#~ " Les valeurs par défaut sont 'N', "
#~ "'S', 'E' et 'W'. Pour les "
#~ "graphiques dans une autre langue, vous"
#~ " pouvez les remplacer, par exemple "
#~ "par ceci: ``<points>'No', 'Zu', 'Oo', "
#~ "'We'</points>``. (La meilleure façon de "
#~ "le faire est de créer un fichier"
#~ " de langue, voir Localisation.py.)"

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.WindRose.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.WindRose.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"

#~ msgid ":obj:`apparent_temp <pywws.WindRose.apparent_temp>`\\ (temp, rh, wind)"
#~ msgstr ":obj:`apparent_temp <pywws.WindRose.apparent_temp>`\\ (temp, hr, vent)"

#~ msgid ":obj:`cadhumidex <pywws.WindRose.cadhumidex>`\\ (temp, humidity)"
#~ msgstr ":obj:`cadhumidex <pywws.WindRose.cadhumidex>`\\ (temp, humidité)"

#~ msgid ":obj:`dew_point <pywws.WindRose.dew_point>`\\ (temp, hum)"
#~ msgstr ":obj:`dew_point <pywws.WindRose.dew_point>`\\ (temp, hum)"

#~ msgid ":obj:`illuminance_wm2 <pywws.WindRose.illuminance_wm2>`\\ (lux)"
#~ msgstr ":obj:`illuminance_wm2 <pywws.WindRose.illuminance_wm2>`\\ (lux)"

#~ msgid ":obj:`pressure_inhg <pywws.WindRose.pressure_inhg>`\\ (hPa)"
#~ msgstr ":obj:`pressure_inhg <pywws.WindRose.pressure_inhg>`\\ (hPa)"

#~ msgid ""
#~ ":obj:`pressure_trend_text "
#~ "<pywws.WindRose.pressure_trend_text>`\\ (trend)"
#~ msgstr ""
#~ ":obj:`pressure_trend_text "
#~ "<pywws.WindRose.pressure_trend_text>`\\ (trend)"

#~ msgid ":obj:`rain_inch <pywws.WindRose.rain_inch>`\\ (mm)"
#~ msgstr ":obj:`rain_inch <pywws.WindRose.rain_inch>`\\ (mm)"

#~ msgid ":obj:`temp_f <pywws.WindRose.temp_f>`\\ (c)"
#~ msgstr ":obj:`temp_f <pywws.WindRose.temp_f>`\\ (c)"

#~ msgid ""
#~ ":obj:`usaheatindex <pywws.WindRose.usaheatindex>`\\ (temp,"
#~ " humidity, dew)"
#~ msgstr ""
#~ ":obj:`usaheatindex <pywws.WindRose.usaheatindex>`\\ (temp,"
#~ " humidité, point de rosée)"

#~ msgid ":obj:`wind_bft <pywws.WindRose.wind_bft>`\\ (ms)"
#~ msgstr ":obj:`wind_bft <pywws.WindRose.wind_bft>`\\ (ms)"

#~ msgid ":obj:`wind_chill <pywws.WindRose.wind_chill>`\\ (temp, wind)"
#~ msgstr ":obj:`wind_chill <pywws.WindRose.wind_chill>`\\ (temp, vent)"

#~ msgid ":obj:`wind_kmph <pywws.WindRose.wind_kmph>`\\ (ms)"
#~ msgstr ":obj:`wind_kmph <pywws.WindRose.wind_kmph>`\\ (ms)"

#~ msgid ":obj:`wind_kn <pywws.WindRose.wind_kn>`\\ (ms)"
#~ msgstr ":obj:`wind_kn <pywws.WindRose.wind_kn>`\\ (ms)"

#~ msgid ":obj:`wind_mph <pywws.WindRose.wind_mph>`\\ (ms)"
#~ msgstr ":obj:`wind_mph <pywws.WindRose.wind_mph>`\\ (ms)"

#~ msgid ""
#~ ":obj:`winddir_average <pywws.WindRose.winddir_average>`\\ "
#~ "(data, threshold, min_count)"
#~ msgstr ""
#~ ":obj:`winddir_average <pywws.WindRose.winddir_average>`\\ "
#~ "(données, seuil, min_count)"

#~ msgid ":obj:`winddir_degrees <pywws.WindRose.winddir_degrees>`\\ (pts)"
#~ msgstr ":obj:`winddir_degrees <pywws.WindRose.winddir_degrees>`\\ (pts)"

#~ msgid ":obj:`winddir_text <pywws.WindRose.winddir_text>`\\ (pts)"
#~ msgstr ":obj:`winddir_text <pywws.WindRose.winddir_text>`\\ (pts)"

#~ msgid ""
#~ ":obj:`BasePlotter <pywws.WindRose.BasePlotter>`\\ (params,"
#~ " status, raw_data, ...)"
#~ msgstr ""
#~ ":obj:`BasePlotter <pywws.WindRose.BasePlotter>`\\ (params,"
#~ " status, raw_data, ...)"

#~ msgid ""
#~ ":obj:`datetime <pywws.WindRose.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.WindRose.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`timedelta <pywws.WindRose.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.WindRose.timedelta>`\\"

#~ msgid "pywws.YoWindow"
#~ msgstr "pywws.YoWindow"

#~ msgid "Generate YoWindow XML file ::"
#~ msgstr "Génére un fichier XML YoWindow ::"

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.YoWindow.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.YoWindow.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"

#~ msgid ":obj:`apparent_temp <pywws.YoWindow.apparent_temp>`\\ (temp, rh, wind)"
#~ msgstr ":obj:`apparent_temp <pywws.YoWindow.apparent_temp>`\\ (temp, hr, vent)"

#~ msgid ":obj:`main <pywws.YoWindow.main>`\\ ([argv])"
#~ msgstr ":obj:`main <pywws.YoWindow.main>`\\ ([argv])"

#~ msgid ":obj:`YoWindow <pywws.YoWindow.YoWindow>`\\ (calib_data)"
#~ msgstr ":obj:`YoWindow <pywws.YoWindow.YoWindow>`\\ (calib_data)"

#~ msgid "Class to write YoWindow XML file."
#~ msgstr "Classe pour écrire un fichier XML YoWindow."

#~ msgid ""
#~ ":obj:`datetime <pywws.YoWindow.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.YoWindow.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`timedelta <pywws.YoWindow.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.YoWindow.timedelta>`\\"

#~ msgid ""
#~ "Class to write YoWindow XML file. "
#~ "For file spec see "
#~ "http://yowindow.com/doc/yowindow_pws_format.xml"
#~ msgstr ""
#~ "Classe pour écrire un fichier XML "
#~ "YoWindow. Pour voir les spécifications "
#~ "du fichier http://yowindow.com/doc/yowindow_pws_format.xml"

#~ msgid "pywws.ZambrettiCore"
#~ msgstr "pywws.ZambrettiCore"

#~ msgid ""
#~ ":obj:`ZambrettiCode <pywws.ZambrettiCore.ZambrettiCode>`\\ "
#~ "(pressure, month, wind, trend)"
#~ msgstr ""
#~ ":obj:`ZambrettiCode <pywws.ZambrettiCore.ZambrettiCode>`\\ "
#~ "(pression, mois, vent, tendance)"

#~ msgid ":obj:`ZambrettiText <pywws.ZambrettiCore.ZambrettiText>`\\ (letter)"
#~ msgstr ":obj:`ZambrettiText <pywws.ZambrettiCore.ZambrettiText>`\\ (lettre)"

#~ msgid ":obj:`main <pywws.ZambrettiCore.main>`\\ ([argv])"
#~ msgstr ":obj:`main <pywws.ZambrettiCore.main>`\\ ([argv])"

#~ msgid ""
#~ "Simple implementation of Zambretti forecaster"
#~ " algorithm. Inspired by beteljuice.com Java"
#~ " algorithm, as converted to Python by"
#~ " honeysucklecottage.me.uk, and further "
#~ "information from "
#~ "http://www.meteormetrics.com/zambretti.htm"
#~ msgstr ""
#~ "Mise en œuvre simple de l'algorithme "
#~ "de prévision Zambretti. Inspiré par "
#~ "algorithme Java de beteljuice.com, telle "
#~ "que convertie en Python par "
#~ "honeysucklecottage.me.uk, et d'autres informations"
#~ " à partir de "
#~ "http://www.meteormetrics.com/zambretti.htm"

#~ msgid ""
#~ "This class sets the relative pressure,"
#~ " using a pressure offset originally "
#~ "read from the weather station. This "
#~ "is the bare minimum 'calibration' "
#~ "required."
#~ msgstr ""
#~ "Cette classe définit la pression "
#~ "relative, en utilisant un décalage de"
#~ " pression lu à l'origine à partir "
#~ "de la station météo. Il s'agit du"
#~ " \"calibrage\" minimum requis."

#~ msgid ""
#~ "Other pywws modules use this method "
#~ "to create a calibration object. The "
#~ "constructor creates either a default "
#~ "calibration object or a user calibration"
#~ " object, depending on the ``user_calib``"
#~ " value in the ``[paths]`` section of"
#~ " the ``params`` parameter. It then "
#~ "adopts the calibration object's "
#~ ":py:meth:`calib` method as its own."
#~ msgstr ""
#~ "D'autres modules pywws utilisent cette "
#~ "méthode pour créer un objet de "
#~ "calibration. Le constructeur crée soit "
#~ "un objet de calibration par défaut "
#~ "ou un objet de calibration utilisateur,"
#~ " en fonction de la valeur "
#~ "``user_calib`` dans la section ``[paths]`` "
#~ "du paramètre ``params``. Il adopte alors"
#~ " la méthode de calibration de l'objet"
#~ " :py: meth:`calib` comme sien."

#~ msgid ":obj:`timedelta <pywws.constants.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.constants.timedelta>`\\"

#~ msgid ""
#~ "The return value is in degrees, "
#~ "not the 0..15 range used elsewhere "
#~ "in pywws."
#~ msgstr ""
#~ "La valeur de retour est en degrés,"
#~ " pas la plage 0..15 utilisée ailleurs"
#~ " dans pywws."

#~ msgid "a slice of pywws raw/calib or hourly data."
#~ msgstr "une tranche de données pywws brutes/calibrées ou horaires."

#~ msgid "minimum average windspeed for there to be a valid wind direction."
#~ msgstr ""
#~ "vitesse moyenne minimale du vent pour"
#~ " qu'il y ait une direction du "
#~ "vent valide."

#~ msgid "minimum number of data items for there to be a valid wind direction."
#~ msgstr ""
#~ "nombre minimum d'éléments de données "
#~ "pour qu'il y ait une direction du"
#~ " vent valide."

#~ msgid ""
#~ "See http://en.wikipedia.org/wiki/Heat_index, formula "
#~ "1. The formula is not valid for"
#~ " T < 26.7C, Dew Point < 12C,"
#~ " or RH < 40%"
#~ msgstr ""
#~ "Voir  http://en.wikipedia.org/wiki/Heat_index, formule "
#~ "1. La formule n'est pas valide "
#~ "pour T < 26.7C, Point de rosée "
#~ "< 12C, ou HR < 40%"

#~ msgid ":obj:`find_library <pywws.device_ctypes_hidapi.find_library>`\\ (name)"
#~ msgstr ":obj:`find_library <pywws.device_ctypes_hidapi.find_library>`\\ (name)"

#~ msgid "the USB \"vendor ID\" number, for example 0x1941."
#~ msgstr "le numéro USB \"vendor ID\", par exemple 0x1941."

#~ msgid "the USB \"product ID\" number, for example 0x8021."
#~ msgstr "le numéro \"product ID\" USB, par exemple 0x8021."

#~ msgid "Receive data from the device."
#~ msgstr "Reçoit des données de l'appareil."

#~ msgid ""
#~ "If the read fails for any reason,"
#~ " an :obj:`IOError` exception is raised."
#~ msgstr ""
#~ "Si la lecture échoue pour une "
#~ "raison quelconque, une exception "
#~ ":obj:`IOError` est levée."

#~ msgid "the number of bytes to read."
#~ msgstr "le nombre d'octets à lire."

#~ msgid "the data received."
#~ msgstr "les données reçues."

#~ msgid "Send data to the device."
#~ msgstr "Envoyer donnée au service."

#~ msgid ""
#~ "If the write fails for any reason,"
#~ " an :obj:`IOError` exception is raised."
#~ msgstr ""
#~ "Si l'écriture échoue pour une raison "
#~ "quelconque, une exception :obj:`IOError` est"
#~ " levée."

#~ msgid ""
#~ ":obj:`ApplicationLogger "
#~ "<pywws.livelogdaemon.ApplicationLogger>`\\ (verbose[, "
#~ "logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger "
#~ "<pywws.livelogdaemon.ApplicationLogger>`\\ (verbose[, "
#~ "logfile])"

#~ msgid ":obj:`LiveLog <pywws.livelogdaemon.LiveLog>`\\ (data_dir)"
#~ msgstr ":obj:`LiveLog <pywws.livelogdaemon.LiveLog>`\\ (data_dir)"

#~ msgid ":obj:`DaemonRunner <pywws.livelogdaemon.DaemonRunner>`\\"
#~ msgstr ":obj:`DaemonRunner <pywws.livelogdaemon.DaemonRunner>`\\"

#~ msgid "alias of :class:`Dummy`"
#~ msgstr "alias de :class:`Dummy`"

#~ msgid ""
#~ ":obj:`Runner <pywws.livelogdaemon.Runner>`\\ (data_dir,"
#~ " action, files_preserve, ...)"
#~ msgstr ""
#~ ":obj:`Runner <pywws.livelogdaemon.Runner>`\\ (data_dir,"
#~ " action, files_preserve, ...)"

#~ msgid "Post weather update to services such as Weather Underground ::"
#~ msgstr ""
#~ "Poster des mise à jour météo pour"
#~ " des services tels que Weather "
#~ "Underground ::"

#~ msgid ""
#~ "There are an increasing number of "
#~ "web sites around the world that "
#~ "encourage amateur weather station owners "
#~ "to upload data over the internet."
#~ msgstr ""
#~ "Il existe un nombre croissant de "
#~ "sites Web dans le monde qui "
#~ "encouragent les propriétaires de stations "
#~ "météorologiques amateurs à télécharger des "
#~ "données sur Internet."

#~ msgid ""
#~ "This module enables pywws to upload "
#~ "readings to these organisations. It is"
#~ " highly customisable using configuration "
#~ "files. Each 'service' requires a "
#~ "configuration file and one or two "
#~ "templates in ``pywws/services`` (that should"
#~ " not need to be edited by the"
#~ " user) and a section in "
#~ "``weather.ini`` containing user specific data"
#~ " such as your site ID and "
#~ "password."
#~ msgstr ""
#~ "Ce module permet à pywws de "
#~ "télécharger des lectures vers ces "
#~ "organisations. Il est hautement "
#~ "personnalisable à l'aide de fichiers de"
#~ " configuration. Chaque 'service' nécessite "
#~ "un fichier de configuration et un "
#~ "ou deux gabarits dans ``pywws/services`` "
#~ "(qui ne devraient pas avoir besoin "
#~ "d'être modifiés par l'utilisateur) et "
#~ "une section dans ``weather.ini`` contenant "
#~ "des données spécifiques à l'utilisateur "
#~ "telles que votre identifiant de site "
#~ "et votre mot de passe."

#~ msgid ""
#~ "See :ref:`How to integrate pywws with"
#~ " various weather services <guides-"
#~ "integration-other>` for details of the "
#~ "available services."
#~ msgstr ""
#~ "Voir :ref:`Comment intégrer pywws avec "
#~ "divers services météorologiques <guides-"
#~ "integration-other>` pour plus de détails"
#~ " sur les services disponibles."

#~ msgid "Configuration"
#~ msgstr "Configuration"

#~ msgid ""
#~ "If you haven't already done so, "
#~ "visit the organisation's web site and"
#~ " create an account for your weather"
#~ " station. Make a note of any "
#~ "site ID and password details you "
#~ "are given."
#~ msgstr ""
#~ "Si vous ne l'avez pas déjà fait,"
#~ " visitez le site Web de "
#~ "l'organisation et créez un compte pour"
#~ " votre station météo. Prenez note de"
#~ " tous les détails d'identification du "
#~ "site et du mot de passe vous "
#~ "ayant été donnés."

#~ msgid ""
#~ "Stop any pywws software that is "
#~ "running and then run ``toservice`` to"
#~ " create a section in ``weather.ini``::"
#~ msgstr ""
#~ "Arrêtez toute instance du logiciel pywws"
#~ " en fonction puis exécutez ``toservice.py``"
#~ " pour créer une section dans le "
#~ "fichier ``weather.ini``::"

#~ msgid ""
#~ "``service_name`` is the single word "
#~ "service name used by pywws, such "
#~ "as ``metoffice``, ``data_dir`` is your "
#~ "weather data directory, as usual."
#~ msgstr ""
#~ "``service_name`` est le nom du service"
#~ " en un seul mot utilisé par "
#~ "pywws, tel que ``metoffice``, ``data_dir`` "
#~ "est votre répertoire de données météo,"
#~ " comme d'habitude."

#~ msgid ""
#~ "Edit ``weather.ini`` and find the "
#~ "section corresponding to the service "
#~ "name, e.g. ``[underground]``. Copy your "
#~ "site details into this section, for "
#~ "example::"
#~ msgstr ""
#~ "Editer le fichier ``weather.ini`` et "
#~ "trouver la section correspondant au nom"
#~ " du service, par exemple, "
#~ "``[underground]``. Copier les détails de "
#~ "votre site dans cette section, par "
#~ "exemple::"

#~ msgid "Now you can test your configuration::"
#~ msgstr "Maintenant, vous pouvez tester votre configuration::"

#~ msgid ""
#~ "This should show you the data "
#~ "string that is uploaded. Any failure "
#~ "should generate an error message."
#~ msgstr ""
#~ "Celà devrait vous afficher la chaîne "
#~ "de données qui est téléversé. Tout "
#~ "manquement devrait générer un message "
#~ "d'erreur."

#~ msgid "Upload old data"
#~ msgstr "Téléverser les anciennes données"

#~ msgid ""
#~ "Now you can upload your last 7 "
#~ "days' data, if the service supports "
#~ "it. Run ``toservice`` with the catchup"
#~ " option::"
#~ msgstr ""
#~ "Vous pouvez maintenant télécharger vos "
#~ "données des 7 derniers jours, si "
#~ "le service le prend en charge. "
#~ "Lancez ``toservice`` avec l'option catchup "
#~ "::"

#~ msgid "This may take 20 minutes or more, depending on how much data you have."
#~ msgstr ""
#~ "Cela peut prendre 20 minutes ou "
#~ "plus, en fonction de la quantité "
#~ "de données que vous avez."

#~ msgid "Add service(s) upload to regular tasks"
#~ msgstr "Ajoutez le(s) téléversement de(s) service(s) aux tâches régulières"

#~ msgid ""
#~ "Edit your ``weather.ini`` again, and add"
#~ " a list of services to the "
#~ "``[live]``, ``[logged]``, ``[hourly]``, ``[12 "
#~ "hourly]`` or ``[daily]`` section, depending"
#~ " on how often you want to send"
#~ " data. For example::"
#~ msgstr ""
#~ "Modifiez votre fichier ``weather.ini`` de "
#~ "nouveau et ajoutez une liste de "
#~ "services dans la section ``[live]``, "
#~ "``[logged]``, ``[hourly]``, ``[12 hourly]`` ou"
#~ " ``[daily]``, en fonction de la "
#~ "fréquence à laquelle vous souhaitez "
#~ "envoyer les données. Par exemple::"

#~ msgid ""
#~ "Note that the ``[live]`` section is "
#~ "only used when running "
#~ ":py:mod:`pywws.LiveLog`. It is a good "
#~ "idea to repeat any service selected "
#~ "in ``[live]`` in the ``[logged]`` or "
#~ "``[hourly]`` section in case you switch"
#~ " to running :py:mod:`pywws.Hourly`."
#~ msgstr ""
#~ "Notez que la section ``[live]`` n'est"
#~ " utilisée que lors de l'exécution de"
#~ " :py:mod:`pywws.LiveLog`. C'est une bonne "
#~ "idée de répéter tout service sélectionné"
#~ " dans ``[live]`` dans la section "
#~ "``[logged]`` ou ``[hourly]`` au cas où"
#~ " vous passeriez à l'exécution de "
#~ ":py:mod:`pywws.Hourly`."

#~ msgid ""
#~ "Restart your regular pywws program "
#~ "(:py:mod:`pywws.Hourly` or :py:mod:`pywws.LiveLog`) "
#~ "and visit the appropriate web site "
#~ "to see regular updates from your "
#~ "weather station."
#~ msgstr ""
#~ "Redémarrez votre programme pywws habituel "
#~ "(:py:mod:`pywws.Hourly` ou :py:mod:`pywws.LiveLog`) "
#~ "et visitez le site Web approprié "
#~ "pour voir les mises à jour "
#~ "régulières de votre station météo."

#~ msgid "Using a different template"
#~ msgstr "Utiliser un gabarit différent"

#~ msgid ""
#~ "For some services (mainly MQTT) you "
#~ "might want to write your own "
#~ "template to give greater control over"
#~ " the uploaded data. Copy the default"
#~ " template file from ``pywws/services`` to"
#~ " your template directory and then "
#~ "edit it to do what you want. "
#~ "Now edit ``weather.ini`` and change the"
#~ " ``template`` value from ``default`` to "
#~ "the name of your custom template."
#~ msgstr ""
#~ "Pour certains services (principalement MQTT),"
#~ " vous souhaiterez peut-être écrire "
#~ "votre propre gabarit pour donner un "
#~ "meilleur contrôle sur les données "
#~ "téléchargées. Copiez le fichier de "
#~ "gabarit par défaut de ``pywws/services`` "
#~ "dans votre répertoire de gabarits, puis"
#~ " modifiez-le pour faire ce que "
#~ "vous souhaitez. Maintenant éditez "
#~ "``weather.ini`` et changez la valeur "
#~ "``template`` de ``default`` au nom de"
#~ " votre gabarit personnalisé."

#~ msgid ""
#~ ":obj:`ApplicationLogger <pywws.toservice.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"
#~ msgstr ""
#~ ":obj:`ApplicationLogger <pywws.toservice.ApplicationLogger>`\\"
#~ " (verbose[, logfile])"

#~ msgid ""
#~ ":obj:`SafeConfigParser <pywws.toservice.SafeConfigParser>`\\ "
#~ "([defaults, dict_type, ...])"
#~ msgstr ""
#~ ":obj:`SafeConfigParser <pywws.toservice.SafeConfigParser>`\\ "
#~ "([defaults, dict_type, ...])"

#~ msgid ""
#~ ":obj:`ToService <pywws.toservice.ToService>`\\ (params,"
#~ " status, calib_data, ...)"
#~ msgstr ""
#~ ":obj:`ToService <pywws.toservice.ToService>`\\ (params,"
#~ " status, calib_data, ...)"

#~ msgid ""
#~ ":obj:`datetime <pywws.toservice.datetime>`\\ (year, "
#~ "month, day[, hour[, minute[, ...)"
#~ msgstr ""
#~ ":obj:`datetime <pywws.toservice.datetime>`\\ (année, "
#~ "mois, jour[, heure[, minute[, ...)"

#~ msgid ":obj:`timedelta <pywws.toservice.timedelta>`\\"
#~ msgstr ":obj:`timedelta <pywws.toservice.timedelta>`\\"

#~ msgid "pywws configuration."
#~ msgstr "configuration pywws."

#~ msgid "pywws status store."
#~ msgstr "magasin d'état pywws."

#~ msgid "'calibrated' data."
#~ msgstr "données \"calibrées\"."

#~ msgid "Prepare a weather data record."
#~ msgstr "Prépare un enregistrement des données météorologiques."

#~ msgid ""
#~ "The :obj:`data` parameter contains the "
#~ "data to be encoded. It should be"
#~ " a 'calibrated' data record, as "
#~ "stored in :class:`pywws.DataStore.calib_store`. The"
#~ " relevant data items are extracted "
#~ "and converted to strings using a "
#~ "template, then merged with the station's"
#~ " \"fixed\" data."
#~ msgstr ""
#~ "Le paramètre :obj:`data` contient les "
#~ "données à encoder. Il doit s'agir "
#~ "d'un enregistrement de données « calibré"
#~ " », tel qu'il est stocké dans "
#~ ":class:`pywws.DataStore.calib_store`. Les éléments "
#~ "de données pertinents sont extraits et"
#~ " convertis en chaînes à l'aide d'un"
#~ " gabarit, puis fusionnés avec les "
#~ "données \"fixes\" de la station."

#~ msgid "the weather data record."
#~ msgstr "l'enregistrement des données météorologiques."

#~ msgid "dict."
#~ msgstr "dict."

#~ msgid "Upload a weather data record using APRS."
#~ msgstr ""
#~ "Télécharge un enregistrement de données "
#~ "météorologiques à l'aide de l'APRS."

#~ msgid ""
#~ "The :obj:`prepared_data` parameter contains "
#~ "the data to be uploaded. It should"
#~ " be a dictionary of string keys "
#~ "and string values."
#~ msgstr ""
#~ "Le paramètre :obj:`prepared_data` contient les"
#~ " données à télécharger. Il doit "
#~ "s'agir d'un dictionnaire de clés de "
#~ "chaîne et de valeurs de chaîne."

#~ msgid "the timestamp of the data to upload."
#~ msgstr "l'horodatage des données à téléverser."

#~ msgid "the data to upload."
#~ msgstr "la donnée à téléverser."

#~ msgid "don't get or set the 'last update' status.ini entry."
#~ msgstr "n'obtient pas ou ne définis pas l'entrée 'last update' dans status.ini."

#~ msgid "success status"
#~ msgstr "état succès"

#~ msgid "Get weather data records to upload."
#~ msgstr "Obtien les enregistrements de données météorologiques à téléverser."

#~ msgid ""
#~ "This method returns either the most "
#~ "recent weather data record, or all "
#~ "records since the last upload, according"
#~ " to the value of :obj:`catchup`."
#~ msgstr ""
#~ "Cette méthode renvoie soit l'enregistrement"
#~ " de données météorologiques le plus "
#~ "récent, soit tous les enregistrements "
#~ "depuis le dernier téléchargement, selon "
#~ "la valeur de :obj:`catchup`."

#~ msgid ""
#~ "``True`` to get all records since "
#~ "last upload, or ``False`` to get "
#~ "most recent data only."
#~ msgstr ""
#~ "``True`` pour obtenir tous les "
#~ "enregistrements depuis le dernier "
#~ "téléchargement, ou ``False`` pour obtenir "
#~ "uniquement les données les plus "
#~ "récentes."

#~ msgid "a current 'live' data record, or ``None``."
#~ msgstr "un enregistrement de données 'actif' actuel, ou ``None``."

#~ msgid "don't get the 'last update' status.ini entry."
#~ msgstr "n'obtient pas l'entrée 'last update' dans status.ini."

#~ msgid "Upload one or more weather data records."
#~ msgstr "Téléverse un ou plusieurs enregistrement(s) de données météo."

#~ msgid ""
#~ "This method uploads either the most "
#~ "recent weather data record, or all "
#~ "records since the last upload (up "
#~ "to 7 days), according to the value"
#~ " of :obj:`catchup`."
#~ msgstr ""
#~ "Cette méthode téléverse le plus récent"
#~ " enregistrement de données météo ou "
#~ "tous les enregistrements depuis le "
#~ "dernier téléchargement (jusqu'à 7 jours), "
#~ "selon la valeur de :obj:`catchup`."

#~ msgid ""
#~ "It sets the ``last update`` "
#~ "configuration value to the time stamp"
#~ " of the most recent record "
#~ "successfully uploaded."
#~ msgstr ""
#~ "Il définit la valeur de configuration"
#~ " ``last update`` à l'horodatage de "
#~ "l'enregistrement le plus récent correctement"
#~ " téléversé."

#~ msgid "upload all data since last upload."
#~ msgstr "téléverser toutes les données depuis le dernier téléversement."

#~ msgid ""
#~ "current 'live' data. If not present "
#~ "the most recent logged data is "
#~ "uploaded."
#~ msgstr ""
#~ "données \"en direct\" actuelles. Si "
#~ "elles ne sont pas présentes, les "
#~ "données enregistrées les plus récentes "
#~ "sont téléchargées."

